{"version":3,"sources":["/home/nick/Documents/GitHub/Design/angular-src/src/$_gendir lazy","/home/nick/Documents/GitHub/Design/angular-src/src/app/app.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/app.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/app.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/app.module.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.css","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.html","/home/nick/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/guards/auth.guard.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/services/auth.service.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/services/bid.service.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/services/customer.service.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/services/inquiry.service.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/services/job.service.ts","/home/nick/Documents/GitHub/Design/angular-src/src/app/services/material.service.ts","/home/nick/Documents/GitHub/Design/angular-src/src/environments/environment.ts","/home/nick/Documents/GitHub/Design/angular-src/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\" style=\\\"padding-top: 80px; padding-bottom: 20px;\\\">\\n    <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\n// import { Ng2FileInputModule } from 'ng2-file-input';\nimport { FileSelectDirective}  from 'ng2-file-upload';\n//import { DataTableModule } from 'angular-4-data-table';\nimport { DataTablesModule } from 'angular-datatables';\n import { Ng2FileTreeModule } from 'ng2-file-tree/ng2-file-tree';\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//import { MdSidenavModule, MdToolbarModule, MdIconModule, MdButtonModule, MdMenuModule } from '@angular/material';\n//import { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CustomersComponent } from './components/customers/customers.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { InquiriesComponent } from './components/inquiries/inquiries.component';\nimport { BidsComponent } from './components/bids/bids.component';\nimport { JobsComponent } from './components/jobs/jobs.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { CreateBidComponent } from './components/create-bid/create-bid.component';\nimport { MaterialsComponent } from './components/materials/materials.component';\nimport { BidComponent } from './components/bid/bid.component';\nimport { InquiryComponent } from './components/inquiry/inquiry.component';\nimport { JobComponent } from './components/job/job.component';\n\nimport { CustomerService } from './services/customer.service';\nimport { InquiryService } from './services/inquiry.service';\nimport { BidService } from './services/bid.service';\nimport { JobService } from './services/job.service';\nimport { MaterialService } from './services/material.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { CookieService } from 'ngx-cookie-service';\n\nconst appRoutes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'customers', component: CustomersComponent, canActivate: [AuthGuard] },\n  { path: 'customers/:id', component: CustomerComponent, canActivate: [AuthGuard] },\n  { path: 'inquiries', component: InquiriesComponent, canActivate: [AuthGuard] },\n  { path: 'bids', component: BidsComponent, canActivate: [AuthGuard] },\n  { path: 'jobs', component: JobsComponent, canActivate: [AuthGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\n  { path: 'create-bid/:id', component: CreateBidComponent, canActivate: [AuthGuard] },\n  { path: 'materials', component: MaterialsComponent, canActivate: [AuthGuard] },\n  { path: 'bids/:id', component: BidComponent, canActivate: [AuthGuard] },\n  { path: 'inquiries/:id', component: InquiryComponent, canActivate: [AuthGuard] },\n  { path: 'jobs/:id', component: JobComponent, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CustomersComponent,\n    LoginComponent,\n    RegisterComponent,\n    InquiriesComponent,\n    BidsComponent,\n    JobsComponent,\n    CustomerComponent,\n    CreateBidComponent,\n    MaterialsComponent,\n    BidComponent,\n    InquiryComponent,\n    JobComponent,\n    FileSelectDirective\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpModule,\n    FormsModule,\n    DataTablesModule,\n    Ng2FileTreeModule\n    // Ng2FileInputModule.forRoot(\n    //   {\n    //     browseText: \"Browse\",\n    //     removeText: \"Remove\",\n    //     invalidFileText: \"You have picked an invalid or disallowed file.\",\n    //     invalidFileTimeout: 8000,\n    //     removable: true,\n    //     multiple: false,\n    //     showPreviews: true,\n    //     extensions: ['jpg'],\n    //   },\n    // ),\n    //DataTablesModule\n    //BrowserAnimationsModule,\n    //FlexLayoutModule,\n    /*MdSidenavModule,\n    MdToolbarModule,\n    MdIconModule,\n    MdButtonModule,\n    MdMenuModule*/\n  ],\n  providers: [\n    CustomerService,\n    InquiryService,\n    BidService,\n    JobService,\n    MaterialService,\n    AuthService,\n    AuthGuard,\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.css\n// module id = ../../../../../src/app/components/bid/bid.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/bids']\\\">Go To Bids</button>\\n</div>\\n\\n<h2 class=\\\"page-header col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">Bid #{{bid[0].bidID}}</h2>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Customer Details</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Name</th>\\n            <th>Address</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>{{bid[0].customerID}}</td>\\n            <td>{{bid[0].customerName}}</td>\\n            <td>{{bid[0].customerAddress}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/customers/'+bid[0].customerID]\\\">\\n        <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Open Customer</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <ng-container *ngIf=\\\"bid; else noBid\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Bid Details</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th>Price</th>\\n              <th>Created Date</th>\\n              <th>Accepted/Declined Date</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td>{{bid[0].bidPrice | currency: 'USD':true}}</td>\\n              <td>{{bid[0].createdDate | date: 'MM/dd/yyyy'}}</td>\\n              <td>{{bid[0].endDate | date: 'MM/dd/yyyy'}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <h4 class=\\\"page-header\\\">Costs</h4>\\n        <label>Labor Cost</label>\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <tbody>\\n            <tr>\\n              <td>{{bid[0].bidLabor | currency: 'USD':true}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <hr>\\n        <label *ngIf=\\\"bidMaterials[0] != null;\\\">Materials Cost</label>\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <thead *ngIf=\\\"bidMaterials[0] != null;\\\">\\n            <tr>\\n              <th>Material</th>\\n              <th>Quantity</th>\\n              <th>Per Unit Cost</th>\\n              <th></th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let bidMaterial of bidMaterials\\\">\\n              <td>{{bidMaterial.materialName}}</td>\\n              <td>{{bidMaterial.quantity}}</td>\\n              <td>{{bidMaterial.perUnitCost | currency: 'USD':true}}</td>\\n              <td>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-toggle=\\\"modal\\\" href='#delete-material-modal'>&times;</button>\\n              </td>\\n              <!--                Delete Bid Popup                -->\\n              <div class=\\\"modal fade\\\" id=\\\"delete-material-modal\\\">\\n                <div class=\\\"modal-dialog\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n                      <h4 class=\\\"modal-title\\\">Warning</h4>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                      <p>Are you sure you want to delete this material from the current bid?</p>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteBidMaterial(bidMaterial.materialID, bidMaterial.bidID)\\\">Yes</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <button *ngIf=\\\"status == 'PENDING'\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#create-job-modal'>\\n          <span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Create Job</button>\\n        <!-- <button *ngIf=\\\"status == 'PENDING'\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#update-bid-modal'> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#update-bid-modal'>\\n          <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Bid</button>\\n        <button class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-bid-modal'>\\n          <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Bid</button>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-template #noBid>\\n    <h2 class=\\\"page-header\\\">No Bids</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </ng-template>\\n</div>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Inquiry Details</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Received Date</th>\\n            <th>Accepted Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>{{bid[0].inquiryReceivedDate | date: 'MM/dd/yyyy'}}</td>\\n            <td>{{bid[0].inquiryEndDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <h4 class=\\\"page-header\\\">Description</h4>\\n      <p>{{bid[0].description}}</p>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/inquiries/'+bid[0].inquiryID]\\\">\\n        <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Open Inquiry</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <h2 class=\\\"page-header\\\">Update Bid</h2>\\n  <form (submit)=\\\"onUpdate()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Change Bid Price</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"bidPrice\\\" name=\\\"bidPrice\\\" placeholder=\\\"Bid Price\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Change Labor Cost</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"bidLabor\\\" name=\\\"laborCost\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    <label>Add Materials</label>\\n    <div class=\\\"dropdown\\\">\\n      <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">Materials<span class=\\\"caret\\\"></span></button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\n          <li *ngFor=\\\"let material of materials; let i = index\\\"><a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a></li>\\n        </ng-container>\\n        <ng-template #noMaterials>\\n          <li><a>No more materials</a></li>\\n        </ng-template>\\n      </ul>\\n    </div>\\n    <table class=\\\"table table-striped table-hover\\\">\\n      <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\n        <tr>\\n          <th>Name</th>\\n          <th>Quantity</th>\\n          <th>Per Unit Cost</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index;\\\">\\n          <td>{{selectedMaterial.materialName}}</td>\\n          <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required></td>\\n          <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\" required></td>\\n          <td><button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">&times;</button></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear()\\\">Clear</button>\\n  </form>  \\n</div> -->\\n\\n<!--<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <h2 class=\\\"page-header\\\">Create A New Job</h2>\\n  <form (submit)=\\\"onCreate()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Created Date</label>\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"createdDate\\\" name=\\\"createdDate\\\" placeholder=\\\"YYYY-MM-DD\\\" class=\\\"form-control\\\" required>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Clear</button>\\n  </form>  \\n</div>-->\\n\\n<!--                Delete Bid Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-bid-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this bid?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDelete()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Create Job Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"create-job-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to create a job?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onCreate()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Update Bid Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"update-bid-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Update Bid</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onUpdate()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Change Bid Price</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"bidPrice\\\" name=\\\"bidPrice\\\" placeholder=\\\"Bid Price\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Change Labor Cost</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"bidLabor\\\" name=\\\"laborCost\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <label>Add Materials</label>\\n          <div class=\\\"dropdown\\\">\\n            <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\n              <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span> Materials\\n              <span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\n                <li *ngFor=\\\"let material of materials; let i = index\\\">\\n                  <a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a>\\n                </li>\\n              </ng-container>\\n              <ng-template #noMaterials>\\n                <li>\\n                  <a>No more materials</a>\\n                </li>\\n              </ng-template>\\n            </ul>\\n          </div>\\n          <table class=\\\"table table-striped table-hover\\\">\\n            <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\n              <tr>\\n                <th>Name</th>\\n                <th>Quantity</th>\\n                <th>Per Unit Cost</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index;\\\">\\n                <td>{{selectedMaterial.materialName}}</td>\\n                <td>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required>\\n                </td>\\n                <td>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\"\\n                    required>\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear()\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.html\n// module id = ../../../../../src/app/components/bid/bid.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { BidService } from '../../services/bid.service';\nimport { MaterialService } from '../../services/material.service';\nimport { JobService } from '../../services/job.service';\nimport { InquiryService } from '../../services/inquiry.service';\n\n@Component({\n  selector: 'app-bid',\n  templateUrl: './bid.component.html',\n  styleUrls: ['./bid.component.css']\n})\nexport class BidComponent implements OnInit {\n\n  id:any;\n  bid:any;\n  bidMaterials:any;\n  bidPrice:any;\n  bidLabor:any;\n  bidStatus:any;\n  createdDate:any;\n  endDate:any;\n  materials:any;\n  selectedMaterials:SelectedMaterial[] = [];\n  status:any;\n\n  constructor(\n    private router:Router,\n    private route:ActivatedRoute,\n    private bidService:BidService,\n    private materialService:MaterialService,\n    private jobService:JobService,\n    private inquiryService:InquiryService\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n\n    this.bidService.getBidById(this.id).subscribe((bid) => {\n      this.bid = bid;\n      this.status = bid[0].bidStatus;\n    });\n\n    this.bidService.getBidMaterialsById(this.id).subscribe((bidMaterials) => {\n      this.bidMaterials = bidMaterials;\n\n      this.materialService.getAllMaterials().subscribe((materials) => {\n        this.materials = materials.materials;\n\n        for(let i = 0; i < this.materials.length; i++){\n          for(let k = 0; k < this.bidMaterials.length; k++){\n            if(this.materials[i].materialID == this.bidMaterials[k].materialID){\n              this.materials.splice(i, 1);\n            }\n          }\n        }\n      });\n    });\n  }\n\n  onAddMaterial(material, id){\n    this.selectedMaterials.push(material);\n    this.materials.splice(id, 1);\n  }\n\n  onRemoveMaterial(material, id){\n    this.selectedMaterials.splice(id, 1);\n    this.materials.push(material);\n    //this.ngOnInit();\n  }\n\n  onClear(){\n    this.selectedMaterials.forEach(selectedMaterial => {\n      this.materials.push(selectedMaterial);\n    });\n    this.selectedMaterials = [];\n    //this.ngOnInit();\n  }\n\n  onCreate(){\n    const newJob = {\n      bidID: this.id,\n      createdDate: this.createdDate\n    };\n    const updatedBid = {\n      bidID: this.id,\n      bidStatus: \"ACCEPTED\"\n    };\n\n    this.jobService.createJob(newJob).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n        this.ngOnInit();\n      } else{\n        console.log(data.msg);\n      }\n    });\n    this.bidService.updateBidStatus(updatedBid).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n        this.ngOnInit();\n      } else{\n        console.log(data.msg);\n      }\n    });\n\n    this.router.navigate(['/jobs']);\n  }\n\n  onDelete(){\n    this.bidService.deleteBid(this.id).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n      } else{\n        console.log(data.msg);\n      }\n    });\n\n    let updatedInquiry = {\n      inquiryID: this.bid[0].inquiryID,\n      inquiryStatus: \"PENDING\",\n      removeEndDate: true\n    };\n\n    this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n        this.router.navigate(['/bids']);\n      } else{\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onDeleteBidMaterial(materialID, bidID){\n    let bidMaterial = {\n      materialID: materialID,\n      bidID: bidID\n    }\n\n    console.log(bidMaterial);\n\n    this.bidService.deleteBidMaterial(bidMaterial).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n        this.ngOnInit();\n      } else{\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onUpdate(){\n    let updatedBid = {\n      bidID: this.id,\n      bidPrice: this.bidPrice,\n      bidLabor: this.bidLabor,\n      bidStatus: this.bidStatus,\n      createdDate: this.createdDate,\n      endDate: this.endDate\n    }\n\n    this.selectedMaterials.forEach(selectedMaterial => {\n      this.bidService.createBidMaterialById(this.id, selectedMaterial).subscribe((data) => {\n        if(data.success){\n          console.log(data.msg);\n        } else{\n          console.log(data.msg);\n        }\n      });\n    });\n\n    this.bidService.updateBid(updatedBid).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n      } else{\n        console.log(data.msg);\n      }\n    });\n    this.onClear();\n\n    this.ngOnInit();\n  }\n}\n\ninterface SelectedMaterial {\n  materialID: Number,\n  materialName: String,\n  quantity: Number,\n  perUnitCost: Number\n}\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.css\n// module id = ../../../../../src/app/components/bids/bids.component.css\n// module chunks = main","module.exports = \"<!--<button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\n<ng-container *ngIf=\\\"bids; else noBids\\\">\\n    <h2 class=\\\"page-header\\\">Bids</h2>\\n    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\n      <div class=\\\"panel panel-default\\\" *ngFor=\\\"let bid of bids\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h4 class=\\\"panel-title\\\">\\n            <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#{{bid.bidID + '-details'}}\\\">Bid ID: {{bid.bidID}}</a>\\n          </h4>\\n        </div>\\n        <div attr.id=\\\"{{bid.bidID + '-details'}}\\\" class=\\\"panel-collapse collapse\\\">\\n          <div class=\\\"panel-body\\\">\\n            <li class=\\\"list-group-item\\\"><b>Estimated Cost:</b> ${{bid.bidCost}}</li>\\n            <li class=\\\"list-group-item\\\"><b>Bid Price:</b> ${{bid.bidPrice}}</li>\\n            <li class=\\\"list-group-item\\\"><b>Status:</b> {{bid.bidStatus}}</li><br>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/home']\\\">Create Job</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/home']\\\">Edit</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</ng-container>\\n<ng-template #noBids>\\n  <h2 class=\\\"page-header\\\">Loading...</h2>\\n  <p>Try refreshing the page if there is a significant delay.</p>\\n</ng-template>-->\\n\\n\\n\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\n</div>\\n  \\n<ng-container *ngIf=\\\"bidsLength!=0; else noBids\\\">\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">Bids</h2>\\n    <h4>Click To View Details</h4>\\n    <table *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Status</th>\\n          <!-- <th>Price</th> -->\\n          <th>Customer</th>\\n          <th>Created Date</th>\\n          <th>Accepted/Declined Date</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let bid of bids;\\\" id=\\\"{{bid.bidID}}\\\" [routerLink]=\\\"['/bids/'+bid.bidID]\\\">\\n          <td>{{bid.bidID}}</td>\\n          <td>{{bid.bidStatus}}</td>\\n          <!-- <td>{{bid.bidPrice | currency: 'USD':true}}</td> -->\\n          <td>{{bid.customerName}}</td>\\n          <td>{{bid.createdDate | date: 'MM/dd/yyyy'}}</td>\\n          <td>{{bid.endDate | date: 'MM/dd/yyyy'}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</ng-container>\\n<ng-template #noBids>\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">No Bids</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </div>\\n</ng-template>\\n\\n<!-- <ng-container *ngIf=\\\"pendingLength!=0 || acceptedLength!=0 || declinedLength!=0; else noBids\\\">\\n  <ng-container *ngIf=\\\"pendingLength!=0; else noPendingBids\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">Pending Bids</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Price</th>\\n            <th>Created Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let pendingBid of pendingBids;\\\" [routerLink]=\\\"['/bids/'+pendingBid.bidID]\\\">\\n            <td>{{pendingBid.bidID}}</td>\\n            <td>{{pendingBid.bidPrice}}</td>\\n            <td>{{pendingBid.createdDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>  \\n    </div>\\n  </ng-container>\\n  <ng-template #noPendingBids>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">No Pending Bids</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n  \\n  <ng-container *ngIf=\\\"acceptedLength!=0; else noAcceptedBids\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">Accepted Bids</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Price</th>\\n            <th>Accepted Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let acceptedBid of acceptedBids;\\\" [routerLink]=\\\"['/bids/'+acceptedBid.bidID]\\\">\\n            <td>{{acceptedBid.bidID}}</td>\\n            <td>{{acceptedBid.bidPrice}}</td>\\n            <td>{{acceptedBid.endDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>  \\n    </div>\\n  </ng-container>\\n  <ng-template #noAcceptedBids>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">No Accepted Bids</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n  \\n  <ng-container *ngIf=\\\"declinedLength!=0; else noDeclinedBids\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">Declined Bids</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Price</th>\\n            <th>Declined Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let declinedBid of declinedBids;\\\" [routerLink]=\\\"['/bids/'+declinedBid.bidID]\\\">\\n            <td>{{declinedBid.bidID}}</td>\\n            <td>{{declinedBid.bidPrice}}</td>\\n            <td>{{declinedBid.endDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table> \\n    </div>\\n  </ng-container>\\n  <ng-template #noDeclinedBids>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">No Declined Bids</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n</ng-container>\\n<ng-template #noBids>\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">No Bids</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </div>\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.html\n// module id = ../../../../../src/app/components/bids/bids.component.html\n// module chunks = main","import { Component, OnInit, AfterContentInit } from '@angular/core';\nimport { BidService } from '../../services/bid.service';\nimport { Router, Routes, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs/Rx';\n\n@Component({\n  selector: 'app-bids',\n  templateUrl: './bids.component.html',\n  styleUrls: ['./bids.component.css']\n})\nexport class BidsComponent implements OnInit, AfterContentInit {\n\n  bids: any;\n  bidsLength: any;\n  pendingBids: any;\n  pendingLength: any;\n  acceptedBids: any;\n  acceptedLength: any;\n  declinedBids: any;\n  declinedLength: any;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  displayTable: Boolean = false;\n\n  constructor(\n    private bidService: BidService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.bidService.getAllBids().subscribe((bids) => {\n      this.bids = bids.bids;\n      this.bidsLength = bids.bids.length;\n      this.filterBids(bids);\n      this.setupDataTable();\n    });\n  }\n\n  ngAfterContentInit() {\n    this.applyTableColor();\n  }\n\n  applyTableColor() {\n    this.bidService.getAllBids().subscribe(bids => {\n      bids.bids.forEach(bid => {\n        let id = bid.bidID;\n        let status = bid.bidStatus;\n        if (status == 'PENDING') {\n          document.getElementById(id).classList.add('info');\n        } else if (status == 'DECLINED') {\n          document.getElementById(id).classList.add('danger');\n        } else if (status == 'ACCEPTED') {\n          document.getElementById(id).classList.add('success');\n        }\n      });\n    });\n  }\n\n  setupDataTable(){\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.dtTrigger.next();\n    this.displayTable = true;\n  }\n\n  filterBids(bids){\n    this.pendingBids = bids.pendingBids;\n    this.pendingLength = bids.pendingBids.length;\n    this.acceptedBids = bids.acceptedBids;\n    this.acceptedLength = bids.acceptedBids.length;\n    this.declinedBids = bids.declinedBids;\n    this.declinedLength = bids.declinedBids.length;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.css\n// module id = ../../../../../src/app/components/create-bid/create-bid.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/inquiries']\\\">Go Back</button>\\n<h2 class=\\\"page-header\\\">Create Bid</h2>\\n<form (submit)=\\\"onCreate()\\\">\\n    <h3>Bid Information</h3>\\n  <div class=\\\"form-group\\\">\\n    <label>Bid Price</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"bidPrice\\\" name=\\\"bidPrice\\\" placeholder=\\\"Bid Price\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Current Date</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"createdDate\\\" name=\\\"createdDate\\\" placeholder=\\\"Current Date\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <h3>Estimated Costs</h3>\\n  <div class=\\\"form-group\\\">\\n    <label>Labor Cost</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"bidLabor\\\" name=\\\"bidLabor\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <label>Materials Cost</label>\\n  <div class=\\\"dropdown\\\">\\n    <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">Add Materials<span class=\\\"caret\\\"></span></button>\\n    <ul class=\\\"dropdown-menu\\\">\\n      <li *ngFor=\\\"let material of materials;\\\"><a (click)=\\\"onAddMaterial(material)\\\">{{material.materialName}}</a></li>\\n    </ul>\\n  </div>\\n  <table class=\\\"table table-striped table-hover\\\">\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Quantity</th>\\n        <th>Per Unit Cost</th>\\n      </tr>\\n      </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let selectedMaterial of selectedMaterials;\\\">\\n        <td>{{selectedMaterial.materialName}}</td>\\n        <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required></td>\\n        <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\" required></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create</button>\\n  <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear()\\\">Clear</button>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.html\n// module id = ../../../../../src/app/components/create-bid/create-bid.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { MaterialService } from '../../services/material.service';\nimport { BidService } from '../../services/bid.service';\nimport { InquiryService } from '../../services/inquiry.service';\n\n@Component({\n  selector: 'app-create-bid',\n  templateUrl: './create-bid.component.html',\n  styleUrls: ['./create-bid.component.css']\n})\nexport class CreateBidComponent implements OnInit {\n\n  bidPrice:any;\n  createdDate:any;\n  bidLabor:any;\n  materials:any;\n  selectedMaterials:SelectedMaterial[] = [];\n\n  constructor(\n    private materialService:MaterialService,\n    private bidService:BidService,\n    private inquiryService:InquiryService,\n    private router:Router,\n    private route:ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.materialService.getAllMaterials().subscribe((materials) => {\n      this.materials = materials.materials;\n    });\n  }\n\n  onAddMaterial(material){\n    this.selectedMaterials.push(material);\n  }\n\n  onClear(){\n    this.selectedMaterials = [];\n  }\n\n  onCreate(){\n    const newBid = {\n      inquiryID: this.route.snapshot.params['id'],\n      bidLabor: this.bidLabor,\n      bidPrice: this.bidPrice,\n      createdDate: this.createdDate\n    };\n    const updatedInquiry = {\n      inquiryID: this.route.snapshot.params['id'],\n      inquiryStatus: \"ACCEPTED\"\n    };\n\n    this.bidService.createBid(newBid).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n        this.ngOnInit();\n      } else{\n        console.log(data.msg);\n      }\n    });\n    this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n        this.ngOnInit();\n      } else{\n        console.log(data.msg);\n      }\n    });\n    this.selectedMaterials.forEach(selectedMaterial => {\n      this.bidService.createBidMaterial(selectedMaterial).subscribe((data) => {\n        if(data.success){\n          console.log(data.msg);\n          this.ngOnInit();\n        } else{\n          console.log(data.msg);\n        }\n      });\n    });\n\n    this.router.navigate(['/bids']);\n  }\n}\n\ninterface SelectedMaterial {\n  materialID: Number,\n  materialName: String,\n  quantity: Number,\n  perUnitCost: Number\n}\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.css\n// module id = ../../../../../src/app/components/customer/customer.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/customers']\\\">Go To Customers</button>\\n</div>\\n\\n<h2 class=\\\"page-header col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">{{customer[0].customerName}}</h2>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <ng-container *ngIf=\\\"customer; else noCustomer\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Customer Details</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th>Address</th>\\n              <th>City</th>\\n              <th>State</th>\\n              <th>ZIP</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td>{{customer[0].address}}</td>\\n              <td>{{customer[0].city}}</td>\\n              <td>{{customer[0].state}}</td>\\n              <td>{{customer[0].zip}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <button class=\\\"btn btn-primary\\\" href=\\\"#update-customer-modal\\\" data-toggle=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Customer</button>\\n        <button class=\\\"btn btn-info\\\" href=\\\"#create-inquiry-modal\\\" data-toggle=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Create Inquiry</button>\\n        <button class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-customer-modal'>\\n          <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Customer</button>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-template #noCustomer>\\n    <h2 class=\\\"page-header\\\">No Customers</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </ng-template>\\n</div>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <ng-container *ngIf=\\\"contacts; else noContacts\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Contact Details</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <thead>\\n            <tr>\\n              <th>ID</th>\\n              <th>Title</th>\\n              <th>Name</th>\\n              <th>Phone</th>\\n              <th>Email</th>\\n              <th>Update</th>\\n              <th>Delete</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let contact of contacts\\\">\\n              <td>{{contact.contactID}}</td>\\n              <td>{{contact.contactTitle}}</td>\\n              <td>{{contact.contactName}}</td>\\n              <td>{{contact.contactPhone}}</td>\\n              <td>{{contact.contactEmail}}</td>\\n              <td>\\n                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClickUpdateContact(contact.contactID)\\\" data-toggle=\\\"modal\\\" href='#update-contact-modal'>\\n                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span>\\n                </button>\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onClickDeleteContact(contact.contactID)\\\" data-toggle=\\\"modal\\\" href='#delete-contact-modal'>\\n                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <button class=\\\"btn btn-info\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" href='#create-contact-modal'>\\n          <span class=\\\"glyphicon glyphicon-phone\\\" aria-hidden=\\\"true\\\"></span> Create Contact\\n        </button>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-template>\\n    <h2 class=\\\"page-header\\\">No Contacts</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </ng-template>\\n</div>\\n\\n<!--                Delete Customer Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-customer-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this user?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteCustomer()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Update Customer Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"update-customer-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Update Customer</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onUpdateCustomer()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Address</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">City</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" placeholder=\\\"City\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">State</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\" placeholder=\\\"State\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">ZIP</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"zip\\\" name=\\\"zip\\\" placeholder=\\\"ZIP\\\" />\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Create Inquiry Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"create-inquiry-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Create A New Inquiry</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onCreate()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Description</label>\\n            <textarea type=\\\"text\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" class=\\\"form-control\\\" required></textarea>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Delete Contact Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-contact-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this contact?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteContact()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Update Contact Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"update-contact-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Update Contact</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onUpdateContact()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Title</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactTitle\\\" name=\\\"contactTitle\\\" placeholder=\\\"Title\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactName\\\" name=\\\"contactName\\\" placeholder=\\\"Name\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Phone</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactPhone\\\" name=\\\"contactPhone\\\" placeholder=\\\"Phone\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Email</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactEmail\\\" name=\\\"contactEmail\\\" placeholder=\\\"Email\\\" required/>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Create Contact Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"create-contact-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Create Contact</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onCreateContact()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Title</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactTitle\\\" name=\\\"contactTitle\\\" placeholder=\\\"Title\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactName\\\" name=\\\"contactName\\\" placeholder=\\\"Name\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Phone</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactPhone\\\" name=\\\"contactPhone\\\" placeholder=\\\"Phone\\\" required/>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Email</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactEmail\\\" name=\\\"contactEmail\\\" placeholder=\\\"Email\\\" required/>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.html\n// module id = ../../../../../src/app/components/customer/customer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { CustomerService } from '../../services/customer.service';\nimport { InquiryService } from '../../services/inquiry.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  id: any;\n  customer: any;\n  description: any;\n  receivedDate: any;\n  name: any;\n  address: any;\n  city: any;\n  state: any;\n  zip: any;\n\n  contactTitle: any;\n  contactName: any;\n  contactPhone: any;\n  contactEmail: any;\n  contacts: any;\n  contactID: any;\n\n  constructor(\n    private customerService: CustomerService,\n    private inquiryService: InquiryService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.customerService.getCustomerById(this.id).subscribe((customer) => {\n      this.customer = customer;\n    });\n    this.customerService.getAllContacts(this.id).subscribe((contacts) => {\n      this.contacts = contacts;\n    });\n  }\n\n  onCreate() {\n    const newInquiry = {\n      customerID: this.id,\n      description: this.description,\n      receivedDate: this.receivedDate\n    }\n\n    this.inquiryService.createInquiry(newInquiry).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.router.navigate(['/inquiries']);\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onDeleteCustomer() {\n    this.customerService.deleteCustomer(this.id).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.router.navigate(['/customers']);\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onUpdateCustomer() {\n    let updatedCustomer = {\n      customerID: this.id,\n      name: this.name,\n      address: this.address,\n      city: this.city,\n      state: this.state,\n      zip: this.zip\n    }\n\n    this.customerService.updateCustomer(updatedCustomer).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n      } else {\n        console.log(data.msg);\n      }\n    });\n    this.ngOnInit();\n    this.clearCustomerFields();\n  }\n\n  onClickUpdateContact(contactID) {\n    this.contactID = contactID;\n  }\n\n  onUpdateContact() {\n    let updatedContact = {\n      contactID: this.contactID,\n      contactTitle: this.contactTitle,\n      contactName: this.contactName,\n      contactPhone: this.contactPhone,\n      contactEmail: this.contactEmail\n    }\n\n    this.customerService.updateContact(updatedContact).subscribe((data) => {\n      console.log(data);\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n        this.clearContactFields();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onClickDeleteContact(contactID) {\n    this.contactID = contactID;\n  }\n\n  onDeleteContact() {\n    this.customerService.deleteContact(this.contactID).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onCreateContact() {\n    let newContact = {\n      customerID: this.id,\n      contactTitle: this.contactTitle,\n      contactName: this.contactName,\n      contactPhone: this.contactPhone,\n      contactEmail: this.contactEmail\n    }\n\n    this.customerService.createContact(newContact).subscribe((data) => {\n      console.log(data);\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n        this.clearContactFields();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  clearCustomerFields() {\n    this.name = null;\n    this.address = null;\n    this.city = null;\n    this.state = null;\n    this.zip = null;\n  }\n\n  clearContactFields() {\n    this.contactTitle = null;\n    this.contactName = null;\n    this.contactPhone = null;\n    this.contactEmail = null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.css\n// module id = ../../../../../src/app/components/customers/customers.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\n</div>\\n\\n<h2 class=\\\"page-header col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">Customers</h2>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <ng-container *ngIf=\\\"customers; else noCustomers\\\">\\n    <h4>Click To View Details</h4>\\n    <!-- *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" -->\\n    <table class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Name</th>\\n          <th>Address</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let customer of customers;\\\" [routerLink]=\\\"['/customers/'+customer.customerID]\\\">\\n          <td>{{customer.customerID}}</td>\\n          <td>{{customer.customerName}}</td>\\n          <td>{{customer.address}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" href=\\\"#create-modal\\\" data-toggle=\\\"modal\\\"><span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Create New</button>\\n  </ng-container>\\n  <ng-template #noCustomers>\\n    <h2 class=\\\"page-header\\\">No Customers</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </ng-template>\\n</div>\\n\\n<!--                Create Customer Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"create-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Create A New Customer</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onCreate()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Address</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">City</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" placeholder=\\\"City\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">State</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\" placeholder=\\\"State\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">ZIP</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"zip\\\" name=\\\"zip\\\" placeholder=\\\"ZIP\\\" />\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\"><span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\"><span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.html\n// module id = ../../../../../src/app/components/customers/customers.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../../services/customer.service';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs/Rx';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  customers: any;\n  name: any;\n  address: any;\n  city: any;\n  state: any;\n  zip: any;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  displayTable: Boolean = false;\n\n  constructor(\n    private customerService: CustomerService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.customerService.getAllCustomers().subscribe((customers) => {\n      this.customers = customers.customers;\n      // this.setupDataTable();\n    });\n  }\n\n  setupDataTable() {\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.dtTrigger.next();\n    this.displayTable = true;\n  }\n\n  onCreate() {\n    const newCustomer = {\n      customerName: this.name,\n      address: this.address,\n      city: this.city,\n      state: this.state,\n      zip: this.zip\n    }\n\n    this.customerService.createCustomer(newCustomer).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n        this.clearFields();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  clearFields() {\n    this.name = null;\n    this.address = null;\n    this.city = null;\n    this.state = null;\n    this.zip = null;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* .panel:hover {\\n    background-color: #dfdfdf !important;\\n  } */\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <h1>Allied Waterproofing</h1>\\n    <p>Project Management Application</p>\\n  </div>\\n</div>\\n\\n<h2 class=\\\"page-header\\\">Current Jobs</h2>\\n<ng-container *ngIf=\\\"currentJobsLength !=0; else noCurrentJobs\\\">\\n  <!-- <h4>Click To View Details</h4> -->\\n  <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let currentJob of currentJobs; let i = index\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Job # {{currentJob.jobID}}</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <h4>Customer:</h4><p>{{currentJob.customerName}}</p>\\n      <hr>\\n      <h4>Budget:</h4>\\n      <div class=\\\"progress progress-striped active\\\">\\n        <div id=\\\"costProgress\\\" class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"jobCosts[i]\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"bidCosts[i]\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (jobCosts[i]/bidCosts[i])*100+ '%'}\\\">\\n          {{jobCosts[i]/bidCosts[i] | percent:'1.0-0'}}\\n        </div>\\n      </div>\\n      <hr>\\n      <h4>Revenue Collected:</h4>\\n      <div class=\\\"progress progress-striped active\\\">\\n        <div id=\\\"revenueProgress\\\" class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"currentJob.jobRevenue\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"currentJob.bidPrice\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (currentJob.jobRevenue/currentJob.bidPrice)*100+ '%'}\\\">\\n          {{currentJob.jobRevenue/currentJob.bidPrice | percent:'1.0-0'}}\\n        </div>\\n      </div>\\n      <hr>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/jobs/'+currentJob.jobID]\\\"><span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Open Job</button>\\n    </div>\\n  </div>\\n  <!-- <ul class=\\\"list-group\\\" *ngFor=\\\"let currentJob of currentJobs; let i = index\\\" [routerLink]=\\\"['/jobs/'+currentJob.jobID]\\\">\\n    <h3 class=\\\"page-header\\\">Job # {{currentJob.jobID}}</h3>\\n    <h4>Click To View Details</h4>\\n    <li class=\\\"list-group-item\\\"><b>Customer:</b> {{currentJob.customerName}}</li>\\n    <li class=\\\"list-group-item\\\"><b>Budget:</b>\\n      <div class=\\\"progress\\\">\\n        <div id=\\\"costProgress\\\" class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"jobCosts[i]\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"bidCosts[i]\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (jobCosts[i]/bidCosts[i])*100+ '%'}\\\">\\n          {{jobCosts[i]/bidCosts[i] | percent:'1.0-0'}}\\n        </div>\\n      </div>\\n    </li>\\n    <li class=\\\"list-group-item\\\"><b>Revenue Collected:</b>\\n      <div class=\\\"progress\\\">\\n        <div id=\\\"revenueProgress\\\" class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"currentJob.jobRevenue\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"currentJob.bidPrice\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (currentJob.jobRevenue/currentJob.bidPrice)*100+ '%'}\\\">\\n          {{currentJob.jobRevenue/currentJob.bidPrice | percent:'1.0-0'}}\\n        </div>\\n      </div>\\n    </li>\\n  </ul> -->\\n</ng-container>\\n<ng-template #noCurrentJobs>\\n  <h2 class=\\\"page-header\\\">No Current Jobs</h2>\\n  <p>If this is incorrect, try refreshing the page.</p>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { JobService } from '../../services/job.service';\nimport { BidService } from '../../services/bid.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  currentJobs:any;\n  currentJobsLength:any;\n  jobCosts:any[] = [];\n  bidCosts:any[] = [];\n\n  constructor(\n    private jobService:JobService,\n    private bidService:BidService\n  ) { }\n\n  ngOnInit() {\n    this.jobService.getCurrentJobs().subscribe((jobs) => {\n      this.currentJobs = jobs.jobs;\n      this.currentJobsLength = jobs.jobs.length;\n\n      jobs.jobs.forEach((currentJob) => {\n        this.jobService.getCurrentJobMaterialsCost(currentJob.jobID).subscribe(cost => {\n          this.jobCosts.push(cost[0].jobMaterialCost + currentJob.jobLabor);\n        });\n        this.bidService.getCurrentBidMaterialsCost(currentJob.jobID).subscribe(cost => {\n          this.bidCosts.push(cost[0].bidMaterialCost + currentJob.bidLabor);\n        });\n      });\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.css\n// module id = ../../../../../src/app/components/inquiries/inquiries.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\n</div>\\n\\n<ng-container *ngIf=\\\"inquiriesLength!=0; else noInquiries\\\">\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">Inquiries</h2>\\n    <h4>Click To View Details</h4>\\n    <table *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Status</th>\\n          <th>Customer</th>\\n          <th>Received Date</th>\\n          <th>Accepted/Declined Date</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let inquiry of inquiries;\\\" id=\\\"{{inquiry.inquiryID}}\\\" [routerLink]=\\\"['/inquiries/'+inquiry.inquiryID]\\\">\\n          <td>{{inquiry.inquiryID}}</td>\\n          <td>{{inquiry.inquiryStatus}}</td>\\n          <td>{{inquiry.customerName}}</td>\\n          <td>{{inquiry.receivedDate | date: 'MM/dd/yyyy'}}</td>\\n          <td>{{inquiry.endDate | date: 'MM/dd/yyyy'}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</ng-container>\\n<ng-template #noInquiries>\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">No Inquiries</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </div>\\n</ng-template>\\n  \\n<!-- <ng-container *ngIf=\\\"pendingLength!=0 || acceptedLength!=0 || declinedLength!=0; else noInquiries\\\">\\n  <ng-container *ngIf=\\\"pendingLength!=0; else noPendingInquiries\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">Pending Inquiries</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Received Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let pendingInquiry of pendingInquiries;\\\" [routerLink]=\\\"['/inquiries/'+pendingInquiry.inquiryID]\\\">\\n            <td>{{pendingInquiry.inquiryID}}</td>\\n            <td>{{pendingInquiry.receivedDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </ng-container>\\n  <ng-template #noPendingInquiries>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">No Pending Inquiries</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n\\n  <ng-container *ngIf=\\\"acceptedLength!=0; else noAcceptedInquiries\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">Accepted Inquiries</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Accepted Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let acceptedInquiry of acceptedInquiries;\\\" [routerLink]=\\\"['/inquiries/'+acceptedInquiry.inquiryID]\\\">\\n            <td>{{acceptedInquiry.inquiryID}}</td>\\n            <td>{{acceptedInquiry.endDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>  \\n    </div>\\n  </ng-container>\\n  <ng-template #noAcceptedInquiries>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">No Accepted Inquiries</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n\\n  <ng-container *ngIf=\\\"declinedLength!=0; else noDeclinedInquiries\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">Declined Inquiries</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Declined Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let declinedInquiry of declinedInquiries;\\\" [routerLink]=\\\"['/inquiries/'+declinedInquiry.inquiryID]\\\">\\n            <td>{{declinedInquiry.inquiryID}}</td>\\n            <td>{{declinedInquiry.endDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>  \\n    </div>\\n  </ng-container>\\n  <ng-template #noDeclinedInquiries>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\n      <h2 class=\\\"page-header\\\">No Declined Inquiries</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n</ng-container>\\n<ng-template #noInquiries>\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">No Inquiries</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </div>\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.html\n// module id = ../../../../../src/app/components/inquiries/inquiries.component.html\n// module chunks = main","import { Component, OnInit, AfterContentInit } from '@angular/core';\nimport { InquiryService } from '../../services/inquiry.service';\nimport { Subject } from 'rxjs/Rx';\n//import { DataTable, DataTableResource } from 'angular-4-data-table';\n//declare var $;\n\n@Component({\n  selector: 'app-inquiries',\n  templateUrl: './inquiries.component.html',\n  styleUrls: ['./inquiries.component.css']\n})\nexport class InquiriesComponent implements OnInit, AfterContentInit {\n\n  inquiries: any;\n  inquiriesLength: any;\n  pendingInquiries: any;\n  pendingLength: any;\n  acceptedInquiries: any;\n  acceptedLength: any;\n  declinedInquiries: any;\n  declinedLength: any;\n\n  // inquiriesResource:any;\n  // inquiriesCount = 0;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  displayTable: Boolean = false;\n\n  constructor(\n    private inquiryService: InquiryService\n  ) { }\n\n  ngOnInit() {\n    this.inquiryService.getAllInquiries().subscribe((inquiries) => {\n      this.inquiries = inquiries.inquiries;\n      this.inquiriesLength = inquiries.inquiries.length;\n      //this.inquiriesResource = new DataTableResource(this.inquiries);\n      this.filterInquiries(inquiries);\n      this.setupDataTable();\n    });\n    // $(document).ready(function() {\n    //   $('#example').DataTable();\n    // });\n  }\n\n  ngAfterContentInit() {\n    this.applyTableColor();\n  }\n\n  applyTableColor() {\n    this.inquiryService.getAllInquiries().subscribe(inquiries => {\n      inquiries.inquiries.forEach(inquiry => {\n        let id = inquiry.inquiryID;\n        let status = inquiry.inquiryStatus;\n        if (status == 'PENDING') {\n          document.getElementById(id).classList.add('info');\n        } else if (status == 'DECLINED') {\n          document.getElementById(id).classList.add('danger');\n        } else if (status == 'ACCEPTED') {\n          document.getElementById(id).classList.add('success');\n        }\n      });\n    });\n  }\n\n  filterInquiries(inquiries) {\n    this.pendingInquiries = inquiries.pendingInquiries;\n    this.pendingLength = inquiries.pendingInquiries.length;\n    this.acceptedInquiries = inquiries.acceptedInquiries;\n    this.acceptedLength = inquiries.acceptedInquiries.length;\n    this.declinedInquiries = inquiries.declinedInquiries;\n    this.declinedLength = inquiries.declinedInquiries.length;\n  }\n\n  setupDataTable() {\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.dtTrigger.next();\n    this.displayTable = true;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.css\n// module id = ../../../../../src/app/components/inquiry/inquiry.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/inquiries']\\\">Go To Inquiries</button>\\n</div>\\n\\n<h2 class=\\\"page-header col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">Inquiry #{{inquiry[0].inquiryID}}</h2>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <ng-container *ngIf=\\\"inquiry; else noInquiry\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Inquiry Details</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th>Received Date</th>\\n              <th>Accepted/Declined Date</th>\\n              <th>Description</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td>{{inquiry[0].receivedDate | date: 'MM/dd/yyyy'}}</td>\\n              <td>{{inquiry[0].endDate | date: 'MM/dd/yyyy'}}</td>\\n              <td>{{inquiry[0].description}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <button *ngIf=\\\"status == 'PENDING'\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#create-bid-modal'>\\n          <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Create Bid</button>\\n        <button class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href=\\\"#update-modal\\\">\\n          <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Inquiry</button>\\n        <button class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-modal'>\\n          <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Inquiry</button>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-template #noInquiry>\\n    <h2 class=\\\"page-header\\\">No Inquiries</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </ng-template>\\n</div>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Customer Details</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Name</th>\\n            <th>Address</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>{{inquiry[0].customerID}}</td>\\n            <td>{{inquiry[0].customerName}}</td>\\n            <td>{{inquiry[0].customerAddress}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/customers/'+inquiry[0].customerID]\\\">\\n        <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Open Customer</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<!--                Delete Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this inquiry?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDelete()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Update Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"update-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Update Inquiry</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onUpdate()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Description</label>\\n            <textarea type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"Description\\\"></textarea>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Create Bid Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"create-bid-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Create Bid</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onCreate()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Bid Price</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"bidPrice\\\" name=\\\"bidPrice\\\" placeholder=\\\"Bid Price\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Labor Cost</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"bidLabor\\\" name=\\\"bidLabor\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <label>Materials Cost</label>\\n          <div class=\\\"dropdown\\\">\\n            <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\n              <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span> Add Materials\\n              <span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\n                <li *ngFor=\\\"let material of materials; let i = index;\\\">\\n                  <a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a>\\n                </li>\\n              </ng-container>\\n              <ng-template #noMaterials>\\n                <li>\\n                  <a>No more materials</a>\\n                </li>\\n              </ng-template>\\n            </ul>\\n          </div>\\n          <table class=\\\"table table-striped table-hover\\\">\\n            <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\n              <tr>\\n                <th>Name</th>\\n                <th>Quantity</th>\\n                <th>Per Unit Cost</th>\\n                <th>Remove</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index\\\">\\n                <td>{{selectedMaterial.materialName}}</td>\\n                <td>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required>\\n                </td>\\n                <td>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\"\\n                    required>\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">\\n                    <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear()\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.html\n// module id = ../../../../../src/app/components/inquiry/inquiry.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { InquiryService } from '../../services/inquiry.service';\nimport { MaterialService } from '../../services/material.service';\nimport { BidService } from '../../services/bid.service';\n\n@Component({\n  selector: 'app-inquiry',\n  templateUrl: './inquiry.component.html',\n  styleUrls: ['./inquiry.component.css']\n})\nexport class InquiryComponent implements OnInit {\n\n  id:any;\n  inquiry:any;\n  bidPrice:any;\n  createdDate:any;\n  bidLabor:any;\n  materials:any;\n  selectedMaterials:SelectedMaterial[] = [];\n  description:any;\n  status:any;\n\n  constructor(\n    private router:Router,\n    private route:ActivatedRoute,\n    private inquiryService:InquiryService,\n    private materialService:MaterialService,\n    private bidService:BidService\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n\n    this.inquiryService.getInquiryById(this.id).subscribe((inquiry) => {\n      this.inquiry = inquiry;\n      this.status = inquiry[0].inquiryStatus;\n    });\n\n    this.materialService.getAllMaterials().subscribe((materials) => {\n      this.materials = materials.materials;\n    });\n  }\n\n  onAddMaterial(material, id){\n    this.selectedMaterials.push(material);\n    this.materials.splice(id, 1);\n  }\n\n  onRemoveMaterial(material, id){\n    this.selectedMaterials.splice(id, 1);\n    this.materials.push(material);\n  }\n\n  onClear(){\n    this.selectedMaterials.forEach(selectedMaterial => {\n      this.materials.push(selectedMaterial);\n    });\n    this.selectedMaterials = [];\n    //this.ngOnInit();\n  }\n\n  onCreate(){\n    const newBid = {\n      inquiryID: this.id,\n      bidLabor: this.bidLabor,\n      bidPrice: this.bidPrice,\n      createdDate: this.createdDate\n    };\n    const updatedInquiry = {\n      inquiryID: this.id,\n      inquiryStatus: \"ACCEPTED\",\n      removeEndDate: false\n    };\n\n    this.bidService.createBid(newBid).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n      } else{\n        console.log(data.msg);\n      }\n    });\n    this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n      } else{\n        console.log(data.msg);\n      }\n    });\n    this.selectedMaterials.forEach(selectedMaterial => {\n      this.bidService.createBidMaterial(selectedMaterial).subscribe((data) => {\n        if(data.success){\n          console.log(data.msg);\n        } else{\n          console.log(data.msg);\n        }\n      });\n    });\n\n    this.router.navigate([`/bids`]);\n  }\n\n  onUpdate(){\n    let updatedInquiry = {\n      inquiryID: this.id,\n      description: this.description\n    }\n\n    this.inquiryService.updateInquiry(updatedInquiry).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n      } else{\n        console.log(data.msg);\n      }\n    });\n\n    this.ngOnInit();\n  }\n\n  onDelete(){\n    this.inquiryService.deleteInquiry(this.id).subscribe((data) => {\n      if(data.success){\n        console.log(data.msg);\n        this.router.navigate(['/inquiries']);\n      } else{\n        console.log(data.msg);\n      }\n    });\n  }\n}\n\ninterface SelectedMaterial {\n  materialID: Number,\n  materialName: String,\n  quantity: Number,\n  perUnitCost: Number\n}\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.css\n// module id = ../../../../../src/app/components/job/job.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/jobs']\\\">Go To Jobs</button>\\n</div>\\n<h2 class=\\\"page-header col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">Job #{{job[0].jobID}}</h2>\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Customer Details</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Name</th>\\n            <th>Address</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>{{job[0].customerID}}</td>\\n            <td>{{job[0].customerName}}</td>\\n            <td>{{job[0].customerAddress}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/customers/'+job[0].customerID]\\\">\\n        <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Open Customer</button>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <ng-container *ngIf=\\\"job; else noJob\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Job Details</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th>Revenue</th>\\n              <th>Created Date</th>\\n              <th>Completion Date</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n              <td>{{job[0].jobRevenue | currency: 'USD':true}}</td>\\n              <td>{{job[0].createdDate | date: 'MM/dd/yyyy'}}</td>\\n              <td>{{job[0].endDate | date: 'MM/dd/yyyy'}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <h4 class=\\\"page-header\\\">Actual Costs</h4>\\n        <label>Labor Cost</label>\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <tbody>\\n            <tr>\\n              <td>{{job[0].jobLabor | currency: 'USD':true}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <label *ngIf=\\\"jobMaterials[0] != null;\\\">Materials Cost</label>\\n        <table class=\\\"table table-striped table-hover\\\">\\n          <thead *ngIf=\\\"jobMaterials[0] != null;\\\">\\n            <tr>\\n              <th>Material</th>\\n              <th>Quantity</th>\\n              <th>Per Unit Cost</th>\\n              <th>Delete</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let jobMaterial of jobMaterials\\\">\\n              <td>{{jobMaterial.materialName}}</td>\\n              <td>{{jobMaterial.quantity}}</td>\\n              <td>{{jobMaterial.perUnitCost | currency: 'USD':true}}</td>\\n              <td>\\n                <button class=\\\"btn btn-danger\\\" *ngIf=\\\"status == 'IN-PROGRESS'\\\" type=\\\"button\\\" (click)=\\\"onClickDeleteMaterial(jobMaterial.materialID)\\\"\\n                  data-toggle=\\\"modal\\\" href='#delete-material-modal'>\\n                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <label *ngIf=\\\"files.length != 0\\\">Job Files</label>\\n        <table *ngIf=\\\"files.length != 0\\\" class=\\\"table table-striped table-hover\\\">\\n          <thead>\\n            <tr>\\n              <th>Name</th>\\n              <th>Delete</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let file of files\\\">\\n              <td>\\n                <a target=\\\"_blank\\\" href=\\\"http://localhost:3000/api/uploads/jobs/{{id}}/{{file}}\\\">{{file}}</a>\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" href='#delete-file-modal' (click)=\\\"onClickDeleteFile(file)\\\">\\n                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n        <button *ngIf=\\\"status == 'IN-PROGRESS'\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#finish-job-modal'>\\n          <span class=\\\"glyphicon glyphicon-check\\\" aria-hidden=\\\"true\\\"></span> Finish Job</button>\\n        <!-- <button *ngIf=\\\"status == 'IN-PROGRESS'\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#update-job-modal'> -->\\n        <button class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#update-job-modal'>\\n          <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Job</button>\\n        <button class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-job-modal'>\\n          <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Job</button>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <ng-template #noJob>\\n    <h2 class=\\\"page-header\\\">No Jobs</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </ng-template>\\n</div>\\n<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n  <div class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Bid Details</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Bid Price</th>\\n            <th>Created Date</th>\\n            <th>Accepted Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <td>{{job[0].bidPrice | currency: 'USD':true}}</td>\\n            <td>{{job[0].bidCreatedDate | date: 'MM/dd/yyyy'}}</td>\\n            <td>{{job[0].bidEndDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <h4 class=\\\"page-header\\\">Estimated Costs</h4>\\n      <label>Labor Cost</label>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <tbody>\\n          <tr>\\n            <td>{{job[0].bidLabor | currency: 'USD':true}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <label *ngIf=\\\"bidMaterials[0] != null;\\\">Materials Cost</label>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead *ngIf=\\\"bidMaterials[0] != null;\\\">\\n          <tr>\\n            <th>Material</th>\\n            <th>Quantity</th>\\n            <th>Per Unit Cost</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let bidMaterial of bidMaterials\\\">\\n            <td>{{bidMaterial.materialName}}</td>\\n            <td>{{bidMaterial.quantity}}</td>\\n            <td>{{bidMaterial.perUnitCost | currency: 'USD':true}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/bids/'+job[0].bidID]\\\">\\n        <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Open Bid</button>\\n    </div>\\n  </div>\\n</div>\\n\\n<!--                Delete Job Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-job-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this job?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteJob()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Delete Material Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-material-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this material?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteMaterial()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Finish Job Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"finish-job-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to finalize this job?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onFinish()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Update Job Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"update-job-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Update Job</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onUpdate()\\\" style=\\\"padding-bottom: 20px;\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Add Revenue</label>\\n            <!-- <span class=\\\"input-group-addon\\\">\\n              <input type=\\\"checkbox\\\" aria-label=\\\"...\\\">\\n            </span> -->\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"jobRevenue\\\" name=\\\"jobRevenue\\\" placeholder=\\\"Revenue\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Add Labor Cost</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"jobLabor\\\" name=\\\"jobLabor\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <label>Add Materials</label>\\n          <div class=\\\"dropdown\\\">\\n            <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\n              <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span> Add Materials\\n              <span class=\\\"caret\\\"></span>\\n            </button>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\n                <li *ngFor=\\\"let material of materials; let i = index;\\\">\\n                  <a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a>\\n                </li>\\n              </ng-container>\\n              <ng-template #noMaterials>\\n                <li>\\n                  <a>No more materials</a>\\n                </li>\\n              </ng-template>\\n            </ul>\\n          </div>\\n          <table class=\\\"table table-striped table-hover\\\">\\n            <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\n              <tr>\\n                <th>Name</th>\\n                <th>Quantity</th>\\n                <th>Per Unit Cost</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index;\\\">\\n                <td>{{selectedMaterial.materialName}}</td>\\n                <td>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required>\\n                </td>\\n                <td>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\"\\n                    required>\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">&times;</button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <label>Upload Files</label>\\n          <div class=\\\"form-group\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"fileInput.click()\\\">\\n              <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Browse Files</button>\\n            <input name=\\\"file\\\" type=\\\"file\\\" style=\\\"display: none;\\\" #fileInput ng2FileSelect [uploader]=\\\"uploader\\\" />\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n              <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\n            </button> -->\\n            <table *ngIf=\\\"uploader.queue.length\\\" class=\\\"table table-striped table-hover\\\">\\n              <thead>\\n                <tr>\\n                  <th>File</th>\\n                  <th>Remove</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                  <td>{{item._file.name}}</td>\\n                  <td>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"item.remove()\\\">\\n                      <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span>\\n                    </button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear(); uploader.clearQueue()\\\">\\n            <span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n            <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Delete File Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-file-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this file?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteFile()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.html\n// module id = ../../../../../src/app/components/job/job.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { JobService } from '../../services/job.service';\nimport { MaterialService } from '../../services/material.service';\nimport { AuthService } from '../../services/auth.service';\nimport { BidService } from '../../services/bid.service';\nimport { FileUploader } from 'ng2-file-upload';\n// declare var $;\n\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.css']\n})\nexport class JobComponent implements OnInit {\n\n  // fileTree = {\n  //   \"name\": \"test\",\n  //   \"children\": [\n  //     {\"name\": \"http://localhost:3000/uploads/jobs/33/file-1509295300688.txt\"}\n  //   ]\n  // }\n\n  files: any;\n  filesUrls: any[] = [];\n  fileName: any;\n\n  id: any;\n  job: any;\n  jobLabor: any = null;\n  jobRevenue: any = null;\n  jobStatus: any = null;\n  createdDate: any = null;\n  endDate: any = null;\n  jobMaterials: any;\n  materials: any;\n  selectedMaterials: SelectedMaterial[] = [];\n  materialID: any;\n  status: any;\n  bidMaterials: any;\n\n  url: string;\n  uploader: FileUploader;\n  //readyItems: any[] = [];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private jobService: JobService,\n    private materialService: MaterialService,\n    private bidService: BidService,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.setupFileUploader();\n\n    this.jobService.getJobById(this.id).subscribe((job) => {\n      this.job = job;\n      this.status = job[0].jobStatus;\n\n      this.bidService.getBidMaterialsById(job[0].bidID).subscribe((bidMaterials) => {\n        this.bidMaterials = bidMaterials;\n      });\n    });\n\n    this.jobService.getJobMaterialsById(this.id).subscribe((jobMaterials) => {\n      this.jobMaterials = jobMaterials;\n\n      this.materialService.getAllMaterials().subscribe((materials) => {\n        this.materials = materials.materials;\n\n        for (let i = 0; i < this.materials.length; i++) {\n          for (let k = 0; k < this.jobMaterials.length; k++) {\n            if (this.materials[i].materialID == this.jobMaterials[k].materialID) {\n              this.materials.splice(i, 1);\n            }\n          }\n        }\n      });\n    });\n\n    this.jobService.getJobFilesByID(this.id).subscribe((files) => {\n      this.files = files.files;\n      // for(let i = 0; i < this.files.length; i++){\n      //   this.filesUrls.push(`http://localhost:3000/uploads/jobs/${this.id}/${this.files[i]}`);\n      // }\n    });\n    // console.log(this.filesUrls);\n  }\n\n  setupFileUploader() {\n    this.url = `http://localhost:3000/api/jobs/${this.id}/upload`;\n    this.authService.loadToken();\n    let headers: any = [{ name: 'Authorization', value: this.authService.authToken }, { name: 'Content-Type', value: 'application/json' }];\n    this.uploader = new FileUploader({ url: this.url });\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n      //this.readyItems.push(file);\n      //console.log(file);\n    }\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      console.log(response);\n    }\n  }\n\n  onClickDeleteFile(file) {\n    this.fileName = file;\n  }\n\n  onDeleteFile() {\n    let file = {\n      file: this.fileName\n    }\n    this.jobService.deleteJobFile(this.id, file).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onAddMaterial(material, id) {\n    this.selectedMaterials.push(material);\n    this.materials.splice(id, 1);\n  }\n\n  onRemoveMaterial(material, id) {\n    this.selectedMaterials.splice(id, 1);\n    this.materials.push(material);\n    //this.ngOnInit();\n  }\n\n  onClear() {\n    this.selectedMaterials.forEach(selectedMaterial => {\n      this.materials.push(selectedMaterial);\n    });\n    this.selectedMaterials = [];\n  }\n\n  onUpdate() {\n    let updatedJob = {\n      jobID: this.id,\n      jobLabor: Number(this.jobLabor) + Number(this.job[0].jobLabor),\n      jobRevenue: Number(this.jobRevenue) + Number(this.job[0].jobRevenue),\n      jobStatus: this.jobStatus,\n      createdDate: this.createdDate,\n      endDate: this.endDate\n    }\n\n    //console.log(updatedJob);\n\n    this.selectedMaterials.forEach(selectedMaterial => {\n      this.jobService.createJobMaterial(this.id, selectedMaterial).subscribe((data) => {\n        if (data.success) {\n          console.log(data.msg);\n        } else {\n          console.log(data.msg);\n        }\n      });\n    });\n\n    this.jobService.updateJob(updatedJob).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n      } else {\n        console.log(data.msg);\n      }\n    });\n    this.onClear();\n\n    this.ngOnInit();\n  }\n\n  onDeleteJob() {\n    this.jobService.deleteJob(this.id).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n      } else {\n        console.log(data.msg);\n      }\n    });\n\n    let updatedBid = {\n      bidID: this.job[0].bidID,\n      bidStatus: \"PENDING\"\n    };\n\n    this.bidService.updateBidStatus(updatedBid).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.router.navigate(['/jobs']);\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onClickDeleteMaterial(id) {\n    this.materialID = id;\n  }\n\n  onDeleteMaterial() {\n    let jobMaterial = {\n      materialID: this.materialID,\n      jobID: this.id\n    };\n\n    this.jobService.deleteJobMaterial(jobMaterial).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onFinish() {\n    let updatedJob = {\n      jobID: this.id,\n      jobStatus: \"COMPLETED\"\n    };\n\n    this.jobService.updateJobStatus(updatedJob).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.router.navigate(['/jobs']);\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n}\n\ninterface SelectedMaterial {\n  materialID: Number,\n  materialName: String,\n  quantity: Number,\n  perUnitCost: Number\n}\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.css\n// module id = ../../../../../src/app/components/jobs/jobs.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\n</div>\\n\\n<ng-container *ngIf=\\\"jobsLength!=0; else noJobs\\\">\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">Jobs</h2>\\n    <h4>Click To View Details</h4>\\n    <table *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Status</th>\\n          <th>Customer</th>\\n          <th>Created Date</th>\\n          <th>Completion Date</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let job of jobs;\\\" id=\\\"{{job.jobID}}\\\" [routerLink]=\\\"['/jobs/'+job.jobID]\\\">\\n          <td>{{job.jobID}}</td>\\n          <td>{{job.jobStatus}}</td>\\n          <td>{{job.customerName}}</td>\\n          <td>{{job.createdDate | date: 'MM/dd/yyyy'}}</td>\\n          <td>{{job.endDate | date: 'MM/dd/yyyy'}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</ng-container>\\n<ng-template #noJobs>\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">No Jobs</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </div>\\n</ng-template>\\n\\n<!-- <ng-container *ngIf=\\\"inProgressLength!=0 || completedLength!=0; else noJobs\\\">\\n  <ng-container *ngIf=\\\"inProgressLength!=0; else noInProgressJobs\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n      <h2 class=\\\"page-header\\\">In Progress Jobs</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Revenue</th>\\n            <th>Created Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let inProgressJob of inProgressJobs;\\\" [routerLink]=\\\"['/jobs/'+inProgressJob.jobID]\\\">\\n            <td>{{inProgressJob.jobID}}</td>\\n            <td>{{inProgressJob.jobRevenue}}</td>\\n            <td>{{inProgressJob.createdDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>  \\n    </div>\\n  </ng-container>\\n  <ng-template #noInProgressJobs>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n      <h2 class=\\\"page-header\\\">No Jobs In Progress</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n  \\n  <ng-container *ngIf=\\\"completedLength!=0; else noCompletedJobs\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n      <h2 class=\\\"page-header\\\">Completed Jobs</h2>\\n      <h4>Click To View Details</h4>\\n      <table class=\\\"table table-striped table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>ID</th>\\n            <th>Labor Cost</th>\\n            <th>Material Cost</th>\\n            <th>Income</th>\\n            <th>Created Date</th>\\n            <th>Completed Date</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let completedJob of completedJobs;\\\" [routerLink]=\\\"['/jobs/'+completedJob.jobID]\\\">\\n            <td>{{completedJob.jobID}}</td>\\n            <td>{{completedJob.jobLabor}}</td>\\n            <td>Net Income</td>\\n            <td>{{completedJob.endDate | date: 'MM/dd/yyyy'}}</td>\\n          </tr>\\n        </tbody>\\n      </table>  \\n    </div>\\n  </ng-container>\\n  <ng-template #noCompletedJobs>\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n      <h2 class=\\\"page-header\\\">No Completed Jobs</h2>\\n      <p>If this is incorrect, try refreshing the page.</p>\\n    </div>\\n  </ng-template>\\n</ng-container>\\n<ng-template #noJobs>\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n    <h2 class=\\\"page-header\\\">No Jobs</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </div>\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.html\n// module id = ../../../../../src/app/components/jobs/jobs.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { JobService } from '../../services/job.service';\nimport { Subject } from 'rxjs/Rx';\n\n@Component({\n  selector: 'app-jobs',\n  templateUrl: './jobs.component.html',\n  styleUrls: ['./jobs.component.css']\n})\nexport class JobsComponent implements OnInit {\n\n  jobs: any;\n  jobsLength: any;\n  inProgressJobs: any;\n  inProgressLength: any;\n  completedJobs: any;\n  completedLength: any;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  displayTable: Boolean = false;\n\n  constructor(\n    private jobService: JobService\n  ) { }\n\n  ngOnInit() {\n    this.jobService.getAllJobs().subscribe((jobs) => {\n      this.jobs = jobs.jobs;\n      this.jobsLength = jobs.jobs.length;\n      this.filterJobs(jobs);\n      this.setupDataTable();\n    });\n  }\n\n  ngAfterContentInit() {\n    this.applyTableColor();\n  }\n\n  applyTableColor() {\n    this.jobService.getAllJobs().subscribe(jobs => {\n      jobs.jobs.forEach(job => {\n        let id = job.jobID;\n        let status = job.jobStatus;\n        if (status == 'IN-PROGRESS') {\n          document.getElementById(id).classList.add('info');\n        } else if (status == 'COMPLETED') {\n          document.getElementById(id).classList.add('success');\n        } \n      });\n    });\n  }\n\n  setupDataTable() {\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.dtTrigger.next();\n    this.displayTable = true;\n  }\n\n  filterJobs(jobs) {\n    this.inProgressJobs = jobs.inProgressJobs;\n    this.inProgressLength = jobs.inProgressJobs.length;\n    this.completedJobs = jobs.completedJobs;\n    this.completedLength = jobs.completedJobs.length;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLogin()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-log-in\\\" aria-hidden=\\\"true\\\"></span> Login</button>\\n  <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\"><span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username:String;\n  password:String;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(){\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe((data) => {\n      if(data.success){\n        this.authService.storeUserData(data.token, data.user);\n        this.router.navigate(['home']);\n      } else{\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.css\n// module id = ../../../../../src/app/components/materials/materials.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\n</div>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <ng-container *ngIf=\\\"length != 0; else noMaterials\\\">\\n    <h2 class=\\\"page-header\\\">Materials</h2>\\n    <!-- *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" -->\\n    <table class=\\\"table table-striped table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Name</th>\\n          <th>Update</th>\\n          <th>Delete</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let material of materials\\\">\\n          <td>{{material.materialID}}</td>\\n          <td>{{material.materialName}}</td>\\n          <td>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClickUpdate(material.materialID)\\\" data-toggle=\\\"modal\\\" href='#update-modal'>\\n              <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span>\\n            </button>\\n          </td>\\n          <td>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteClick(material.materialID)\\\" data-toggle=\\\"modal\\\" href='#delete-modal'>\\n              <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n            </button>\\n          </td>\\n          <!--<button class=\\\"btn btn-danger\\\" (click)=\\\"onDeleteClick(material.materialID)\\\" data-toggle=\\\"modal\\\" href='#delete-modal'>Delete</button>-->\\n        </tr>\\n      </tbody>\\n    </table>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#create-modal'>\\n      <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Create New</button>\\n  </ng-container>\\n  <ng-template #noMaterials>\\n    <h2 class=\\\"page-header\\\">No Materials</h2>\\n    <p>If this is incorrect, try refreshing the page.</p>\\n  </ng-template>\\n</div>\\n\\n<!--                Update Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"update-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Update Material</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onUpdate()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Delete Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"delete-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this material?</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDelete()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!--                Create Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"create-modal\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Create A New Material</h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form (submit)=\\\"onCreate()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.html\n// module id = ../../../../../src/app/components/materials/materials.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MaterialService } from '../../services/material.service';\nimport { Subject } from 'rxjs/Rx';\n\n@Component({\n  selector: 'app-materials',\n  templateUrl: './materials.component.html',\n  styleUrls: ['./materials.component.css']\n})\nexport class MaterialsComponent implements OnInit {\n\n  materials: any;\n  name: any;\n  tempID: any;\n  length: any;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  displayTable: Boolean = false;\n\n  constructor(\n    private materialService: MaterialService\n  ) { }\n\n  ngOnInit() {\n    this.materialService.getAllMaterials().subscribe((materials) => {\n      this.materials = materials.materials;\n      this.length = this.materials.length;\n      // this.setupDataTable();\n    });\n  }\n\n  setupDataTable() {\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.dtTrigger.next();\n    this.displayTable = true;\n  }\n\n  onClickUpdate(materialID) {\n    this.tempID = materialID;\n  }\n\n  onUpdate() {\n    let updateMaterial = {\n      materialID: this.tempID,\n      materialName: this.name\n    }\n    this.materialService.updateMaterial(updateMaterial).subscribe(\n      (data) => {\n        if (data.success) {\n          console.log(data.msg);\n          this.ngOnInit();\n        } else {\n          console.log(data.msg);\n        }\n      });\n  }\n\n  onCreate() {\n    let newMaterial = {\n      materialName: this.name\n    }\n\n    this.materialService.createMaterial(newMaterial).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n\n  onDeleteClick(materialID) {\n    this.tempID = materialID;\n  }\n\n  onDelete() {\n    this.materialService.deleteMaterial(this.tempID).subscribe((data) => {\n      if (data.success) {\n        console.log(data.msg);\n        this.ngOnInit();\n      } else {\n        console.log(data.msg);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fill-remaining-space {\\n    /*This fills the remaining space, by using flexbox.  \\n   Every toolbar row uses a flexbox row layout. */\\n   -webkit-box-flex: 1;\\n       -ms-flex: 1 1 auto;\\n           flex: 1 1 auto;\\n};\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!-- https://stackoverflow.com/questions/38209713/how-to-make-a-responsive-nav-bar-using-angular-material-2 -->\\n<!--<md-sidenav-containe fullscreen>-->\\n<!--<md-sidenav-container>\\n    <md-toolbar color=\\\"primary\\\">\\n        <button md-button [routerLink]=\\\"['/']\\\"><md-icon>home</md-icon>Allied Waterproofing</button>\\n        <span class=\\\"fill-remaining-space\\\"></span>\\n        <div fxLayout=\\\"row\\\" fxShow=\\\"false\\\" fxShow.gt-sm>\\n            <button md-button [routerLink]=\\\"['/customers']\\\">Customers</button>\\n            <button md-button [routerLink]=\\\"['/']\\\">Something</button>\\n        </div>\\n        <button md-button [md-menu-trigger-for]=\\\"menu\\\" fxHide=\\\"false\\\" fxHide.gt-sm><md-icon>menu</md-icon></button>\\n    </md-toolbar>\\n    <md-menu x-position=\\\"before\\\" #menu=\\\"mdMenu\\\">\\n        <button md-menu-item [routerLink]=\\\"['/customers']\\\">Customers</button>\\n        <button md-menu-item [routerLink]=\\\"['/']\\\">Something</button>\\n    </md-menu>\\n</md-sidenav-container>-->\\n\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\" role=\\\"navigation\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\">Allied Waterproofing</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\n        <ul class=\\\"nav navbar-nav\\\">\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/home']\\\"><span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Home</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/customers']\\\"><span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Customers</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/inquiries']\\\"><span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Inquiries</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/bids']\\\"><span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Bids</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/jobs']\\\"><span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Jobs</a></li>\\n        </ul>\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/materials']\\\"><span class=\\\"glyphicon glyphicon-th-list\\\" aria-hidden=\\\"true\\\"></span> Edit Materials</a></li>\\n            <!-- <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/register']\\\">Register User</a></li> -->\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" data-toggle=\\\"modal\\\" href='#logout-modal'><span class=\\\"glyphicon glyphicon-log-out\\\" aria-hidden=\\\"true\\\"></span> Logout</a></li>\\n        </ul>\\n    </div><!-- /.navbar-collapse -->\\n</nav>\\n\\n\\n<!--                Logout Popup                -->\\n<div class=\\\"modal fade\\\" id=\\\"logout-modal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Warning</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <p>Are you sure you want to logout?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onLogout()\\\">Yes</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  loggedIn:any;\n\n  constructor(\n    private router:Router,\n    private authService:AuthService\n  ) { }\n\n  ngOnInit() {\n    this.loggedIn = this.authService.loggedIn();\n    console.log(this.loggedIn);\n  }\n\n  onLogout(){\n    this.authService.logout();\n    console.log('Logged out');\n    this.router.navigate(['/']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\n<h2 class=\\\"page-header\\\">Register A New User</h2>\\n<form (submit)=\\\"onRegister()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" required>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Register</button>\\n  <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Clear</button>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name:String;\n  username:String;\n  password:String;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegister(){\n    if(this.name == undefined || this.username == undefined || this.password == undefined){\n      console.log(\"Fields must be filled in\");\n    } else{\n      const user = {\n        name: this.name,\n        username: this.username,\n        password: this.password\n      }\n      this.authService.registerUser(user).subscribe((data) => {\n        if(data.success){\n          console.log(data.msg);\n          this.router.navigate(['/home']);\n        } else{\n          console.log(data.msg);\n        }\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.ts","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate{\n\n    constructor(\n        private authService:AuthService,\n        private router:Router\n    ){}\n\n    canActivate(){\n        if(this.authService.loggedIn()){\n            return true;\n        } else{\n            this.router.navigate(['/']);\n            return false;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired } from 'angular2-jwt';\nimport { CookieService } from 'ngx-cookie-service';\nimport { CookieStorage } from 'cookie-storage';\n\n@Injectable()\nexport class AuthService {\n\n  authToken:any;\n  user:any;\n  cookieStorage = new CookieStorage();\n  localHttp:String = 'http://localhost:3000/api';\n  // localHttp:String = 'api';\n\n  constructor(\n    private http:Http,\n    private cookieService: CookieService\n  ) { }\n\n  registerUser(user){\n    this.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authToken);\n    return this.http.post(`${this.localHttp}/users/register`, JSON.stringify(user),{headers: headers}).map(res => res.json());\n  }\n\n  authenticateUser(user){\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    return this.http.post(`${this.localHttp}/users/authenticate`, JSON.stringify(user),{headers: headers}).map(res => res.json());\n  }\n\n  storeUserData(token, user){\n    localStorage.setItem('id_token', token); //jwt looks for id_token by default\n    localStorage.setItem('user', JSON.stringify(user)); // local storage can only store strings\n    // this.cookieStorage.setItem('id_token', token);\n    // this.cookieStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loggedIn(){\n    return tokenNotExpired('id_token');\n  }\n\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n    // this.cookieStorage.clear();\n  }\n\n  loadToken(){\n    const token = localStorage.getItem('id_token');\n    // const token = this.cookieStorage.getItem('id_token');\n    this.authToken = token;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class BidService {\n\n  localHttp:String = 'http://localhost:3000/api';\n  // localHttp:String = 'api';\n\n  constructor(\n    private http:Http,\n    private authService:AuthService\n  ) { }\n\n  getAllBids(){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/bids/all`, {headers: headers}).map(response => response.json());\n  }\n\n  getBidById(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/bids/${id}`, {headers: headers}).map(response => response.json());\n  }\n\n  getBidMaterialsById(bidId){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/bids/${bidId}/bid-materials`, {headers: headers}).map(response => response.json());\n  }\n\n  createBid(newBid){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/bids/new`, JSON.stringify(newBid), {headers: headers}).map(response => response.json());\n  }\n\n  deleteBid(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/bids/delete/${id}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\n  }\n\n  updateBid(updatedBid){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/bids/update`, JSON.stringify(updatedBid), {headers: headers}).map(response => response.json());\n  }\n\n  createBidMaterial(newBidMaterial){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/bids/new/bid-material`, JSON.stringify(newBidMaterial), {headers: headers}).map(response => response.json());\n  }\n\n  getCurrentBidMaterialsCost(bidID){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/bids/${bidID}/bid-materials/cost`, {headers: headers}).map(response => response.json());\n  }\n\n  updateBidStatus(updatedBid){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/bids/update-status`, JSON.stringify(updatedBid), {headers: headers}).map(response => response.json());\n  }\n\n  createBidMaterialById(id, bidMaterial){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/bids/${id}/new/bid-material`, JSON.stringify(bidMaterial), {headers: headers}).map(response => response.json());\n  }\n\n  deleteBidMaterial(bidMaterial){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/bids/delete/bid-material`, JSON.stringify(bidMaterial), {headers: headers}).map(response => response.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/services/bid.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class CustomerService {\n\n  localHttp:String = 'http://localhost:3000/api/';\n  // localHttp:String = 'api';\n  \n  constructor(\n    private http:Http,\n    private authService:AuthService\n  ) { }\n\n  getAllCustomers(){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/customers/all`, {headers: headers}).map(response => response.json());\n  }\n\n  getAllContacts(customerID){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/customers/${customerID}/contacts`, {headers: headers}).map(response => response.json());\n  }\n\n  getCustomerById(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.get(`${this.localHttp}/customers/${id}`, {headers: headers}).map(response => response.json());\n  }\n\n  deleteCustomer(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/customers/delete/${id}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\n  }\n\n  deleteContact(contactID){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/customers/delete/contact/${contactID}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\n  }\n\n  createCustomer(newCustomer){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/customers/new`, JSON.stringify(newCustomer), {headers: headers}).map(response => response.json());\n  }\n\n  createContact(newContact){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/customers/${newContact.customerID}/new/contact`, JSON.stringify(newContact), {headers: headers}).map(response => response.json());\n  }\n\n  updateCustomer(updatedCustomer){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/customers/update`, JSON.stringify(updatedCustomer), {headers: headers}).map(response => response.json());\n  }\n\n  updateContact(updatedContact){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/customers/update/contact`, JSON.stringify(updatedContact), {headers: headers}).map(response => response.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/services/customer.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class InquiryService {\n\n  localHttp:String = 'http://localhost:3000/api';\n  // localHttp:String = 'api';\n  \n  constructor(\n    private http:Http,\n    private authService:AuthService\n  ) { }\n\n  getAllInquiries(){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/inquiries/all`, {headers: headers}).map(response => response.json());\n  }\n\n  getAllInquiriesTest(){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/inquiries/all`, {headers: headers});\n  }\n\n  getInquiryById(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/inquiries/${id}`, {headers: headers}).map(response => response.json());\n  }\n\n  createInquiry(newInquiry){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/inquiries/new`, JSON.stringify(newInquiry), {headers: headers}).map(response => response.json());\n  }\n\n  deleteInquiry(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/inquiries/delete/${id}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\n  }\n\n  updateInquiry(updatedInquiry){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/inquiries/update`, JSON.stringify(updatedInquiry), {headers: headers}).map(response => response.json());\n  }\n\n  updateInquiryStatus(updatedInquiry){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/inquiries/update-status`, JSON.stringify(updatedInquiry), {headers: headers}).map(response => response.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/services/inquiry.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class JobService {\n\n  localHttp:String = 'http://localhost:3000/api';\n  // localHttp:String = 'api';\n  \n  constructor(\n    private http:Http,\n    private authService:AuthService\n  ) { }\n\n  getAllJobs(){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/jobs/all`, {headers: headers}).map(response => response.json());\n  }\n\n  getJobById(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/jobs/${id}`, {headers: headers}).map(response => response.json());\n  }\n\n  getJobFilesByID(id) {\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/jobs/${id}/files`, {headers: headers}).map(response => response.json());\n  }\n\n  getCurrentJobs(){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/jobs/all/current`, {headers: headers}).map(response => response.json());\n  }\n\n  getJobMaterialsById(jobId){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/jobs/${jobId}/job-materials`, {headers: headers}).map(response => response.json());\n  }\n\n  getCurrentJobMaterialsCost(jobId){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization',this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/jobs/${jobId}/job-materials/cost`, {headers: headers}).map(response => response.json());\n  }\n\n  createJob(newJob){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/jobs/new`, JSON.stringify(newJob), {headers: headers}).map(response => response.json());\n  }\n\n  deleteJob(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/jobs/delete/${id}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\n  }\n\n  updateJob(updatedJob){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/jobs/update`, JSON.stringify(updatedJob), {headers: headers}).map(response => response.json());\n  }\n\n  updateJobStatus(updatedJob){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/jobs/update-status`, JSON.stringify(updatedJob), {headers: headers}).map(response => response.json());\n  }\n\n  createJobMaterial(id, newJobMaterial){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/jobs/${id}/new/job-material`, JSON.stringify(newJobMaterial), {headers: headers}).map(response => response.json());\n  }\n\n  deleteJobMaterial(jobMaterial){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/jobs/delete/job-material`, JSON.stringify(jobMaterial), {headers: headers}).map(response => response.json());\n  }\n\n  deleteJobFile(id, file){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/jobs/${id}/files/delete`, JSON.stringify(file), {headers: headers}).map(response => response.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/services/job.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class MaterialService {\n\n  localHttp:String = 'http://localhost:3000/api';\n  // localHttp:String = 'api';\n\n  constructor(\n    private http:Http,\n    private authService:AuthService\n  ) { }\n\n  getAllMaterials(){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Authorization', this.authService.authToken);\n    headers.append('Content-Type','application/json');\n    return this.http.get(`${this.localHttp}/materials/all`, {headers: headers}).map(response => response.json());\n  }\n\n  createMaterial(newMaterial){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization',this.authService.authToken);\n    return this.http.post(`${this.localHttp}/materials/new`, JSON.stringify(newMaterial), {headers: headers}).map(response => response.json());\n  }\n\n  deleteMaterial(id){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/materials/delete/${id}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\n  }\n\n  updateMaterial(updatedMaterial){\n    this.authService.loadToken();\n    let headers = new Headers();\n    headers.append('Content-Type','application/json');\n    headers.append('Authorization', this.authService.authToken);\n    return this.http.post(`${this.localHttp}/materials/update`, JSON.stringify(updatedMaterial), {headers: headers}).map(response => response.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/app/services/material.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/nick/Documents/GitHub/Design/angular-src/src/main.ts"],"sourceRoot":"webpack:///"}