{"version":3,"sources":["C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/$_gendir lazy","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.module.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/alert/alert.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/alert/alert.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/alert/alert.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/labor/labor.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/labor/labor.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/labor/labor.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/profile/profile.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/profile/profile.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/profile/profile.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.css","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.html","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/guards/auth.guard.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/auth.service.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/bid.service.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/customer.service.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/inquiry.service.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/job.service.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/labor.service.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/material.service.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/environments/environment.ts","C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\" style=\\\"padding-top: 80px; padding-bottom: 20px;\\\">\\r\\n    <app-alert></app-alert>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n// import { Ng2FileInputModule } from 'ng2-file-input';\r\nimport { FileSelectDirective}  from 'ng2-file-upload';\r\n//import { DataTableModule } from 'angular-4-data-table';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { Ng2FileTreeModule } from 'ng2-file-tree/ng2-file-tree';\r\nimport { InputMaskModule } from 'ng2-inputmask';\r\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n//import { MdSidenavModule, MdToolbarModule, MdIconModule, MdButtonModule, MdMenuModule } from '@angular/material';\r\n//import { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CustomersComponent } from './components/customers/customers.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { InquiriesComponent } from './components/inquiries/inquiries.component';\r\nimport { BidsComponent } from './components/bids/bids.component';\r\nimport { JobsComponent } from './components/jobs/jobs.component';\r\nimport { CustomerComponent } from './components/customer/customer.component';\r\nimport { CreateBidComponent } from './components/create-bid/create-bid.component';\r\nimport { MaterialsComponent } from './components/materials/materials.component';\r\nimport { BidComponent } from './components/bid/bid.component';\r\nimport { InquiryComponent } from './components/inquiry/inquiry.component';\r\nimport { JobComponent } from './components/job/job.component';\r\nimport { LaborComponent } from './components/labor/labor.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\n\r\nimport { CustomerService } from './services/customer.service';\r\nimport { InquiryService } from './services/inquiry.service';\r\nimport { BidService } from './services/bid.service';\r\nimport { JobService } from './services/job.service';\r\nimport { MaterialService } from './services/material.service';\r\nimport { LaborService } from './services/labor.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'customers', component: CustomersComponent, canActivate: [AuthGuard] },\r\n  { path: 'customers/:id', component: CustomerComponent, canActivate: [AuthGuard] },\r\n  { path: 'inquiries', component: InquiriesComponent, canActivate: [AuthGuard] },\r\n  { path: 'bids', component: BidsComponent, canActivate: [AuthGuard] },\r\n  { path: 'jobs', component: JobsComponent, canActivate: [AuthGuard] },\r\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\r\n  { path: 'create-bid/:id', component: CreateBidComponent, canActivate: [AuthGuard] },\r\n  { path: 'materials', component: MaterialsComponent, canActivate: [AuthGuard] },\r\n  { path: 'bids/:id', component: BidComponent, canActivate: [AuthGuard] },\r\n  { path: 'inquiries/:id', component: InquiryComponent, canActivate: [AuthGuard] },\r\n  { path: 'jobs/:id', component: JobComponent, canActivate: [AuthGuard] },\r\n  { path: 'labor', component: LaborComponent, canActivate: [AuthGuard] }\r\n  // ,{ path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    CustomersComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    InquiriesComponent,\r\n    BidsComponent,\r\n    JobsComponent,\r\n    CustomerComponent,\r\n    CreateBidComponent,\r\n    MaterialsComponent,\r\n    BidComponent,\r\n    InquiryComponent,\r\n    JobComponent,\r\n    FileSelectDirective,\r\n    LaborComponent,\r\n    ProfileComponent,\r\n    AlertComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DataTablesModule,\r\n    Ng2FileTreeModule,\r\n    InputMaskModule\r\n    // Ng2FileInputModule.forRoot(\r\n    //   {\r\n    //     browseText: \"Browse\",\r\n    //     removeText: \"Remove\",\r\n    //     invalidFileText: \"You have picked an invalid or disallowed file.\",\r\n    //     invalidFileTimeout: 8000,\r\n    //     removable: true,\r\n    //     multiple: false,\r\n    //     showPreviews: true,\r\n    //     extensions: ['jpg'],\r\n    //   },\r\n    // ),\r\n    //DataTablesModule\r\n    //BrowserAnimationsModule,\r\n    //FlexLayoutModule,\r\n    /*MdSidenavModule,\r\n    MdToolbarModule,\r\n    MdIconModule,\r\n    MdButtonModule,\r\n    MdMenuModule*/\r\n  ],\r\n  providers: [\r\n    CustomerService,\r\n    InquiryService,\r\n    BidService,\r\n    JobService,\r\n    MaterialService,\r\n    LaborService,\r\n    AuthService,\r\n    AuthGuard,\r\n    CookieService,\r\n    AlertComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/alert/alert.component.css\n// module id = ../../../../../src/app/components/alert/alert.component.css\n// module chunks = main","module.exports = \"<div href=\\\"#warningAlert\\\" id=\\\"warningAlert\\\" class=\\\"alert alert-dismissible alert-warning\\\" hidden></div>\\r\\n<div href=\\\"#successAlert\\\" id=\\\"successAlert\\\" class=\\\"alert alert-dismissible alert-success\\\" hidden></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/alert/alert.component.html\n// module id = ../../../../../src/app/components/alert/alert.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.css']\r\n})\r\nexport class AlertComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  displayAlert(message, type) {\r\n    switch (type) {\r\n      case 'warning': {\r\n        $(\"#warningAlert\").html(`<h4 style='margin-bottom: 0;'>${message}<button type='button' class='close' data-dismiss='alert'>&times;</button></h4>`);\r\n        $(\"#warningAlert\").fadeTo(2000, 500).slideUp(500, function () {\r\n          $(\"#warningAlert\").slideUp(500);\r\n        });\r\n        $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n        break;\r\n      }\r\n      case 'success': {\r\n        $(\"#successAlert\").html(`<h4 style='margin-bottom: 0;'>${message}<button type='button' class='close' data-dismiss='alert'>&times;</button></h4>`);\r\n        $(\"#successAlert\").fadeTo(2000, 500).slideUp(500, function () {\r\n          $(\"#successAlert\").slideUp(500);\r\n        });\r\n        $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/alert/alert.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[data-toggle=\\\"collapse\\\"].collapsed .if-not-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n  [data-toggle=\\\"collapse\\\"]:not(.collapsed) .if-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n  .panel-heading:hover {background-color: #1863e6 !important;}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.css\n// module id = ../../../../../src/app/components/bid/bid.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default pull-left\\\" [routerLink]=\\\"['/bids']\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Go To Bids</button>\\r\\n<button *ngIf=\\\"bid[0].bidStatus == 'ACCEPTED' && bid[0];\\\" [routerLink]=\\\"['/jobs', bid[0].associatedJobID]\\\" class=\\\"btn btn-primary pull-right\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Go To Job</button>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <ng-container *ngIf=\\\"bid[0]; else noBid\\\">\\r\\n    <h2 class=\\\"page-header\\\">Bid #{{bid[0].bidID}}</h2>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#bidAccordion\\\">\\r\\n          <h3>Bid Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"bidAccordion\\\" class=\\\"panel-body panel-collapse collapse in\\\" style=\\\"word-break:break-all\\\">\\r\\n          <h4 class=\\\"page-header\\\" style=\\\"margin-top:0;\\\">General</h4>\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Price</th>\\r\\n                <th>Created Date</th>\\r\\n                <th *ngIf=\\\"bid[0].bidStatus == 'ACCEPTED'\\\">Accepted Date</th>\\r\\n                <th *ngIf=\\\"bid[0].bidStatus == 'DECLINED'\\\">Declined Date</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{bid[0].bidPrice | currency: 'USD':true}}</td>\\r\\n                <td>{{bid[0].createdDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                <td *ngIf=\\\"bid[0].bidStatus == 'ACCEPTED'\\\">{{bid[0].endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                <td *ngIf=\\\"bid[0].bidStatus == 'DECLINED'\\\">{{bid[0].endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <br>\\r\\n          <button (click)=\\\"onClickUpdateBid()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#update-bid-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Price</button>\\r\\n\\r\\n          <h4 class=\\\"page-header\\\">Labor Costs\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#labor-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"labor-collapse\\\">\\r\\n            <div *ngIf=\\\"bidLabors.length > 0;\\\">\\r\\n              <label>Click To Update Or Delete</label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Role</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">Wage</th>\\r\\n                    <th>Hours</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let bidLabor of bidLabors; let i = index\\\" (click)=\\\"onClickUpdateBidLabor(i)\\\" data-toggle=\\\"modal\\\" href='#update-labor-modal'>\\r\\n                    <td>{{bidLabor.roleName}}</td>\\r\\n                    <td class=\\\"hidden-xs hidden-sm\\\">{{bidLabor.roleWage | currency: 'USD':true}}</td>\\r\\n                    <td>{{bidLabor.laborHours}}</td>\\r\\n                    <td>{{bidLabor.roleWage*bidLabor.laborHours | currency: 'USD':true}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\" *ngIf=\\\"totalLaborPriceTable != 0\\\">\\r\\n                    <th>Grand Total</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\"></th>\\r\\n                    <th></th>\\r\\n                    <th>{{totalLaborPriceTable | currency: 'USD':true}}</th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button *ngIf=\\\"labors.length > 0;\\\" (click)=\\\"onClearBidLabor()\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#create-labor-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Add Labor</button>\\r\\n          </div>\\r\\n\\r\\n          <h4 class=\\\"page-header\\\">Material Cost\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#materials-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"materials-collapse\\\">\\r\\n            <div *ngIf=\\\"bidMaterials.length > 0;\\\">\\r\\n              <label>Click To Update Or Delete</label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Material</th>\\r\\n                    <th>Linear Feet</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">Price Per Unit</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">Coverage In Linear Feet</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let bidMaterial of bidMaterials; let i = index\\\" data-toggle=\\\"modal\\\" href='#update-material-modal' (click)=\\\"onClickUpdateBidMaterial(bidMaterial.materialID, i)\\\">\\r\\n                    <td>{{bidMaterial.materialName}}</td>\\r\\n                    <td>{{bidMaterial.linearFeet}}</td>\\r\\n                    <td class=\\\"hidden-xs hidden-sm\\\">{{bidMaterial.pricePerUnit | currency: 'USD':true}}</td>\\r\\n                    <td class=\\\"hidden-xs hidden-sm\\\">{{bidMaterial.linearFeetCoverage}} ft</td>\\r\\n                    <td>{{bidMaterial.pricePerUnit / bidMaterial.linearFeetCoverage * bidMaterial.linearFeet | currency: 'USD':true}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\" *ngIf=\\\"totalMaterialPriceTable != 0\\\">\\r\\n                    <th>Grand Total</th>\\r\\n                    <th></th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\"></th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\"></th>\\r\\n                    <th>{{totalMaterialPriceTable | currency: 'USD':true}}</th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button *ngIf=\\\"materials.length > 0\\\" (click)=\\\"onClearBidMaterial()\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#create-material-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Add Materials</button>\\r\\n          </div>\\r\\n          <h4 class=\\\"page-header\\\">Files (Only Works On Local Machine)\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#files-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"files-collapse\\\">\\r\\n            <div *ngIf=\\\"files.length > 0\\\">\\r\\n              <label>Click To Open</label>\\r\\n              <table class=\\\"table\\\" style=\\\"border: 1px solid #dddddd;\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Name</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let file of files\\\">\\r\\n                    <td>\\r\\n                      <!-- <a target=\\\"_blank\\\" href=\\\"https://s3.us-east-2.amazonaws.com/allied-waterproofing/{{file.fileName}}\\\">{{file.fileName}}</a> -->\\r\\n                      <!-- <a target=\\\"_blank\\\" href=\\\"http://localhost:3000/api/uploads/{{file.fileName}}\\\">{{file.fileName}}</a> -->\\r\\n                      <a target=\\\"_blank\\\" href=\\\"/api/uploads/{{file.fileName}}\\\">{{file.fileName}}</a>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <button (click)=\\\"onClickDeleteFile(file)\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\">\\r\\n                        &times; Delete\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#upload-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Upload File</button>\\r\\n          </div>\\r\\n          <div class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#files-collapse'>\\r\\n            <span class=\\\"if-collapsed\\\">\\r\\n              <br>\\r\\n            </span>\\r\\n            <span class=\\\"if-not-collapsed\\\">\\r\\n              <hr>\\r\\n            </span>\\r\\n          </div>\\r\\n          <button *ngIf=\\\"status == 'PENDING'\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#create-job-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Create Job</button>\\r\\n          <button *ngIf=\\\"status == 'PENDING'\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" href='#decline-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Decline Bid</button>\\r\\n          <button *ngIf=\\\"status == 'DECLINED'\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" href='#reopen-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Re-open Bid</button>\\r\\n          <button *ngIf=\\\"bid[0].associatedJobID == null\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-bid-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Bid</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#inquiryAccordion\\\">\\r\\n          <h3>Inquiry Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"inquiryAccordion\\\" class=\\\"panel-body panel-collapse collapse\\\" style=\\\"word-break:break-all\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Received Date</th>\\r\\n                <th>Accepted Date</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{bid[0].inquiryReceivedDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                <td>{{bid[0].inquiryEndDate | date: 'MM/dd/yyyy'}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Description</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{bid[0].description}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/inquiries/'+bid[0].inquiryID]\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Open Inquiry</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#customerAccordion\\\">\\r\\n          <h3>Customer Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"customerAccordion\\\" class=\\\"panel-body panel-collapse collapse\\\" style=\\\"word-break:break-all\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Name</th>\\r\\n                <th>Address</th>\\r\\n                <th>City</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">State</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">ZIP</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{bid[0].customerName}}</td>\\r\\n                <td>{{bid[0].customerAddress}}</td>\\r\\n                <td>{{bid[0].customerCity}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{bid[0].customerState}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{bid[0].customerZIP}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/customers/'+bid[0].customerID]\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Open Customer</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noBid>\\r\\n    <h2 class=\\\"page-header\\\">No Bids</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n<!--                                          Bid Popups                                              -->\\r\\n<!--                Delete Bid Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-bid-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this bid?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDelete()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Decline Bid Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"decline-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to decline this bid?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDecline()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Re-Open Bid Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reopen-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to re-open this bid?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onReopen()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Job Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-job-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to create a job?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onCreate()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Update Bid Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-bid-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Change Bid Price</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\" (submit)=\\\"onUpdate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input required mask=\\\"0000000\\\" #price=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"bidPrice\\\" name=\\\"bidPrice\\\" placeholder=\\\"Bid Price\\\"\\r\\n              class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"price.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"price.errors.required\\\">\\r\\n                *Bid price is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClear()\\\" class=\\\"btn btn-warning\\\" (click)=\\\"onClear()\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     Bid Material Popups                                           -->\\r\\n<!--                Update Material Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-material-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update {{materialName}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f4=\\\"ngForm\\\" (submit)=\\\"onUpdateBidMaterial()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Linear Feet</label>\\r\\n            <input required mask=\\\"0000000\\\" #feet=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeet\\\" name=\\\"linearFeet\\\" placeholder=\\\"Linear Feet\\\"\\r\\n              class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"feet.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"feet.errors.required\\\">\\r\\n                *Linear feet are required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Price Per Unit</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #perUnit=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"pricePerUnit\\\"\\r\\n              name=\\\"pricePerUnit\\\" placeholder=\\\"Price Per Unit\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"perUnit.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"perUnit.errors.required\\\">\\r\\n                *Price per unit is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Coverage In Linear Feet</label>\\r\\n            <input required mask=\\\"0000000\\\" #coverage=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeetCoverage\\\" name=\\\"linearFeetCoverage\\\"\\r\\n              placeholder=\\\"Coverage In Linear Feet\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"coverage.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"coverage.errors.required\\\">\\r\\n                *Coverage in linear feet is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f4.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearMaterialUpdate()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-material-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Material Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-material-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Add Materials</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f5=\\\"ngForm\\\" (submit)=\\\"onCreateMaterial()\\\">\\r\\n          <table class=\\\"table\\\" *ngIf=\\\"materials[0] != null\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Select Material</th>\\r\\n                <th>Enter Linear Feet</th>\\r\\n                <th>Add Material</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <select (change)=\\\"onChangeMaterial($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                    <option></option>\\r\\n                    <option [value]=\\\"i\\\" *ngFor=\\\"let material of materials; let i = index;\\\">{{material.materialName}}</option>\\r\\n                  </select>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input required mask=\\\"0000000\\\" #feet2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeet\\\" name=\\\"linearFeet\\\" placeholder=\\\"Linear Feet\\\"\\r\\n                    class=\\\"form-control\\\">\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button [disabled]=\\\"feet2.invalid\\\" (click)=\\\"onAddMaterial()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n              <tr *ngIf=\\\"feet2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n                <td *ngIf=\\\"feet2.errors.required\\\"></td>\\r\\n                <td *ngIf=\\\"feet2.errors.required\\\">*Linear feet are required</td>\\r\\n                <td *ngIf=\\\"feet2.errors.required\\\"></td>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n          <label style=\\\"color:#ff0000\\\" *ngIf=\\\"selectedMaterials1.length != 0;\\\">Click To Remove</label>\\r\\n          <table class=\\\"table table-bordered table-hover\\\" *ngIf=\\\"selectedMaterials1.length != 0;\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Name</th>\\r\\n                <th>Estimated Cost</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let selectedMaterial of selectedMaterials1; let i = index\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">\\r\\n                <td>{{selectedMaterial.materialName}}</td>\\r\\n                <td>{{selectedMaterial.linearFeet*(selectedMaterial.pricePerUnit/selectedMaterial.linearFeetCoverage) | currency:\\r\\n                  'USD':true}}\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Total Material Cost</th>\\r\\n                <th>{{totalMaterialPrice | currency: 'USD':true}}</th>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n          <button [disabled]=\\\"f5.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Add</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClearBidMaterial()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Material Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-material-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete\\r\\n          <b>{{materialName | lowercase}}</b> from the current bid?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteBidMaterial()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--                                     Bid Labor Popups                                           -->\\r\\n<!--                Update labor Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-labor-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update {{roleName}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f2=\\\"ngForm\\\" (submit)=\\\"onUpdateBidLabor()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Wage</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #laborWage=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"wage\\\"\\r\\n              name=\\\"wage\\\" placeholder=\\\"Wage\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"laborWage.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"laborWage.errors.required\\\">\\r\\n                *Wage is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Hours</label>\\r\\n            <input required mask=\\\"00000\\\" #laborHours=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"hours\\\" name=\\\"hours\\\" placeholder=\\\"Hours\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"laborHours.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"laborHours.errors.required\\\">\\r\\n                *Hours are required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <button [disabled]=\\\"f2.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n            <button type=\\\"button\\\" (click)=\\\"onClearLaborUpdate()\\\" class=\\\"btn btn-warning\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-labor-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create labor Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-labor-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Add Labor</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f3=\\\"ngForm\\\" (submit)=\\\"onCreateBidLabor()\\\">\\r\\n          <table class=\\\"table\\\" *ngIf=\\\"labors[0] != null\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Select Role</th>\\r\\n                <th>Enter Hours</th>\\r\\n                <th>Add Role</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <select (change)=\\\"onChangeLabor($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                    <option></option>\\r\\n                    <option [value]=\\\"i\\\" *ngFor=\\\"let labor of labors; let i = index;\\\">{{labor.roleName}}</option>\\r\\n                  </select>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input required mask=\\\"00000\\\" #laborHours2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"hours\\\" name=\\\"hours\\\" placeholder=\\\"Hours\\\" class=\\\"form-control\\\"\\r\\n                    aria-describedby=\\\"hours-addon\\\">\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button [disabled]=\\\"laborHours2.invalid\\\" (click)=\\\"onAddLabor()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n              <tr *ngIf=\\\"laborHours2.invalid\\\">\\r\\n                <td *ngIf=\\\"laborHours2.errors.required\\\"></td>\\r\\n                <td *ngIf=\\\"laborHours2.errors.required\\\" style=\\\"color:#ff0000\\\">*Hours are required</td>\\r\\n                <td *ngIf=\\\"laborHours2.errors.required\\\"></td>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n          <label *ngIf=\\\"selectedLabors.length != 0;\\\" style=\\\"color:#ff0000\\\">Click To Remove</label>\\r\\n          <table class=\\\"table table-bordered table-hover\\\" *ngIf=\\\"selectedLabors.length != 0;\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Role</th>\\r\\n                <th>Estimated Cost</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let selectedLabor of selectedLabors; let i = index\\\" (click)=\\\"onRemoveLabor(selectedLabor, i)\\\">\\r\\n                <td>{{selectedLabor.roleName}}</td>\\r\\n                <td>{{selectedLabor.laborHours*selectedLabor.roleWage | currency:'USD':true}}\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Total Labor Cost</th>\\r\\n                <th>{{totalLaborPrice | currency: 'USD':true}}</th>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n          <button [disabled]=\\\"f3.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Add</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearContactFields()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Labor Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-labor-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete\\r\\n          <b>{{roleName | lowercase}}</b> labor from the current bid?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteBidLabor()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     FILE POPUPS                                           -->\\r\\n<!--                Delete File Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-file-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete\\r\\n          <b>{{file.fileName}}</b>?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteFile()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Upload File Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"upload-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Upload Files</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"uploader.queue.length == 0\\\" (click)=\\\"(uploader.queue.length == 0) && fileInput.click()\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-folder-open\\\" aria-hidden=\\\"true\\\"></span> Browse Files</button>\\r\\n        <input name=\\\"file\\\" type=\\\"file\\\" style=\\\"display: none;\\\" #fileInput ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n        <br>\\r\\n        <br>\\r\\n        <table *ngIf=\\\"uploader.queue.length\\\" class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Edit File Name\\r\\n                <div style=\\\"color:#ff0000\\\">*Keep File Extension</div>\\r\\n              </th>\\r\\n              <th></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n              <td>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"item.file.name\\\" (change)=\\\"item.file.name = $event.target.value\\\" />\\r\\n              </td>\\r\\n              <td>\\r\\n                <button (click)=\\\"item.remove()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">\\r\\n                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Remove\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"uploader.queue.length != 0\\\" (click)=\\\"(uploader.queue.length > 0) && uploader.uploadAll()\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Upload</button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!--                                               UNUSED MARK-UP                                                                     -->\\r\\n<!-- <label>Add Materials</label> -->\\r\\n<!-- <div class=\\\"dropdown\\\">\\r\\n            <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span> Materials\\r\\n              <span class=\\\"caret\\\"></span>\\r\\n            </button>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\r\\n                <li *ngFor=\\\"let material of materials; let i = index\\\">\\r\\n                  <a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a>\\r\\n                </li>\\r\\n              </ng-container>\\r\\n              <ng-template #noMaterials>\\r\\n                <li>\\r\\n                  <a>No more materials</a>\\r\\n                </li>\\r\\n              </ng-template>\\r\\n            </ul>\\r\\n          </div> -->\\r\\n<!-- <table class=\\\"table table-striped table-hover\\\">\\r\\n            <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Quantity</th>\\r\\n                <th>Per Unit Cost</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index;\\\">\\r\\n                <td>{{selectedMaterial.materialName}}</td>\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\"\\r\\n                    required>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table> -->\\r\\n<!-- <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n  <h2 class=\\\"page-header\\\">Update Bid</h2>\\r\\n  <form (submit)=\\\"onUpdate()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Change Bid Price</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"bidPrice\\\" name=\\\"bidPrice\\\" placeholder=\\\"Bid Price\\\" class=\\\"form-control\\\" required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Change Labor Cost</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"bidLabor\\\" name=\\\"laborCost\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\r\\n    </div>\\r\\n    <label>Add Materials</label>\\r\\n    <div class=\\\"dropdown\\\">\\r\\n      <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">Materials<span class=\\\"caret\\\"></span></button>\\r\\n      <ul class=\\\"dropdown-menu\\\">\\r\\n        <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\r\\n          <li *ngFor=\\\"let material of materials; let i = index\\\"><a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a></li>\\r\\n        </ng-container>\\r\\n        <ng-template #noMaterials>\\r\\n          <li><a>No more materials</a></li>\\r\\n        </ng-template>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <table class=\\\"table table-striped table-hover\\\">\\r\\n      <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\r\\n        <tr>\\r\\n          <th>Name</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Per Unit Cost</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index;\\\">\\r\\n          <td>{{selectedMaterial.materialName}}</td>\\r\\n          <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required></td>\\r\\n          <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\" required></td>\\r\\n          <td><button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">&times;</button></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\r\\n    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear()\\\">Clear</button>\\r\\n  </form>  \\r\\n</div> -->\\r\\n\\r\\n<!--<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n  <h2 class=\\\"page-header\\\">Create A New Job</h2>\\r\\n  <form (submit)=\\\"onCreate()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label>Created Date</label>\\r\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"createdDate\\\" name=\\\"createdDate\\\" placeholder=\\\"YYYY-MM-DD\\\" class=\\\"form-control\\\" required>\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create</button>\\r\\n    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Clear</button>\\r\\n  </form>  \\r\\n</div>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.html\n// module id = ../../../../../src/app/components/bid/bid.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { BidService } from '../../services/bid.service';\r\nimport { MaterialService } from '../../services/material.service';\r\nimport { JobService } from '../../services/job.service';\r\nimport { InquiryService } from '../../services/inquiry.service';\r\nimport { LaborService } from '../../services/labor.service';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { AlertComponent } from '../alert/alert.component';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FileUploader } from 'ng2-file-upload';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-bid',\r\n  templateUrl: './bid.component.html',\r\n  styleUrls: ['./bid.component.css']\r\n})\r\nexport class BidComponent implements OnInit {\r\n\r\n  /** BID **/\r\n  id: number = null;\r\n  bid: any;\r\n  bidPrice: number = null;\r\n  bidStatus: string = '';\r\n  createdDate: string = '';\r\n  endDate: string = '';\r\n  status: string = '';\r\n  /** MATERIALS **/\r\n  bidMaterials: any;\r\n  material: any;\r\n  materialID: number = null;\r\n  linearFeet: number = 0;\r\n  pricePerUnit: number = 0;\r\n  materialName: string = '';\r\n  linearFeetCoverage: number = 0;\r\n  totalMaterialPrice: number = 0;\r\n  totalMaterialPriceTable: number = 0;\r\n  materials: any;\r\n  selectedMaterials1: SelectedMaterial[] = [];\r\n  bidMaterialID: number = null;\r\n  materialIndex: number = null;\r\n  /** LABOR **/\r\n  labors: any = [];\r\n  laborsLoop: any = [];\r\n  bidLabors: any;\r\n  laborIndex: number = null;\r\n  wage: number = 0;\r\n  hours: number = 0;\r\n  roleName: string = '';\r\n  laborID: number = null;\r\n  selectedLabors: SelectedLabor[] = [];\r\n  totalLaborPrice: number = 0;\r\n  totalLaborPriceTable: number = 0;\r\n  /** FILES **/\r\n  files: any;\r\n  filesUrls: any[] = [];\r\n  fileName: any;\r\n  file: any;\r\n  url: string;\r\n  uploader: FileUploader;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private bidService: BidService,\r\n    private materialService: MaterialService,\r\n    private jobService: JobService,\r\n    private inquiryService: InquiryService,\r\n    private laborService: LaborService,\r\n    private authService: AuthService,\r\n    private alert: AlertComponent\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.setupFileUploader();\r\n    this.getBid();\r\n    this.getBidMaterials();\r\n    this.getBidLabors();\r\n    this.getFiles();\r\n  }\r\n\r\n  /**************************************************** Bid **********************************************************************/\r\n  getBid() {\r\n    this.bidService.getBidById(this.id).subscribe((bid) => {\r\n      this.bid = bid;\r\n      this.status = bid[0].bidStatus;\r\n    });\r\n  }\r\n  onClear() {\r\n    this.bidPrice = 0;\r\n  }\r\n\r\n  onDecline() {\r\n    const updatedBid = {\r\n      bidID: this.id,\r\n      bidStatus: \"DECLINED\"\r\n    };\r\n    this.bidService.updateBidStatus(updatedBid).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert('Bid declined', 'success');\r\n        this.ngOnInit();\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onReopen() {\r\n    const updatedBid = {\r\n      bidID: this.id,\r\n      bidStatus: \"PENDING\"\r\n    };\r\n    this.bidService.updateBidStatus(updatedBid).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert('Bid re-opened', 'success');\r\n        this.ngOnInit();\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreate() {\r\n    const newJob = {\r\n      bidID: this.id,\r\n      createdDate: this.createdDate\r\n    };\r\n    const updatedBid = {\r\n      bidID: this.id,\r\n      bidStatus: \"ACCEPTED\"\r\n    };\r\n\r\n    this.jobService.createJob(newJob).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.bidService.updateBidStatus(updatedBid).subscribe((data) => {\r\n          if (data.success) {\r\n            // console.log(data.msg);\r\n            this.alert.displayAlert('Job created', 'success');\r\n            this.router.navigate(['/jobs']);\r\n            // this.ngOnInit();\r\n          } else {\r\n            console.log(data.msg);\r\n          }\r\n        });\r\n        // this.ngOnInit();\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDelete() {\r\n    this.bidService.deleteBid(this.id).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        let updatedInquiry = {\r\n          inquiryID: this.bid[0].inquiryID,\r\n          inquiryStatus: \"PENDING\",\r\n          removeEndDate: true\r\n        };\r\n\r\n        this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\r\n          if (data.success) {\r\n            // console.log(data.msg);\r\n            this.alert.displayAlert('Bid deleted', 'success');\r\n            this.router.navigate(['/bids']);\r\n          } else {\r\n            console.log(data.msg);\r\n          }\r\n        });\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickUpdateBid() {\r\n    this.bidPrice = Math.round(this.bid[0].bidPrice);\r\n  }\r\n\r\n  onUpdate() {\r\n    let updatedBid = {\r\n      bidID: this.id,\r\n      bidPrice: this.bidPrice,\r\n      bidStatus: this.bidStatus,\r\n      createdDate: this.createdDate,\r\n      endDate: this.endDate\r\n    }\r\n\r\n    this.bidService.updateBid(updatedBid).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.onClear();\r\n        this.getBid();\r\n        $('#update-bid-modal').modal('hide');\r\n        this.alert.displayAlert('Price updated', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**************************************************** Bid Materials **********************************************************************/\r\n  getBidMaterials() {\r\n    this.totalMaterialPriceTable = 0;\r\n    this.bidService.getBidMaterialsById(this.id).subscribe((bidMaterials) => {\r\n      this.bidMaterials = bidMaterials;\r\n      for (let k = 0; k < this.bidMaterials.length; k++) {\r\n        this.totalMaterialPriceTable += ((this.bidMaterials[k].pricePerUnit / this.bidMaterials[k].linearFeetCoverage) * this.bidMaterials[k].linearFeet);\r\n      }\r\n\r\n      this.materialService.getAllMaterials().subscribe((materials) => {\r\n        this.materials = materials.materials;\r\n        this.bidMaterials.forEach(bidMaterial => {\r\n          this.materials.forEach((material, i) => {\r\n            if (material.materialID == bidMaterial.materialID) {\r\n              this.materials.splice(i, 1);\r\n              this.totalMaterialPriceTable += ((bidMaterial.pricePerUnit / bidMaterial.linearFeetCoverage) * bidMaterial.linearFeet);\r\n            }\r\n          });\r\n        });\r\n        // for (let i = 0; i < this.materials.length; i++) {\r\n        //   for (let k = 0; k < this.bidMaterials.length; k++) {\r\n        //     if (this.materials[i].materialID == this.bidMaterials[k].materialID) {\r\n        //       this.materials.splice(i, 1);\r\n        //       this.totalMaterialPriceTable += ((this.bidMaterials[k].pricePerUnit / this.bidMaterials[k].linearFeetCoverage) * this.bidMaterials[k].linearFeet);\r\n        //     }\r\n        //   }\r\n        // }\r\n      });\r\n    });\r\n  }\r\n\r\n  /********** CREATE START **********/\r\n  onCreateMaterial() {\r\n    this.selectedMaterials1.forEach(selectedMaterial => {\r\n      this.bidService.createBidMaterialById(this.id, selectedMaterial).subscribe((data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.onClearBidMaterial();\r\n    this.getBidMaterials();\r\n    $('#create-material-modal').modal('hide');\r\n    this.alert.displayAlert('Material added', 'success');\r\n  }\r\n\r\n  onSelectMaterial(material, id) {\r\n    this.material = material;\r\n    this.materialID = id;\r\n  }\r\n\r\n  onChangeMaterial(id) {\r\n    this.materialID = id;\r\n  }\r\n\r\n  onAddMaterial() {\r\n    let selectedMaterial = {\r\n      materialID: this.materials[this.materialID].materialID,\r\n      materialName: this.materials[this.materialID].materialName,\r\n      pricePerUnit: this.materials[this.materialID].pricePerUnit,\r\n      linearFeetCoverage: this.materials[this.materialID].linearFeetCoverage,\r\n      linearFeet: this.linearFeet\r\n    };\r\n    this.totalMaterialPrice += (selectedMaterial.pricePerUnit / selectedMaterial.linearFeetCoverage * this.linearFeet);\r\n    this.selectedMaterials1.push(selectedMaterial);\r\n    this.materials.splice(this.materialID, 1);\r\n    this.material = null;\r\n    this.linearFeet = 0;\r\n  }\r\n\r\n  onRemoveMaterial(material, id) {\r\n    this.totalMaterialPrice -= ((material.pricePerUnit / material.linearFeetCoverage) * material.linearFeet);\r\n    this.selectedMaterials1.splice(id, 1);\r\n    this.materials.push(material);\r\n  }\r\n  /********** CREATE END **********/\r\n\r\n  onUpdateBidMaterial() {\r\n    let updatedBidMaterial = {\r\n      bidID: this.id,\r\n      materialID: this.bidMaterialID,\r\n      linearFeet: this.linearFeet,\r\n      pricePerUnit: this.pricePerUnit,\r\n      linearFeetCoverage: this.linearFeetCoverage\r\n    };\r\n\r\n    this.bidService.updateBidMaterial(updatedBidMaterial).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getBidMaterials();\r\n        $('#update-material-modal').modal('hide');\r\n        this.alert.displayAlert('Material updated', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearMaterialUpdate() {\r\n    this.linearFeet = 0;\r\n    this.pricePerUnit = 0;\r\n    this.linearFeetCoverage = 0;\r\n  }\r\n\r\n  onClearBidMaterial() {\r\n    this.selectedMaterials1.forEach(selectedMaterial => {\r\n      this.materials.push(selectedMaterial);\r\n    });\r\n    this.selectedMaterials1 = [];\r\n    this.linearFeet = 0;\r\n    this.pricePerUnit = 0;\r\n    this.linearFeetCoverage = 0;\r\n  }\r\n\r\n  onClickUpdateBidMaterial(materialID, materialIndex) {\r\n    this.bidMaterialID = materialID;\r\n    this.materialIndex = materialIndex;\r\n    this.linearFeet = this.bidMaterials[materialIndex].linearFeet;\r\n    this.pricePerUnit = this.bidMaterials[materialIndex].pricePerUnit;\r\n    this.linearFeetCoverage = this.bidMaterials[materialIndex].linearFeetCoverage;\r\n    this.materialName = this.bidMaterials[materialIndex].materialName;\r\n  }\r\n\r\n  onDeleteBidMaterial() {\r\n    let bidMaterial = {\r\n      materialID: this.bidMaterialID,\r\n      bidID: this.id\r\n    }\r\n\r\n    console.log(bidMaterial);\r\n    this.bidService.deleteBidMaterial(bidMaterial).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getBidMaterials();\r\n        $('#update-material-modal').modal('hide');\r\n        this.alert.displayAlert('Material deleted', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**************************************************** Bid Labor **********************************************************************/\r\n  getBidLabors() {\r\n    this.totalLaborPriceTable = 0;\r\n    this.labors = [];\r\n    this.bidService.getBidLaborsById(this.id).subscribe((bidLabors) => {\r\n      this.bidLabors = bidLabors;\r\n      for (let k = 0; k < this.bidLabors.length; k++) {\r\n        this.totalLaborPriceTable += (this.bidLabors[k].roleWage * this.bidLabors[k].laborHours);\r\n      }\r\n\r\n      this.laborService.getAllLabors().subscribe((labors) => {\r\n        this.labors = labors.labors;\r\n        let index = null;\r\n        this.bidLabors.forEach(bidLabor => {\r\n          this.labors.forEach((labor, i) => {\r\n            if (labor.roleID == bidLabor.roleID) {\r\n              this.totalLaborPriceTable += (bidLabor.roleWage * bidLabor.laborHours);\r\n              this.labors.splice(i, 1);\r\n            }\r\n          })\r\n        });\r\n        // for (let i = 0; i < this.laborsLoop.length; i++) {\r\n        //   for (let k = 0; k < this.bidLabors.length; k++) {\r\n        //     if (this.laborsLoop[i].roleID == this.bidLabors[k].roleID) {\r\n        //       this.totalLaborPriceTable += (this.bidLabors[k].roleWage * this.bidLabors[k].laborHours);\r\n        //       this.labors.splice(i, 1);\r\n        //     }\r\n        //   }\r\n        // }\r\n      });\r\n    });\r\n  }\r\n\r\n  /********** CREATE START **********/\r\n  onCreateBidLabor() {\r\n    this.selectedLabors.forEach((selectedLabor) => {\r\n      this.bidService.createBidLaborById(this.id, selectedLabor).subscribe((data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.getBidLabors();\r\n    this.onClearBidLabor();\r\n    $('#create-labor-modal').modal('hide');\r\n    this.alert.displayAlert('Labor added', 'success');\r\n  }\r\n\r\n  onAddLabor() {\r\n    let selectedLabor = {\r\n      roleID: this.labors[this.laborID].roleID,\r\n      roleName: this.labors[this.laborID].roleName,\r\n      roleWage: this.labors[this.laborID].roleWage,\r\n      laborHours: this.hours\r\n    };\r\n    this.totalLaborPrice += (selectedLabor.roleWage * this.hours);\r\n    this.selectedLabors.push(selectedLabor);\r\n    this.labors.splice(this.laborID, 1);\r\n    this.hours = 0;\r\n  }\r\n\r\n  onRemoveLabor(labor, id) {\r\n    this.totalLaborPrice -= (labor.laborHours * labor.roleWage);\r\n    this.selectedLabors.splice(id, 1);\r\n    this.labors.push(labor);\r\n  }\r\n\r\n  onChangeLabor(id) {\r\n    this.laborID = id;\r\n  }\r\n  /********** CREATE END **********/\r\n\r\n  onClickUpdateBidLabor(laborIndex) {\r\n    this.laborIndex = laborIndex;\r\n    this.wage = this.bidLabors[laborIndex].roleWage;\r\n    this.hours = this.bidLabors[laborIndex].laborHours;\r\n    this.roleName = this.bidLabors[laborIndex].roleName;\r\n  }\r\n\r\n  onUpdateBidLabor() {\r\n    let updatedBidLabor = {\r\n      laborID: this.bidLabors[this.laborIndex].laborID,\r\n      roleWage: this.wage,\r\n      laborHours: this.hours\r\n    };\r\n\r\n    this.bidService.updateBidLabor(updatedBidLabor).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.onClearBidLabor();\r\n        this.getBidLabors();\r\n        $('#update-labor-modal').modal('hide');\r\n        this.alert.displayAlert('Labor updated', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteBidLabor() {\r\n    this.bidService.deleteBidLabor(this.bidLabors[this.laborIndex].laborID).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getBidLabors();\r\n        $('#update-labor-modal').modal('hide');\r\n        this.alert.displayAlert('Labor deleted', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onClearLaborUpdate() {\r\n    this.wage = 0;\r\n    this.hours = 0;\r\n  }\r\n\r\n  onClearBidLabor() {\r\n    this.laborIndex = null;\r\n    this.wage = 0;\r\n    this.hours = 0;\r\n    this.roleName = '';\r\n    this.selectedLabors.forEach((selectedLabor) => {\r\n      this.labors.push(selectedLabor);\r\n    });\r\n    this.selectedLabors = [];\r\n    this.totalLaborPrice = 0;\r\n  }\r\n\r\n  /************************************************* FILE FUNCTIONS *********************************************************/\r\n  getFiles() {\r\n    this.bidService.getBidFilesByID(this.id).subscribe((files) => {\r\n      this.files = files;\r\n      // console.log(this.files);\r\n    });\r\n  }\r\n\r\n  setupFileUploader() {\r\n    this.url = `/api/bids/${this.id}/upload`;\r\n    // this.url = `http://localhost:3000/api/bids/${this.id}/upload`;\r\n    this.authService.loadToken();\r\n    let headers: any = [{ name: 'Authorization', value: this.authService.authToken }, { name: 'Content-Type', value: 'application/json' }];\r\n    this.uploader = new FileUploader({ url: this.url });\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n      //this.readyItems.push(file);\r\n      //console.log(file);\r\n    }\r\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n      this.ngOnInit();\r\n      $('#upload-modal').modal('hide');\r\n      if (JSON.parse(response).success == true) {\r\n        this.alert.displayAlert(JSON.parse(response).msg, 'success');\r\n      } else {\r\n        this.alert.displayAlert(JSON.parse(response).msg, 'warning');\r\n      }\r\n      this.uploader.clearQueue();\r\n    }\r\n  }\r\n\r\n  onClickDeleteFile(file) {\r\n    this.file = file;\r\n    $('#delete-file-modal').modal('show');\r\n  }\r\n\r\n  onDeleteFile() {\r\n    let fileToRemove = {\r\n      key: this.file.fileName\r\n    };\r\n    this.bidService.deleteBidFile(this.file.fileID, fileToRemove).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.getFiles();\r\n        $('#delete-file-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ninterface SelectedMaterial {\r\n  materialID: number,\r\n  materialName: String,\r\n  linearFeet: number,\r\n  pricePerUnit: number,\r\n  linearFeetCoverage: number\r\n}\r\ninterface SelectedLabor {\r\n  roleID: number,\r\n  roleName: String,\r\n  roleWage: number,\r\n  laborHours: number\r\n}\r\n\r\n/*********************************************************** Unused code **************************************************************/\r\n// onAddMaterial() {\r\n//   let selectedMaterial = {\r\n//     materialID: this.material.materialID,\r\n//     materialName: this.material.materialName,\r\n//     pricePerLinearFoot: this.material.pricePerLinearFoot,\r\n//     linearFeet: this.linearFeet\r\n//   };\r\n//   this.totalMaterialPrice += (selectedMaterial.pricePerLinearFoot * this.linearFeet);\r\n//   this.selectedMaterials1.push(selectedMaterial);\r\n//   this.materials.splice(this.materialID, 1);\r\n//   this.material = null;\r\n//   this.linearFeet = 0;\r\n// }\r\n\r\n// onAddMaterial(material, id){\r\n//   this.selectedMaterials.push(material);\r\n//   this.materials.splice(id, 1);\r\n// }\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bid/bid.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.css\n// module id = ../../../../../src/app/components/bids/bids.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pull-left\\\">\\r\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Go Home</button>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"bidsLength!=0; else noBids\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">Bids</h2>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <table *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-bordered table-hover\\\">\\r\\n      <thead>\\r\\n        <tr class=\\\"active\\\">\\r\\n          <th class=\\\"hidden-xs hidden-sm\\\">ID</th>\\r\\n          <th>Customer</th>\\r\\n          <th>Status</th>\\r\\n          <!-- <th>Price</th> -->\\r\\n          <th>Created Date</th>\\r\\n          <th class=\\\"hidden-xs hidden-sm\\\">Accepted/Declined Date</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let bid of bids;\\\" id=\\\"{{bid.bidID}}\\\" [routerLink]=\\\"['/bids/'+bid.bidID]\\\" [ngClass]=\\\"{'info': bid.bidStatus=='PENDING','danger': bid.bidStatus=='DECLINED','success': bid.bidStatus=='ACCEPTED'}\\\">\\r\\n          <td class=\\\"hidden-xs hidden-sm\\\">{{bid.bidID}}</td>\\r\\n          <td>{{bid.customerName}}</td>\\r\\n          <td>{{bid.bidStatus}}</td>\\r\\n          <!-- <td>{{bid.bidPrice | currency: 'USD':true}}</td> -->\\r\\n          <td>{{bid.createdDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          <td *ngIf=\\\"bid.bidStatus != 'PENDING'\\\" class=\\\"hidden-xs hidden-sm\\\">{{bid.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          <td *ngIf=\\\"bid.bidStatus == 'PENDING'\\\" class=\\\"hidden-xs hidden-sm\\\">N/A</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<ng-template #noBids>\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">No Bids</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!--                                                  UNUSED MARKUP                                                     -->\\r\\n<!--<button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\r\\n<ng-container *ngIf=\\\"bids; else noBids\\\">\\r\\n    <h2 class=\\\"page-header\\\">Bids</h2>\\r\\n    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n      <div class=\\\"panel panel-default\\\" *ngFor=\\\"let bid of bids\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h4 class=\\\"panel-title\\\">\\r\\n            <a data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"#{{bid.bidID + '-details'}}\\\">Bid ID: {{bid.bidID}}</a>\\r\\n          </h4>\\r\\n        </div>\\r\\n        <div attr.id=\\\"{{bid.bidID + '-details'}}\\\" class=\\\"panel-collapse collapse\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <li class=\\\"list-group-item\\\"><b>Estimated Cost:</b> ${{bid.bidCost}}</li>\\r\\n            <li class=\\\"list-group-item\\\"><b>Bid Price:</b> ${{bid.bidPrice}}</li>\\r\\n            <li class=\\\"list-group-item\\\"><b>Status:</b> {{bid.bidStatus}}</li><br>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/home']\\\">Create Job</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" [routerLink]=\\\"['/home']\\\">Edit</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</ng-container>\\r\\n<ng-template #noBids>\\r\\n  <h2 class=\\\"page-header\\\">Loading...</h2>\\r\\n  <p>Try refreshing the page if there is a significant delay.</p>\\r\\n</ng-template>-->\\r\\n\\r\\n<!-- <ng-container *ngIf=\\\"pendingLength!=0 || acceptedLength!=0 || declinedLength!=0; else noBids\\\">\\r\\n  <ng-container *ngIf=\\\"pendingLength!=0; else noPendingBids\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">Pending Bids</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Price</th>\\r\\n            <th>Created Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let pendingBid of pendingBids;\\\" [routerLink]=\\\"['/bids/'+pendingBid.bidID]\\\">\\r\\n            <td>{{pendingBid.bidID}}</td>\\r\\n            <td>{{pendingBid.bidPrice}}</td>\\r\\n            <td>{{pendingBid.createdDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>  \\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noPendingBids>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Pending Bids</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  \\r\\n  <ng-container *ngIf=\\\"acceptedLength!=0; else noAcceptedBids\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">Accepted Bids</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Price</th>\\r\\n            <th>Accepted Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let acceptedBid of acceptedBids;\\\" [routerLink]=\\\"['/bids/'+acceptedBid.bidID]\\\">\\r\\n            <td>{{acceptedBid.bidID}}</td>\\r\\n            <td>{{acceptedBid.bidPrice}}</td>\\r\\n            <td>{{acceptedBid.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>  \\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noAcceptedBids>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Accepted Bids</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  \\r\\n  <ng-container *ngIf=\\\"declinedLength!=0; else noDeclinedBids\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">Declined Bids</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Price</th>\\r\\n            <th>Declined Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let declinedBid of declinedBids;\\\" [routerLink]=\\\"['/bids/'+declinedBid.bidID]\\\">\\r\\n            <td>{{declinedBid.bidID}}</td>\\r\\n            <td>{{declinedBid.bidPrice}}</td>\\r\\n            <td>{{declinedBid.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table> \\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noDeclinedBids>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Declined Bids</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</ng-container>\\r\\n<ng-template #noBids>\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">No Bids</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </div>\\r\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.html\n// module id = ../../../../../src/app/components/bids/bids.component.html\n// module chunks = main","import { Component, OnInit, AfterContentInit } from '@angular/core';\r\nimport { BidService } from '../../services/bid.service';\r\nimport { Router, Routes, ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs/Rx';\r\n\r\n@Component({\r\n  selector: 'app-bids',\r\n  templateUrl: './bids.component.html',\r\n  styleUrls: ['./bids.component.css']\r\n})\r\nexport class BidsComponent implements OnInit, AfterContentInit {\r\n\r\n  bids: any;\r\n  bidsLength: any;\r\n  pendingBids: any;\r\n  pendingLength: any;\r\n  acceptedBids: any;\r\n  acceptedLength: any;\r\n  declinedBids: any;\r\n  declinedLength: any;\r\n\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  displayTable: Boolean = false;\r\n\r\n  constructor(\r\n    private bidService: BidService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.bidService.getAllBids().subscribe((bids) => {\r\n      this.bids = bids.bids;\r\n      this.bidsLength = bids.bids.length;\r\n      // this.filterBids(bids);\r\n      this.setupDataTable();\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // this.applyTableColor();\r\n  }\r\n\r\n  applyTableColor() {\r\n    this.bidService.getAllBids().subscribe(bids => {\r\n      bids.bids.forEach(bid => {\r\n        let id = bid.bidID;\r\n        let status = bid.bidStatus;\r\n        if (status == 'PENDING') {\r\n          document.getElementById(id).classList.add('info');\r\n        } else if (status == 'DECLINED') {\r\n          document.getElementById(id).classList.add('danger');\r\n        } else if (status == 'ACCEPTED') {\r\n          document.getElementById(id).classList.add('success');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  setupDataTable(){\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      order: [0, 'desc']\r\n    };\r\n    this.dtTrigger.next();\r\n    this.displayTable = true;\r\n  }\r\n\r\n  filterBids(bids){\r\n    this.pendingBids = bids.pendingBids;\r\n    this.pendingLength = bids.pendingBids.length;\r\n    this.acceptedBids = bids.acceptedBids;\r\n    this.acceptedLength = bids.acceptedBids.length;\r\n    this.declinedBids = bids.declinedBids;\r\n    this.declinedLength = bids.declinedBids.length;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/bids/bids.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.css\n// module id = ../../../../../src/app/components/create-bid/create-bid.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/inquiries']\\\">Go Back</button>\\r\\n<h2 class=\\\"page-header\\\">Create Bid</h2>\\r\\n<form (submit)=\\\"onCreate()\\\">\\r\\n    <h3>Bid Information</h3>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Bid Price</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"bidPrice\\\" name=\\\"bidPrice\\\" placeholder=\\\"Bid Price\\\" class=\\\"form-control\\\" required>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Current Date</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"createdDate\\\" name=\\\"createdDate\\\" placeholder=\\\"Current Date\\\" class=\\\"form-control\\\" required>\\r\\n  </div>\\r\\n  <h3>Estimated Costs</h3>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Labor Cost</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"bidLabor\\\" name=\\\"bidLabor\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\r\\n  </div>\\r\\n  <label>Materials Cost</label>\\r\\n  <div class=\\\"dropdown\\\">\\r\\n    <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">Add Materials<span class=\\\"caret\\\"></span></button>\\r\\n    <ul class=\\\"dropdown-menu\\\">\\r\\n      <li *ngFor=\\\"let material of materials;\\\"><a (click)=\\\"onAddMaterial(material)\\\">{{material.materialName}}</a></li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <table class=\\\"table table-striped table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Name</th>\\r\\n        <th>Quantity</th>\\r\\n        <th>Per Unit Cost</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let selectedMaterial of selectedMaterials;\\\">\\r\\n        <td>{{selectedMaterial.materialName}}</td>\\r\\n        <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required></td>\\r\\n        <td><input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\" required></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create</button>\\r\\n  <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear()\\\">Clear</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.html\n// module id = ../../../../../src/app/components/create-bid/create-bid.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { MaterialService } from '../../services/material.service';\r\nimport { BidService } from '../../services/bid.service';\r\nimport { InquiryService } from '../../services/inquiry.service';\r\n\r\n@Component({\r\n  selector: 'app-create-bid',\r\n  templateUrl: './create-bid.component.html',\r\n  styleUrls: ['./create-bid.component.css']\r\n})\r\nexport class CreateBidComponent implements OnInit {\r\n\r\n  bidPrice:any;\r\n  createdDate:any;\r\n  bidLabor:any;\r\n  materials:any;\r\n  selectedMaterials:SelectedMaterial[] = [];\r\n\r\n  constructor(\r\n    private materialService:MaterialService,\r\n    private bidService:BidService,\r\n    private inquiryService:InquiryService,\r\n    private router:Router,\r\n    private route:ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.materialService.getAllMaterials().subscribe((materials) => {\r\n      this.materials = materials.materials;\r\n    });\r\n  }\r\n\r\n  onAddMaterial(material){\r\n    this.selectedMaterials.push(material);\r\n  }\r\n\r\n  onClear(){\r\n    this.selectedMaterials = [];\r\n  }\r\n\r\n  onCreate(){\r\n    const newBid = {\r\n      inquiryID: this.route.snapshot.params['id'],\r\n      bidLabor: this.bidLabor,\r\n      bidPrice: this.bidPrice,\r\n      createdDate: this.createdDate\r\n    };\r\n    const updatedInquiry = {\r\n      inquiryID: this.route.snapshot.params['id'],\r\n      inquiryStatus: \"ACCEPTED\"\r\n    };\r\n\r\n    this.bidService.createBid(newBid).subscribe((data) => {\r\n      if(data.success){\r\n        console.log(data.msg);\r\n        this.ngOnInit();\r\n      } else{\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n    this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\r\n      if(data.success){\r\n        console.log(data.msg);\r\n        this.ngOnInit();\r\n      } else{\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n    this.selectedMaterials.forEach(selectedMaterial => {\r\n      this.bidService.createBidMaterial(selectedMaterial).subscribe((data) => {\r\n        if(data.success){\r\n          console.log(data.msg);\r\n          this.ngOnInit();\r\n        } else{\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.router.navigate(['/bids']);\r\n  }\r\n}\r\n\r\ninterface SelectedMaterial {\r\n  materialID: Number,\r\n  materialName: String,\r\n  quantity: Number,\r\n  perUnitCost: Number\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/create-bid/create-bid.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".panel-heading:hover {background-color: #1863e6 !important;}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.css\n// module id = ../../../../../src/app/components/customer/customer.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default pull-left\\\" [routerLink]=\\\"['/customers']\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Go To Customers</button>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <ng-container *ngIf=\\\"customer[0]; else noCustomer\\\">\\r\\n    <h2 class=\\\"page-header\\\">{{customer[0].customerName}}</h2>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#customerAccordion\\\">\\r\\n          <h3>Customer Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"customerAccordion\\\" class=\\\"panel-body panel-collapse collapse in\\\" style=\\\"word-break:break-all\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Address</th>\\r\\n                <th>City</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">State</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">ZIP</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{customer[0].address}}</td>\\r\\n                <td>{{customer[0].city}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{customer[0].state}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{customer[0].zip}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <br>\\r\\n          <button (click)=\\\"onClickUpdateCustomer()\\\" class=\\\"btn btn-info\\\" href=\\\"#update-customer-modal\\\" data-toggle=\\\"modal\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Customer</button>\\r\\n          <button *ngIf=\\\"inquiries.length == 0\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-customer-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Customer</button>\\r\\n          <hr>\\r\\n          <button class=\\\"btn btn-primary\\\" href=\\\"#create-inquiry-modal\\\" data-toggle=\\\"modal\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Create Inquiry</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#contactAccordion\\\">\\r\\n          <h3>Contact Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"contactAccordion\\\" class=\\\"panel-body panel-collapse collapse\\\" style=\\\"word-break:break-all\\\">\\r\\n          <ng-container *ngIf=\\\"contacts.length > 0; else noContacts\\\">\\r\\n            <label>Click To Update Or Delete</label>\\r\\n            <table class=\\\"table table-bordered table-hover\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"active\\\">\\r\\n                  <th class=\\\"hidden-xs hidden-sm\\\">Title</th>\\r\\n                  <th>Name</th>\\r\\n                  <th>Phone</th>\\r\\n                  <th class=\\\"hidden-xs hidden-sm\\\">Email</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let contact of contacts; let i = index\\\" (click)=\\\"onClickUpdateContact(contact.contactID, i)\\\" data-toggle=\\\"modal\\\"\\r\\n                  href='#update-contact-modal'>\\r\\n                  <td class=\\\"hidden-xs hidden-sm\\\">{{contact.contactTitle}}</td>\\r\\n                  <td>{{contact.contactName}}</td>\\r\\n                  <td>{{contact.contactPhone}}</td>\\r\\n                  <td class=\\\"hidden-xs hidden-sm\\\">{{contact.contactEmail}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n            <br>\\r\\n          </ng-container>\\r\\n          <ng-template #noContacts>\\r\\n            <h5 class=\\\"page-header\\\">No Contacts</h5>\\r\\n            <p>If this is incorrect, try refreshing the page.</p>\\r\\n          </ng-template>\\r\\n          <button (click)=\\\"clearContactFields()\\\" class=\\\"btn btn-info\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" href='#create-contact-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-phone\\\" aria-hidden=\\\"true\\\"></span> Create Contact\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noCustomer>\\r\\n    <h2 class=\\\"page-header\\\">No Customers</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n<!--                              CUSTOMER POPUPS                                -->\\r\\n<!--                Update Customer Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-customer-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update {{customer[0].customerName}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f3=\\\"ngForm\\\" (submit)=\\\"onUpdateCustomer()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input required maxlength=\\\"100\\\" #customerName=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\"\\r\\n              required>\\r\\n            <div *ngIf=\\\"customerName.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"customerName.errors.required\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Address</label>\\r\\n            <input required maxlength=\\\"80\\\" #customerAddress=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"\\r\\n              placeholder=\\\"Address\\\" />\\r\\n            <div *ngIf=\\\"customerAddress.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"customerAddress.errors.required\\\">\\r\\n                *Address is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>City</label>\\r\\n            <input required maxlength=\\\"80\\\" #customerCity=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" placeholder=\\\"City\\\"\\r\\n            />\\r\\n            <div *ngIf=\\\"customerCity.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"customerCity.errors.required\\\">\\r\\n                *City is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>State</label>\\r\\n            <input maxlength=\\\"80\\\" #customerState=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\" placeholder=\\\"State\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>ZIP</label>\\r\\n            <input mask=\\\"00000\\\" #customerZIP=\\\"ngModel\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"zip\\\" name=\\\"zip\\\" placeholder=\\\"ZIP\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f3.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearCustomerFields()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Customer Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-customer-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this customer?</p>\\r\\n        <!-- <p>Are you sure you want to delete this customer and all of its inquiries, bids, and jobs?</p> -->\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteCustomer()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Inquiry Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-inquiry-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Create A New Inquiry</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form (submit)=\\\"onCreate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Description</label>\\r\\n            <textarea required maxlength=\\\"950\\\" #inquiryDescription=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\"\\r\\n              placeholder=\\\"Description\\\" class=\\\"form-control\\\"></textarea> {{description.length}}/950\\r\\n            <div *ngIf=\\\"inquiryDescription.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"inquiryDescription.errors.required\\\">\\r\\n                *Description is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"inquiryDescription.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearDescription()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                              CONTACT POPUPS                                -->\\r\\n<!--                Update Contact Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-contact-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update {{contactName}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\" (submit)=\\\"onUpdateContact()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Title</label>\\r\\n            <input required maxlength=\\\"40\\\" #title=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactTitle\\\" name=\\\"contactTitle\\\"\\r\\n              placeholder=\\\"Title\\\" />\\r\\n            <div *ngIf=\\\"title.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"title.errors.required\\\">\\r\\n                *Title is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input required maxlength=\\\"40\\\" #contactsName=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactName\\\" name=\\\"contactName\\\"\\r\\n              placeholder=\\\"Name\\\" />\\r\\n            <div *ngIf=\\\"contactsName.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"contactsName.errors.required\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\">Phone</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" mask=\\\"(000)000-0000\\\" [(ngModel)]=\\\"contactPhone\\\" name=\\\"contactPhone\\\" placeholder=\\\"Phone\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\">Email</label>\\r\\n            <input type=\\\"text\\\" maxlength=\\\"40\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactEmail\\\" name=\\\"contactEmail\\\" placeholder=\\\"Email\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearContactFields()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" href='#delete-contact-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Contact Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-contact-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete\\r\\n          <b>{{contactName}}</b>?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteContact()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Contact Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-contact-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Create Contact</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f2=\\\"ngForm\\\" (submit)=\\\"onCreateContact()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Title</label>\\r\\n            <input required maxlength=\\\"40\\\" #title2=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactTitle\\\" name=\\\"contactTitle\\\"\\r\\n              placeholder=\\\"Title\\\" />\\r\\n            <div *ngIf=\\\"title2.invalid\\\">\\r\\n              <div *ngIf=\\\"title2.errors.required\\\" style=\\\"color:#ff0000\\\">\\r\\n                *Title is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input required maxlength=\\\"40\\\" #contactsName2=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"contactName\\\" name=\\\"contactName\\\"\\r\\n              placeholder=\\\"Name\\\" />\\r\\n            <div *ngIf=\\\"contactsName2.invalid\\\">\\r\\n              <div *ngIf=\\\"contactsName2.errors.required\\\" style=\\\"color:#ff0000\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Phone</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" mask=\\\"(000)000-0000\\\" [(ngModel)]=\\\"contactPhone\\\" name=\\\"contactPhone\\\" placeholder=\\\"Phone\\\"\\r\\n            />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Email</label>\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"contactEmail\\\" name=\\\"contactEmail\\\" placeholder=\\\"Email\\\" />\\r\\n            <!-- email #email2=\\\"ngModel\\\" type=\\\"email\\\" maxlength=\\\"40\\\" -->\\r\\n            <!-- <div *ngIf=\\\"email2.invalid\\\">\\r\\n              <div *ngIf=\\\"email2.errors.email && contactEmail.length > 0\\\" style=\\\"color:#ff0000\\\">\\r\\n                *Invalid Email\\r\\n              </div>\\r\\n            </div> -->\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f2.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-phone\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearContactFields()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.html\n// module id = ../../../../../src/app/components/customer/customer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { CustomerService } from '../../services/customer.service';\r\nimport { InquiryService } from '../../services/inquiry.service';\r\nimport { AlertComponent } from '../alert/alert.component';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  /** CUSTOMER **/\r\n  id: number = null;\r\n  customer: any;\r\n  description: string = '';\r\n  receivedDate: any;\r\n  name: string = '';\r\n  address: string = '';\r\n  city: string = '';\r\n  state: string = '';\r\n  zip: number = null;\r\n\r\n  /** CONTACT **/\r\n  contactTitle: string = '';\r\n  contactName: string = '';\r\n  contactPhone: number = null;\r\n  contactEmail: string = '';\r\n  contacts: any;\r\n  contactID: any;\r\n\r\n  /** INQUIRY **/\r\n  inquiries: any;\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private inquiryService: InquiryService,\r\n    private alert: AlertComponent,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.getCustomer();\r\n    this.getContacts();\r\n    this.getInquiries();\r\n  }\r\n\r\n  /*************************************************** CUSTOMER FUNCTIONS ***********************************************************/\r\n  getCustomer() {\r\n    this.customerService.getCustomerById(this.id).subscribe((customer) => {\r\n      this.customer = customer;\r\n    });\r\n  }\r\n\r\n  onCreate() {\r\n    const newInquiry = {\r\n      customerID: this.id,\r\n      description: this.description,\r\n      receivedDate: this.receivedDate\r\n    }\r\n\r\n    this.inquiryService.createInquiry(newInquiry).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.clearDescription();\r\n        $('#create-inquiry-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n        this.router.navigate(['/inquiries']);\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteCustomer() {\r\n    this.customerService.deleteCustomer(this.id).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert(data.msg, 'success');\r\n        this.router.navigate(['/customers']);\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickUpdateCustomer() {\r\n    this.name = this.customer[0].customerName;\r\n    this.address = this.customer[0].address;\r\n    this.city = this.customer[0].city;\r\n    this.state = this.customer[0].state;\r\n    this.zip = this.customer[0].zip;\r\n  }\r\n\r\n  onUpdateCustomer() {\r\n    let updatedCustomer = {\r\n      customerID: this.id,\r\n      name: this.name,\r\n      address: this.address,\r\n      city: this.city,\r\n      state: this.state,\r\n      zip: this.zip\r\n    }\r\n\r\n    this.customerService.updateCustomer(updatedCustomer).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.getCustomer();\r\n        this.clearCustomerFields();\r\n        $('#update-customer-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearCustomerFields() {\r\n    this.name = '';\r\n    this.address = '';\r\n    this.city = '';\r\n    this.state = '';\r\n    this.zip = null;\r\n  }\r\n\r\n  clearDescription() {\r\n    this.description = '';\r\n  }\r\n\r\n  /*************************************************** INQUIRY FUNCTIONS ***********************************************************/\r\n  getInquiries() {\r\n    this.inquiryService.getInquiriesByCustomer(this.id).subscribe(inquiries => {\r\n      this.inquiries = inquiries.inquiries;\r\n    });\r\n  }\r\n\r\n  /*************************************************** CONTACT FUNCTIONS ***********************************************************/\r\n  getContacts() {\r\n    this.customerService.getAllContacts(this.id).subscribe((contacts) => {\r\n      this.contacts = contacts;\r\n    });\r\n  }\r\n\r\n  onClickUpdateContact(contactID, contactIndex) {\r\n    this.contactID = contactID;\r\n    this.contactTitle = this.contacts[contactIndex].contactTitle;\r\n    this.contactName = this.contacts[contactIndex].contactName;\r\n    this.contactPhone = this.contacts[contactIndex].contactPhone;\r\n    this.contactEmail = this.contacts[contactIndex].contactEmail;\r\n  }\r\n\r\n  onUpdateContact() {\r\n    let updatedContact = {\r\n      contactID: this.contactID,\r\n      contactTitle: this.contactTitle,\r\n      contactName: this.contactName,\r\n      contactPhone: this.contactPhone,\r\n      contactEmail: this.contactEmail\r\n    }\r\n\r\n    this.customerService.updateContact(updatedContact).subscribe((data) => {\r\n      console.log(data);\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getContacts();\r\n        this.clearContactFields();\r\n        $('#update-contact-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteContact() {\r\n    this.customerService.deleteContact(this.contactID).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getContacts();\r\n        $('#update-contact-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateContact() {\r\n    let newContact = {\r\n      customerID: this.id,\r\n      contactTitle: this.contactTitle,\r\n      contactName: this.contactName,\r\n      contactPhone: this.contactPhone,\r\n      contactEmail: this.contactEmail\r\n    }\r\n\r\n    this.customerService.createContact(newContact).subscribe((data) => {\r\n      console.log(data);\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getContacts();\r\n        this.clearContactFields();\r\n        $('#create-contact-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearContactFields() {\r\n    this.contactTitle = '';\r\n    this.contactName = '';\r\n    this.contactPhone = null;\r\n    this.contactEmail = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customer/customer.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.css\n// module id = ../../../../../src/app/components/customers/customers.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pull-left\\\">\\r\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\"><span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Go Home</button>\\r\\n</div>\\r\\n\\r\\n<h2 class=\\\"page-header col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">Customers</h2>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <ng-container *ngIf=\\\"customers; else noCustomers\\\">\\r\\n    <h4>Click To View Details</h4>\\r\\n    <!-- *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" -->\\r\\n    <table class=\\\"table table-bordered table-hover\\\">\\r\\n      <thead>\\r\\n        <tr class=\\\"active\\\">\\r\\n          <th>ID</th>\\r\\n          <th>Name</th>\\r\\n          <th>Address</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let customer of customers;\\\" [routerLink]=\\\"['/customers/'+customer.customerID]\\\">\\r\\n          <td>{{customer.customerID}}</td>\\r\\n          <td>{{customer.customerName}}</td>\\r\\n          <td>{{customer.address}}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" href=\\\"#create-modal\\\" data-toggle=\\\"modal\\\"><span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Create New</button>\\r\\n  </ng-container>\\r\\n  <ng-template #noCustomers>\\r\\n    <h2 class=\\\"page-header\\\">No Customers</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n<!--                Create Customer Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Create A New Customer</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\" (submit)=\\\"onCreate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input required maxlength=\\\"100\\\" #customerName=\\\"ngModel\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"customerName.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"customerName.errors.required\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Address</label>\\r\\n            <input required maxlength=\\\"80\\\" #customerAddress=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"customerAddress.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"customerAddress.errors.required\\\">\\r\\n                *Address is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>City</label>\\r\\n            <input required maxlength=\\\"80\\\" #customerCity=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" placeholder=\\\"City\\\" />\\r\\n            <div *ngIf=\\\"customerCity.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"customerCity.errors.required\\\">\\r\\n                *City is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>State</label>\\r\\n            <input maxlength=\\\"80\\\" #customerState=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\" placeholder=\\\"State\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>ZIP</label>\\r\\n            <input mask=\\\"00000\\\" #customerZIP=\\\"ngModel\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"zip\\\" name=\\\"zip\\\" placeholder=\\\"ZIP\\\" />\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\"><span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearFields()\\\" class=\\\"btn btn-warning\\\"><span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\"><span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.html\n// module id = ../../../../../src/app/components/customers/customers.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CustomerService } from '../../services/customer.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs/Rx';\r\nimport { AlertComponent } from '../alert/alert.component'; \r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styleUrls: ['./customers.component.css']\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n\r\n  customers: any;\r\n  name: string = '';\r\n  address: string = '';\r\n  city: string = '';\r\n  state: string = '';\r\n  zip: number = null;\r\n\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  displayTable: Boolean = false;\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private alert: AlertComponent,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getCustomers();\r\n    // this.setupDataTable();\r\n  }\r\n\r\n  getCustomers() {\r\n    this.customerService.getAllCustomers().subscribe((customers) => {\r\n      this.customers = customers.customers;\r\n    });\r\n  }\r\n\r\n  setupDataTable() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers'\r\n    };\r\n    this.dtTrigger.next();\r\n    this.displayTable = true;\r\n  }\r\n\r\n  onCreate() {\r\n    const newCustomer = {\r\n      customerName: this.name,\r\n      address: this.address,\r\n      city: this.city,\r\n      state: this.state,\r\n      zip: this.zip\r\n    }\r\n\r\n    this.customerService.createCustomer(newCustomer).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.getCustomers();\r\n        this.clearFields();\r\n        $('#create-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearFields() {\r\n    this.name = '';\r\n    this.address = '';\r\n    this.city = '';\r\n    this.state = '';\r\n    this.zip = null;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/customers/customers.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* .panel:hover {\\r\\n    background-color: #dfdfdf !important;\\r\\n  } */\\r\\n  [data-toggle=\\\"collapse\\\"].collapsed .if-not-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n  [data-toggle=\\\"collapse\\\"]:not(.collapsed) .if-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n  .panel-heading:hover {background-color: #1863e6 !important;}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<ng-container *ngIf=\\\"jobs.length > 0; else noJobs\\\">\\r\\n  <!-- <h2 class=\\\"page-header\\\">Current Jobs</h2> -->\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <h1>Current Jobs</h1>\\r\\n      <p>Click To View Details</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n    <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let job of jobs; let i = index\\\">\\r\\n      <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" [attr.href]=\\\"'#accordion' + job.jobID\\\">\\r\\n        <h3>\\r\\n          Job # {{job.jobID}}\\r\\n          <!-- <button type=\\\"button\\\" class=\\\"btn btn-info collapsed\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" [attr.href]=\\\"'#accordion' + job.jobID\\\">\\r\\n            <span class=\\\"if-collapsed\\\">Show</span>\\r\\n            <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n          </button> -->\\r\\n        </h3>\\r\\n      </div>\\r\\n      <div [attr.id]=\\\"'accordion' + job.jobID\\\" class=\\\"panel-body panel-collapse collapse\\\" style=\\\"margin-top:0;\\\">\\r\\n        <h4>Customer:</h4>\\r\\n        <h5>{{job.customerName}}</h5>\\r\\n        <hr>\\r\\n        <h4>Budget:</h4>\\r\\n        <div class=\\\"progress progress-striped active\\\">\\r\\n          <div [attr.id]=\\\"'costProgress'+job.jobID\\\" class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"job.actualCosts\\\"\\r\\n            aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"job.expectedCosts\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (job.actualCosts/job.expectedCosts)*100+ '%'}\\\">\\r\\n            <!-- {{job.actualCosts/job.expectedCosts | percent:'1.0-0'}} -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <h4>Revenue Collected:</h4>\\r\\n        <div class=\\\"progress progress-striped active\\\">\\r\\n          <div id=\\\"revenueProgress\\\" class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"job.actualRevenue\\\"\\r\\n            aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"job.expectedRevenue\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (job.actualRevenue/job.expectedRevenue)*100+ '%'}\\\">\\r\\n            <!-- {{job.actualRevenue/job.expectedRevenue | percent:'1.0-0'}} -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <hr>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/jobs/'+job.jobID]\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Open Job</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<ng-template #noJobs>\\r\\n  <h2 class=\\\"page-header\\\">No Current Jobs</h2>\\r\\n  <p>If this is incorrect, try refreshing the page.</p>\\r\\n</ng-template>\\r\\n\\r\\n<!--                                                UNUSED MARKUP                                                                -->\\r\\n<!-- <h4>Click To View Details</h4> -->\\r\\n<!-- <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let currentJob of currentJobs; let i = index\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">Job # {{currentJob.jobID}}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <h4>Customer:</h4><p>{{currentJob.customerName}}</p>\\r\\n      <hr>\\r\\n      <h4>Budget:</h4>\\r\\n      <div class=\\\"progress progress-striped active\\\">\\r\\n        <div id=\\\"costProgress\\\" class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"jobCosts[i]\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"bidCosts[i]\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (jobCosts[i]/bidCosts[i])*100+ '%'}\\\">\\r\\n          {{jobCosts[i]/bidCosts[i] | percent:'1.0-0'}}\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <h4>Revenue Collected:</h4>\\r\\n      <div class=\\\"progress progress-striped active\\\">\\r\\n        <div id=\\\"revenueProgress\\\" class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"currentJob.jobRevenue\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"currentJob.bidPrice\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (currentJob.jobRevenue/currentJob.bidPrice)*100+ '%'}\\\">\\r\\n          {{currentJob.jobRevenue/currentJob.bidPrice | percent:'1.0-0'}}\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/jobs/'+currentJob.jobID]\\\"><span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Open Job</button>\\r\\n    </div>\\r\\n  </div> -->\\r\\n<!-- <ul class=\\\"list-group\\\" *ngFor=\\\"let currentJob of currentJobs; let i = index\\\" [routerLink]=\\\"['/jobs/'+currentJob.jobID]\\\">\\r\\n    <h3 class=\\\"page-header\\\">Job # {{currentJob.jobID}}</h3>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <li class=\\\"list-group-item\\\"><b>Customer:</b> {{currentJob.customerName}}</li>\\r\\n    <li class=\\\"list-group-item\\\"><b>Budget:</b>\\r\\n      <div class=\\\"progress\\\">\\r\\n        <div id=\\\"costProgress\\\" class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"jobCosts[i]\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"bidCosts[i]\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (jobCosts[i]/bidCosts[i])*100+ '%'}\\\">\\r\\n          {{jobCosts[i]/bidCosts[i] | percent:'1.0-0'}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item\\\"><b>Revenue Collected:</b>\\r\\n      <div class=\\\"progress\\\">\\r\\n        <div id=\\\"revenueProgress\\\" class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"currentJob.jobRevenue\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"currentJob.bidPrice\\\" [ngStyle]=\\\"{'min-width': '2em', 'width': (currentJob.jobRevenue/currentJob.bidPrice)*100+ '%'}\\\">\\r\\n          {{currentJob.jobRevenue/currentJob.bidPrice | percent:'1.0-0'}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul> -->\\r\\n<!-- </ng-container>\\r\\n<ng-template #noJobs>\\r\\n  <h2 class=\\\"page-header\\\">No Current Jobs</h2>\\r\\n  <p>If this is incorrect, try refreshing the page.</p>\\r\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { JobService } from '../../services/job.service';\r\nimport { BidService } from '../../services/bid.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  jobs: any = [];\r\n  currentJobs: any = [];\r\n  currentJobsLength: any;\r\n  jobCosts: any[] = [];\r\n  bidCosts: any[] = [];\r\n\r\n  constructor(\r\n    private jobService: JobService,\r\n    private bidService: BidService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // this.jobService.getCurrentJobs().subscribe((jobs) => {\r\n    //   this.currentJobs = jobs.jobs;\r\n    //   this.currentJobsLength = jobs.jobs.length;\r\n\r\n    //   jobs.jobs.forEach((currentJob) => {\r\n    //     this.jobService.getCurrentJobMaterialsCost(currentJob.jobID).subscribe(cost => {\r\n    //       this.jobCosts.push(cost[0].jobMaterialCost + currentJob.jobLabor);\r\n    //     });\r\n    //     this.bidService.getCurrentBidMaterialsCost(currentJob.jobID).subscribe(cost => {\r\n    //       this.bidCosts.push(cost[0].bidMaterialCost + currentJob.bidLabor);\r\n    //     });\r\n    //   });\r\n    // });\r\n    this.jobService.getCurrentJobsCosts().subscribe((jobs) => {\r\n      this.jobs = jobs.jobs;\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.css\n// module id = ../../../../../src/app/components/inquiries/inquiries.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pull-left\\\">\\r\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Go Home</button>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"inquiriesLength!=0; else noInquiries\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">Inquiries</h2>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <table *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-bordered table-hover\\\">\\r\\n      <thead>\\r\\n        <tr class=\\\"active\\\">\\r\\n          <th class=\\\"hidden-xs hidden-sm\\\">ID</th>\\r\\n          <th>Customer</th>\\r\\n          <th>Status</th>\\r\\n          <th>Received Date</th>\\r\\n          <th class=\\\"hidden-xs hidden-sm\\\">Accepted/Declined Date</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let inquiry of inquiries;\\\" id=\\\"{{inquiry.inquiryID}}\\\" [ngClass]=\\\"{'info': inquiry.inquiryStatus=='PENDING','danger': inquiry.inquiryStatus=='DECLINED','success': inquiry.inquiryStatus=='ACCEPTED'}\\\"\\r\\n          [routerLink]=\\\"['/inquiries/'+inquiry.inquiryID]\\\">\\r\\n          <td class=\\\"hidden-xs hidden-sm\\\">{{inquiry.inquiryID}}</td>\\r\\n          <td>{{inquiry.customerName}}</td>\\r\\n          <td>{{inquiry.inquiryStatus}}</td>\\r\\n          <td>{{inquiry.receivedDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          <td *ngIf=\\\"inquiry.inquiryStatus != 'PENDING'\\\" class=\\\"hidden-xs hidden-sm\\\">{{inquiry.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          <td *ngIf=\\\"inquiry.inquiryStatus == 'PENDING'\\\" class=\\\"hidden-xs hidden-sm\\\">N/A</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<ng-template #noInquiries>\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">No Inquiries</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- <ng-container *ngIf=\\\"pendingLength!=0 || acceptedLength!=0 || declinedLength!=0; else noInquiries\\\">\\r\\n  <ng-container *ngIf=\\\"pendingLength!=0; else noPendingInquiries\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">Pending Inquiries</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Received Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let pendingInquiry of pendingInquiries;\\\" [routerLink]=\\\"['/inquiries/'+pendingInquiry.inquiryID]\\\">\\r\\n            <td>{{pendingInquiry.inquiryID}}</td>\\r\\n            <td>{{pendingInquiry.receivedDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noPendingInquiries>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Pending Inquiries</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-container *ngIf=\\\"acceptedLength!=0; else noAcceptedInquiries\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">Accepted Inquiries</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Accepted Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let acceptedInquiry of acceptedInquiries;\\\" [routerLink]=\\\"['/inquiries/'+acceptedInquiry.inquiryID]\\\">\\r\\n            <td>{{acceptedInquiry.inquiryID}}</td>\\r\\n            <td>{{acceptedInquiry.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>  \\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noAcceptedInquiries>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Accepted Inquiries</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n  <ng-container *ngIf=\\\"declinedLength!=0; else noDeclinedInquiries\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">Declined Inquiries</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Declined Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let declinedInquiry of declinedInquiries;\\\" [routerLink]=\\\"['/inquiries/'+declinedInquiry.inquiryID]\\\">\\r\\n            <td>{{declinedInquiry.inquiryID}}</td>\\r\\n            <td>{{declinedInquiry.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>  \\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noDeclinedInquiries>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-4 col-lg-4\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Declined Inquiries</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</ng-container>\\r\\n<ng-template #noInquiries>\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">No Inquiries</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </div>\\r\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.html\n// module id = ../../../../../src/app/components/inquiries/inquiries.component.html\n// module chunks = main","import { Component, OnInit, AfterContentInit } from '@angular/core';\r\nimport { InquiryService } from '../../services/inquiry.service';\r\nimport { Subject } from 'rxjs/Rx';\r\n//import { DataTable, DataTableResource } from 'angular-4-data-table';\r\n//declare var $;\r\n\r\n@Component({\r\n  selector: 'app-inquiries',\r\n  templateUrl: './inquiries.component.html',\r\n  styleUrls: ['./inquiries.component.css']\r\n})\r\nexport class InquiriesComponent implements OnInit, AfterContentInit {\r\n\r\n  inquiries: any;\r\n  inquiriesLength: any;\r\n  pendingInquiries: any;\r\n  pendingLength: any;\r\n  acceptedInquiries: any;\r\n  acceptedLength: any;\r\n  declinedInquiries: any;\r\n  declinedLength: any;\r\n\r\n  // inquiriesResource:any;\r\n  // inquiriesCount = 0;\r\n\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  displayTable: Boolean = false;\r\n\r\n  constructor(\r\n    private inquiryService: InquiryService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.inquiryService.getAllInquiries().subscribe((inquiries) => {\r\n      this.inquiries = inquiries.inquiries;\r\n      this.inquiriesLength = inquiries.inquiries.length;\r\n      //this.inquiriesResource = new DataTableResource(this.inquiries);\r\n      // this.filterInquiries(inquiries);\r\n      this.setupDataTable();\r\n    });\r\n    // $(document).ready(function() {\r\n    //   $('#example').DataTable();\r\n    // });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // this.applyTableColor();\r\n  }\r\n\r\n  applyTableColor() {\r\n    this.inquiryService.getAllInquiries().subscribe(inquiries => {\r\n      inquiries.inquiries.forEach(inquiry => {\r\n        let id = inquiry.inquiryID;\r\n        let status = inquiry.inquiryStatus;\r\n        if (status == 'PENDING') {\r\n          document.getElementById(id).classList.add('info');\r\n        } else if (status == 'DECLINED') {\r\n          document.getElementById(id).classList.add('danger');\r\n        } else if (status == 'ACCEPTED') {\r\n          document.getElementById(id).classList.add('success');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  filterInquiries(inquiries) {\r\n    this.pendingInquiries = inquiries.pendingInquiries;\r\n    this.pendingLength = inquiries.pendingInquiries.length;\r\n    this.acceptedInquiries = inquiries.acceptedInquiries;\r\n    this.acceptedLength = inquiries.acceptedInquiries.length;\r\n    this.declinedInquiries = inquiries.declinedInquiries;\r\n    this.declinedLength = inquiries.declinedInquiries.length;\r\n  }\r\n\r\n  setupDataTable() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      order: [0, 'desc']\r\n    };\r\n    this.dtTrigger.next();\r\n    this.displayTable = true;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiries/inquiries.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[data-toggle=\\\"collapse\\\"].collapsed .if-not-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n  [data-toggle=\\\"collapse\\\"]:not(.collapsed) .if-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n.panel-heading:hover {background-color: #1863e6 !important;}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.css\n// module id = ../../../../../src/app/components/inquiry/inquiry.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default pull-left\\\" [routerLink]=\\\"['/inquiries']\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Go To Inquiries</button>\\r\\n<button *ngIf=\\\"inquiry[0].inquiryStatus == 'ACCEPTED' && inquiry[0];\\\" [routerLink]=\\\"['/bids', inquiry[0].associatedBidID]\\\"\\r\\n  class=\\\"btn btn-primary pull-right\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Go To Bid</button>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <ng-container *ngIf=\\\"inquiry[0]; else noInquiry\\\">\\r\\n    <h2 class=\\\"page-header\\\">Inquiry #{{inquiry[0].inquiryID}}</h2>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#inquiryAccordion\\\">\\r\\n          <h3>Inquiry Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"inquiryAccordion\\\" class=\\\"panel-body panel-collapse collapse in\\\" style=\\\"word-break:break-all\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Received Date</th>\\r\\n                <th *ngIf=\\\"inquiry[0].inquiryStatus == 'ACCEPTED'\\\">Accepted Date</th>\\r\\n                <th *ngIf=\\\"inquiry[0].inquiryStatus == 'DECLINED'\\\">Declined Date</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{inquiry[0].receivedDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                <td *ngIf=\\\"inquiry[0].inquiryStatus == 'ACCEPTED'\\\">{{inquiry[0].endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                <td *ngIf=\\\"inquiry[0].inquiryStatus == 'DECLINED'\\\">{{inquiry[0].endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <br>\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Description</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{inquiry[0].description}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <h4 class=\\\"page-header\\\">Files (Only Works On Local Machine)\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#files-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"files-collapse\\\">\\r\\n            <div *ngIf=\\\"files.length > 0\\\">\\r\\n              <label>Click To Open</label>\\r\\n              <table class=\\\"table\\\" style=\\\"border: 1px solid #dddddd;\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Name</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let file of files\\\">\\r\\n                    <td>\\r\\n                      <!-- <a target=\\\"_blank\\\" href=\\\"https://s3.us-east-2.amazonaws.com/allied-waterproofing/{{file.fileName}}\\\">{{file.fileName}}</a> -->\\r\\n                      <!-- <a target=\\\"_blank\\\" href=\\\"http://localhost:3000/api/uploads/{{file.fileName}}\\\">{{file.fileName}}</a> -->\\r\\n                      <a target=\\\"_blank\\\" href=\\\"/api/uploads/{{file.fileName}}\\\">{{file.fileName}}</a>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <button (click)=\\\"onClickDeleteFile(file)\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\">\\r\\n                        &times; Delete\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#upload-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Upload File</button>\\r\\n          </div>\\r\\n          <div class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#files-collapse'>\\r\\n            <span class=\\\"if-collapsed\\\">\\r\\n              <br>\\r\\n            </span>\\r\\n            <span class=\\\"if-not-collapsed\\\">\\r\\n              <hr>\\r\\n            </span>\\r\\n          </div>\\r\\n          <button (click)=\\\"onClickUpdate()\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href=\\\"#update-modal\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Description</button>\\r\\n          <button *ngIf=\\\"status == 'PENDING'\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" href='#decline-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Decline Inquiry</button>\\r\\n          <button *ngIf=\\\"status == 'DECLINED'\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" href='#reopen-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Re-Open Inquiry</button>\\r\\n          <button *ngIf=\\\"inquiry[0].associatedBidID == null\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Inquiry</button>\\r\\n          <hr *ngIf=\\\"status == 'PENDING'\\\">\\r\\n          <button *ngIf=\\\"status == 'PENDING'\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#create-bid-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Create Bid</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#customerAccordion\\\">\\r\\n          <h3>Customer Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"customerAccordion\\\" class=\\\"panel-body panel-collapse collapse\\\" style=\\\"word-break:break-all\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Name</th>\\r\\n                <th>Address</th>\\r\\n                <th>City</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">State</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">ZIP</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{inquiry[0].customerName}}</td>\\r\\n                <td>{{inquiry[0].customerAddress}}</td>\\r\\n                <td>{{inquiry[0].customerCity}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{inquiry[0].customerState}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{inquiry[0].customerZIP}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/customers/'+inquiry[0].customerID]\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Open Customer</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noInquiry>\\r\\n    <h2 class=\\\"page-header\\\">No Inquiries</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n<!--                Delete Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this inquiry?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDelete()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Re-Open Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reopen-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to re-open this inquiry?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onReopen()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Decline Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"decline-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to decline this inquiry?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDecline()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Update Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update Inquiry</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\" (submit)=\\\"onUpdate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"\\\">Description</label>\\r\\n            <textarea required maxlength=\\\"950\\\" #inquiryDescription=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\"\\r\\n              name=\\\"description\\\" placeholder=\\\"Description\\\"></textarea> {{description.length}}/950\\r\\n            <div *ngIf=\\\"inquiryDescription.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"inquiryDescription.errors.required\\\">\\r\\n                *Description is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearDescription()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Bid Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-bid-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Create Bid</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f2=\\\"ngForm\\\" (submit)=\\\"onCreate()\\\">\\r\\n          <div class=\\\"panel panel-primary\\\">\\r\\n            <div class=\\\"panel-heading\\\">\\r\\n              <h3 class=\\\"panel-title\\\">Enter Costs</h3>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\" style=\\\"word-break:break-all\\\">\\r\\n              <h4>Labor Cost</h4>\\r\\n              <table class=\\\"table\\\" *ngIf=\\\"labors[0] != null\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Select Role</th>\\r\\n                    <th>Enter Hours</th>\\r\\n                    <th>Add Role</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <select (change)=\\\"onChangeLabor($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                        <option></option>\\r\\n                        <option [value]=\\\"i\\\" *ngFor=\\\"let labor of labors; let i = index;\\\">{{labor.roleName}}</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input required mask=\\\"00000\\\" #hours=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"laborHours\\\" name=\\\"laborHours\\\" placeholder=\\\"Labor Hours\\\"\\r\\n                        class=\\\"form-control\\\" aria-describedby=\\\"hours-addon\\\">\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <button [disabled]=\\\"hours.invalid\\\" (click)=\\\"onAddLabor()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr *ngIf=\\\"hours.invalid\\\">\\r\\n                    <td></td>\\r\\n                    <td style=\\\"color:#ff0000\\\">\\r\\n                      <div *ngIf=\\\"hours.errors.required\\\">\\r\\n                        *Hours are required\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td></td>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n              <label style=\\\"color:#ff0000\\\" *ngIf=\\\"selectedLabors.length != 0;\\\">Click To Remove</label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\" *ngIf=\\\"selectedLabors.length != 0;\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Role</th>\\r\\n                    <th>Estimated Cost</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let selectedLabor of selectedLabors; let i = index\\\" (click)=\\\"onRemoveLabor(selectedLabor, i)\\\">\\r\\n                    <td>{{selectedLabor.roleName}}</td>\\r\\n                    <td>{{selectedLabor.laborHours*selectedLabor.roleWage | currency:'USD':true}}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Total Labor Cost</th>\\r\\n                    <th>{{totalLaborPrice | currency: 'USD':true}}</th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\" style=\\\"word-break:break-all\\\">\\r\\n              <h4>Material Cost</h4>\\r\\n              <table class=\\\"table\\\" *ngIf=\\\"materials[0] != null\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Select Material</th>\\r\\n                    <th>Enter Linear Feet</th>\\r\\n                    <th>Add Material</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr>\\r\\n                    <td>\\r\\n                      <select (change)=\\\"onChangeMaterial($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                        <option></option>\\r\\n                        <option [value]=\\\"i\\\" *ngFor=\\\"let material of materials; let i = index;\\\">{{material.materialName}}</option>\\r\\n                      </select>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <input required mask=\\\"0000000\\\" #feet=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeet\\\" name=\\\"linearFeet\\\" placeholder=\\\"Linear Feet\\\"\\r\\n                        class=\\\"form-control\\\" required>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <button [disabled]=\\\"feet.invalid\\\" (click)=\\\"onAddMaterial()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr *ngIf=\\\"feet.invalid\\\">\\r\\n                    <td *ngIf=\\\"feet.errors.required\\\"></td>\\r\\n                    <td *ngIf=\\\"feet.errors.required\\\" style=\\\"color:#ff0000\\\">*Linear feet are required</td>\\r\\n                    <td *ngIf=\\\"feet.errors.required\\\"></td>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n              <label *ngIf=\\\"selectedMaterials1.length != 0;\\\" style=\\\"color:#ff0000\\\"></label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\" *ngIf=\\\"selectedMaterials1.length != 0;\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Name</th>\\r\\n                    <th>Estimated Cost</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let selectedMaterial of selectedMaterials1; let i = index\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">\\r\\n                    <td>{{selectedMaterial.materialName}}</td>\\r\\n                    <td>{{selectedMaterial.linearFeet*selectedMaterial.pricePerUnit/selectedMaterial.linearFeetCoverage | currency:\\r\\n                      'USD':true}}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Total Material Cost</th>\\r\\n                    <th>{{totalMaterialPrice | currency: 'USD':true}}</th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n              <hr>\\r\\n              <h4>Total Cost: {{totalLaborPrice + totalMaterialPrice | currency: 'USD':true}}</h4>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"panel panel-primary\\\">\\r\\n            <div class=\\\"panel-heading\\\">\\r\\n              <h3 class=\\\"panel-title\\\">Enter Desired % Profit Margin</h3>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\" style=\\\"word-break:break-all\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input required mask=\\\"00\\\" #profitMargin=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"margin\\\" name=\\\"margin\\\" placeholder=\\\"Margin\\\" class=\\\"form-control\\\"\\r\\n                  required />\\r\\n                <div *ngIf=\\\"profitMargin.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n                  <div *ngIf=\\\"profitMargin.errors.required\\\">\\r\\n                    *Margin is required\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <hr>\\r\\n              <h4>Recommended Bid: {{(1 + (margin/100))*(totalMaterialPrice + totalLaborPrice) | currency: 'USD':true}}</h4>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f2.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClear()\\\" class=\\\"btn btn-warning\\\" (click)=\\\"onClear()\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onClear()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     FILE POPUPS                                           -->\\r\\n<!--                Delete File Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-file-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete\\r\\n          <b>{{file.fileName}}</b>?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteFile()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Upload File Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"upload-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Upload Files</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"uploader.queue.length == 0\\\" (click)=\\\"(uploader.queue.length == 0) && fileInput.click()\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-folder-open\\\" aria-hidden=\\\"true\\\"></span> Browse Files</button>\\r\\n        <input name=\\\"file\\\" type=\\\"file\\\" style=\\\"display: none;\\\" #fileInput ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n        <br>\\r\\n        <br>\\r\\n        <table *ngIf=\\\"uploader.queue.length\\\" class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Edit File Name\\r\\n                <div style=\\\"color:#ff0000\\\">*Keep File Extension</div>\\r\\n              </th>\\r\\n              <th></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n              <td>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"item.file.name\\\" (change)=\\\"item.file.name = $event.target.value\\\" />\\r\\n              </td>\\r\\n              <td>\\r\\n                <button (click)=\\\"item.remove()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">\\r\\n                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Remove\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"uploader.queue.length != 0\\\" (click)=\\\"(uploader.queue.length > 0) && uploader.uploadAll()\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Upload</button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--                                                    UNUSED MARKUP                                                         -->\\r\\n<!-- <div class=\\\"dropdown\\\">\\r\\n                <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\r\\n                  <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span> Add Materials\\r\\n                  <span class=\\\"caret\\\"></span>\\r\\n                </button>\\r\\n                <ul class=\\\"dropdown-menu\\\">\\r\\n                  <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\r\\n                    <li *ngFor=\\\"let material of materials; let i = index;\\\">\\r\\n                      <a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a>\\r\\n                    </li>\\r\\n                  </ng-container>\\r\\n                  <ng-template #noMaterials>\\r\\n                    <li>\\r\\n                      <a>No more materials</a>\\r\\n                    </li>\\r\\n                  </ng-template>\\r\\n                </ul>\\r\\n              </div> -->\\r\\n<!-- <table class=\\\"table table-striped table-hover\\\">\\r\\n                <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\r\\n                  <tr>\\r\\n                    <th>Name</th>\\r\\n                    <th>Linear Feet</th>\\r\\n                    <th>Price</th>\\r\\n                    <th>Remove</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index\\\">\\r\\n                    <td>{{selectedMaterial.materialName}}</td>\\r\\n                    <td>\\r\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.linearFeet\\\" name=\\\"linearFeet\\\" placeholder=\\\"Linear Feet\\\" class=\\\"form-control\\\" required>\\r\\n                    </td>\\r\\n                    <td>{{selectedMaterial.linearFeet*selectedMaterial.pricePerLinearFoot || 0}}</td>\\r\\n                    <td>\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table> -->\\r\\n\\r\\n<!-- <table class=\\\"table table-bordered table-hover\\\">\\r\\n            <tfoot>\\r\\n              <tr class=\\\"info\\\">\\r\\n                <th>Total Cost</th>\\r\\n                <th>{{totalMaterialPrice + bidLabor | currency: 'USD':true}}</th>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table> -->\\r\\n\\r\\n<!-- <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"number\\\" [(ngModel)]=\\\"bidLabor\\\" name=\\\"bidLabor\\\" placeholder=\\\"Labor Cost\\\" class=\\\"form-control\\\" required>\\r\\n              </div> -->\\r\\n\\r\\n<!-- <button (click)=\\\"onAddMaterial(selectedMaterial, i)\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                      </button> -->\\r\\n\\r\\n<!-- <select class=\\\"form-control\\\">\\r\\n                        <option></option>\\r\\n                        <option *ngFor=\\\"let material of materials; let i = index;\\\" (click)=\\\"onSelectMaterial(material, i)\\\">{{material.materialName}}</option>\\r\\n                      </select> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.html\n// module id = ../../../../../src/app/components/inquiry/inquiry.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { InquiryService } from '../../services/inquiry.service';\r\nimport { MaterialService } from '../../services/material.service';\r\nimport { LaborService } from '../../services/labor.service';\r\nimport { BidService } from '../../services/bid.service';\r\nimport { AlertComponent } from '../alert/alert.component';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { FileUploader } from 'ng2-file-upload';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-inquiry',\r\n  templateUrl: './inquiry.component.html',\r\n  styleUrls: ['./inquiry.component.css']\r\n})\r\nexport class InquiryComponent implements OnInit {\r\n\r\n  /** INQUIRY **/\r\n  id: number = null;\r\n  inquiry: any;\r\n  createdDate: string = '';\r\n  status: string = '';\r\n  description: string = '';\r\n  /** BID **/\r\n  margin: number = 0;\r\n  /** LABOR **/\r\n  bidPrice: number = 0;\r\n  labors: any;\r\n  labor: any;\r\n  selectedLabors: SelectedLabor[] = [];\r\n  laborHours: number = 0;\r\n  laborID: number = null;\r\n  totalLaborPrice: number = 0;\r\n  /** MATERIALS **/\r\n  materials: Material[];\r\n  material: Material;\r\n  materialID: number = null;\r\n  linearFeet: number = 0;\r\n  totalMaterialPrice: number = 0;\r\n  selectedMaterials1: SelectedMaterial[] = [];\r\n  /** FILES **/\r\n  files: any;\r\n  filesUrls: any[] = [];\r\n  fileName: any;\r\n  file: any;\r\n  url: string;\r\n  uploader: FileUploader;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private inquiryService: InquiryService,\r\n    private materialService: MaterialService,\r\n    private laborService: LaborService,\r\n    private bidService: BidService,\r\n    private authService: AuthService,\r\n    private alert: AlertComponent\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.setupFileUploader();\r\n    this.getInquiry();\r\n    this.getMaterials();\r\n    this.getLabor();\r\n    this.getFiles();\r\n  }\r\n\r\n  /************************************ INQUIRY *********************************/\r\n  getInquiry() {\r\n    this.inquiryService.getInquiryById(this.id).subscribe((inquiry) => {\r\n      this.inquiry = inquiry;\r\n      this.status = inquiry[0].inquiryStatus;\r\n    });\r\n  }\r\n\r\n  onReopen() {\r\n    const updatedInquiry = {\r\n      inquiryID: this.id,\r\n      inquiryStatus: \"PENDING\",\r\n      removeEndDate: false\r\n    };\r\n    this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert('Inquiry re-opened', 'success');\r\n        this.ngOnInit();\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDecline() {\r\n    const updatedInquiry = {\r\n      inquiryID: this.id,\r\n      inquiryStatus: \"DECLINED\",\r\n      removeEndDate: false\r\n    };\r\n    this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert('Inquiry declined', 'success');\r\n        this.ngOnInit();\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  acceptInquiry(updatedInquiry) {\r\n    this.inquiryService.updateInquiryStatus(updatedInquiry).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearDescription() {\r\n    this.description = '';\r\n  }\r\n\r\n  onClickUpdate() {\r\n    this.description = this.inquiry[0].description;\r\n  }\r\n\r\n  onUpdate() {\r\n    let updatedInquiry = {\r\n      inquiryID: this.id,\r\n      description: this.description\r\n    }\r\n\r\n    this.inquiryService.updateInquiry(updatedInquiry).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.clearDescription();\r\n        $('#update-modal').modal('hide');\r\n        this.alert.displayAlert('Description updated', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n\r\n    this.ngOnInit();\r\n  }\r\n\r\n  onDelete() {\r\n    this.inquiryService.deleteInquiry(this.id).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert(data.msg, 'success');\r\n        this.router.navigate(['/inquiries']);\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************ BID *********************************/\r\n  onCreate() {\r\n    const updatedInquiry = {\r\n      inquiryID: this.id,\r\n      inquiryStatus: \"ACCEPTED\",\r\n      removeEndDate: false\r\n    };\r\n    const newBid = {\r\n      inquiryID: this.id,\r\n      bidPrice: (1 + (this.margin / 100)) * (this.totalMaterialPrice + this.totalLaborPrice)\r\n    };\r\n\r\n    this.createBid(newBid);\r\n    this.acceptInquiry(updatedInquiry);\r\n    this.createMaterials();\r\n    this.createLabor();\r\n    $('#create-bid-modal').modal('hide');\r\n    this.onClear();\r\n    this.router.navigate([`/bids`]);\r\n  }\r\n\r\n  createBid(newBid) {\r\n    this.bidService.createBid(newBid).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************ LABOR *********************************/\r\n  getLabor() {\r\n    this.laborService.getAllLabors().subscribe((labors) => {\r\n      this.labors = labors.labors;\r\n    });\r\n  }\r\n\r\n  createLabor() {\r\n    this.selectedLabors.forEach((selectedLabor) => {\r\n      this.bidService.createBidLabor(selectedLabor).subscribe((data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onAddLabor() {\r\n    let selectedLabor = {\r\n      roleID: this.labors[this.laborID].roleID,\r\n      roleName: this.labors[this.laborID].roleName,\r\n      roleWage: this.labors[this.laborID].roleWage,\r\n      laborHours: this.laborHours\r\n    };\r\n    this.totalLaborPrice += (selectedLabor.roleWage * this.laborHours);\r\n    this.selectedLabors.push(selectedLabor);\r\n    this.labors.splice(this.laborID, 1);\r\n    this.labor = null;\r\n    this.laborHours = 0;\r\n  }\r\n\r\n  onRemoveLabor(labor, id) {\r\n    this.totalLaborPrice -= (labor.laborHours * labor.roleWage);\r\n    this.selectedLabors.splice(id, 1);\r\n    this.labors.push(labor);\r\n  }\r\n\r\n  onChangeLabor(id) {\r\n    this.laborID = id;\r\n    // console.log(this.laborID);\r\n  }\r\n\r\n  /************************************ MATERIALS *********************************/\r\n  getMaterials() {\r\n    this.materialService.getAllMaterials().subscribe((materials) => {\r\n      this.materials = materials.materials;\r\n    });\r\n  }\r\n\r\n  createMaterials() {\r\n    this.selectedMaterials1.forEach(selectedMaterial => {\r\n      console.log(selectedMaterial);\r\n      this.bidService.createBidMaterial(selectedMaterial).subscribe((data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  onRemoveMaterial(material, id) {\r\n    this.totalMaterialPrice -= ((material.pricePerUnit / material.linearFeetCoverage) * material.linearFeet);\r\n    this.selectedMaterials1.splice(id, 1);\r\n    this.materials.push(material);\r\n  }\r\n\r\n  onAddMaterial() {\r\n    let selectedMaterial = {\r\n      materialID: this.materials[this.materialID].materialID,\r\n      materialName: this.materials[this.materialID].materialName,\r\n      pricePerUnit: this.materials[this.materialID].pricePerUnit,\r\n      linearFeetCoverage: this.materials[this.materialID].linearFeetCoverage,\r\n      linearFeet: this.linearFeet\r\n    };\r\n    this.totalMaterialPrice += (selectedMaterial.pricePerUnit / selectedMaterial.linearFeetCoverage * this.linearFeet);\r\n    this.selectedMaterials1.push(selectedMaterial);\r\n    this.materials.splice(this.materialID, 1);\r\n    this.material = null;\r\n    this.linearFeet = 0;\r\n  }\r\n\r\n  onChangeMaterial(id) {\r\n    // console.log(id);\r\n    this.materialID = id;\r\n  }\r\n\r\n  onClear() {\r\n    this.selectedMaterials1.forEach(selectedMaterial => {\r\n      this.materials.push(selectedMaterial);\r\n    });\r\n    this.selectedLabors.forEach((selectedLabor) => {\r\n      this.labors.push(selectedLabor);\r\n    });\r\n    this.selectedLabors = [];\r\n    this.totalLaborPrice = 0;\r\n    this.selectedMaterials1 = [];\r\n    this.totalMaterialPrice = 0;\r\n    this.laborHours = 0;\r\n    this.margin = 0;\r\n\r\n    //this.ngOnInit();\r\n  }\r\n\r\n    /************************************************* FILE FUNCTIONS *********************************************************/\r\n    getFiles() {\r\n      this.inquiryService.getInquiryFilesByID(this.id).subscribe((files) => {\r\n        this.files = files;\r\n        // console.log(this.files);\r\n      });\r\n    }\r\n  \r\n    setupFileUploader() {\r\n      this.url = `/api/inquiries/${this.id}/upload`;\r\n      // this.url = `http://localhost:3000/api/inquiries/${this.id}/upload`;\r\n      this.authService.loadToken();\r\n      let headers: any = [{ name: 'Authorization', value: this.authService.authToken }, { name: 'Content-Type', value: 'application/json' }];\r\n      this.uploader = new FileUploader({ url: this.url });\r\n      this.uploader.onAfterAddingFile = (file) => {\r\n        file.withCredentials = false;\r\n        //this.readyItems.push(file);\r\n        //console.log(file);\r\n      }\r\n      this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n        this.ngOnInit();\r\n        $('#upload-modal').modal('hide');\r\n        if (JSON.parse(response).success == true) {\r\n          this.alert.displayAlert(JSON.parse(response).msg, 'success');\r\n        } else {\r\n          this.alert.displayAlert(JSON.parse(response).msg, 'warning');\r\n        }\r\n        this.uploader.clearQueue();\r\n      }\r\n    }\r\n  \r\n    onClickDeleteFile(file) {\r\n      this.file = file;\r\n      $('#delete-file-modal').modal('show');\r\n    }\r\n  \r\n    onDeleteFile() {\r\n      let fileToRemove = {\r\n        key: this.file.fileName\r\n      };\r\n      this.inquiryService.deleteInquiryFile(this.file.fileID, fileToRemove).subscribe((data) => {\r\n        if (data.success) {\r\n          // console.log(data.msg);\r\n          this.getFiles();\r\n          $('#delete-file-modal').modal('hide');\r\n          this.alert.displayAlert(data.msg, 'success');\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    }\r\n}\r\n\r\ninterface SelectedMaterial {\r\n  materialID: number,\r\n  materialName: String,\r\n  linearFeet: number,\r\n  pricePerUnit: number,\r\n  linearFeetCoverage: number\r\n}\r\ninterface SelectedLabor {\r\n  roleID: number,\r\n  roleName: String,\r\n  roleWage: number,\r\n  laborHours: number\r\n}\r\ninterface Material {\r\n  materialID: number,\r\n  materialName: String,\r\n  pricePerUnit: number,\r\n  linearFeetCoverage: number\r\n}\r\n\r\n\r\n/****************************************** UNUSED CODE *******************************************/\r\n  // onAddMaterial(material, id){\r\n  //   this.selectedMaterials.push(material);\r\n  //   this.materials.splice(id, 1);\r\n  // }\r\n\r\n  // onSelectMaterial(material, id) {\r\n  //   // console.log(material);\r\n  //   this.material = material;\r\n  //   this.materialID = id;\r\n  // }\r\n\r\n      // this.selectedMaterials.forEach(selectedMaterial => {\r\n    //   console.log(selectedMaterial);\r\n    //   this.bidService.createBidMaterial(selectedMaterial).subscribe((data) => {\r\n    //     if(data.success){\r\n    //       console.log(data.msg);\r\n    //     } else{\r\n    //       console.log(data.msg);\r\n    //     }\r\n    //   });\r\n    // });\r\n\r\n     // onRemoveMaterial(material, id){\r\n  //   this.selectedMaterials.splice(id, 1);\r\n  //   this.materials.push(material);\r\n  // }\r\n\r\n  // onClear(){\r\n  //   this.selectedMaterials.forEach(selectedMaterial => {\r\n  //     this.materials.push(selectedMaterial);\r\n  //   });\r\n  //   this.selectedMaterials = [];\r\n  //   //this.ngOnInit();\r\n  // }\r\n\r\n    // onAddMaterial() {\r\n  //   let selectedMaterial = {\r\n  //     materialID: this.material.materialID,\r\n  //     materialName: this.material.materialName,\r\n  //     pricePerLinearFoot: this.material.pricePerLinearFoot,\r\n  //     linearFeet: this.linearFeet\r\n  //   };\r\n  //   this.totalMaterialPrice += (selectedMaterial.pricePerLinearFoot * this.linearFeet);\r\n  //   this.selectedMaterials1.push(selectedMaterial);\r\n  //   this.materials.splice(this.materialID, 1);\r\n  //   this.material = null;\r\n  //   this.linearFeet = 0;\r\n  // }\r\n\r\n    // totalCost:number = 0;\r\n  // selectedMaterials:SelectedMaterial[] = [];\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/inquiry/inquiry.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[data-toggle=\\\"collapse\\\"].collapsed .if-not-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n  [data-toggle=\\\"collapse\\\"]:not(.collapsed) .if-collapsed {\\r\\n    display: none;\\r\\n  }\\r\\n  .panel-heading:hover {background-color: #1863e6 !important;}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.css\n// module id = ../../../../../src/app/components/job/job.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default pull-left\\\" [routerLink]=\\\"['/jobs']\\\">\\r\\n  <span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Go To Jobs</button>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <ng-container *ngIf=\\\"job[0]; else noJob\\\">\\r\\n    <h2 class=\\\"page-header\\\">Job #{{job[0].jobID}}</h2>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <div class=\\\"panel-group\\\" id=\\\"accordion\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#jobAccordion\\\">\\r\\n          <h3>Job Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"jobAccordion\\\" class=\\\"panel-body panel-collapse collapse in\\\" style=\\\"word-break:break-all\\\">\\r\\n          <h4 class=\\\"page-header\\\" style=\\\"margin-top: 0\\\">General</h4>\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Expected Revenue</th>\\r\\n                <th>Created Date</th>\\r\\n                <th *ngIf=\\\"job[0].jobStatus == 'COMPLETED'\\\">Completion Date</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{job[0].bidPrice + totalChangeTable | currency: 'USD':true}}</td>\\r\\n                <td>{{job[0].createdDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                <td *ngIf=\\\"job[0].jobStatus == 'COMPLETED'\\\">{{job[0].endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n\\r\\n          <h4 class=\\\"page-header\\\">Change Orders\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#change-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"change-collapse\\\">\\r\\n            <div *ngIf=\\\"changeOrders.length > 0;\\\">\\r\\n              <label>Click To Update Or Delete</label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Amount</th>\\r\\n                    <th>Date</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let changeOrder of changeOrders; let i = index\\\" data-toggle=\\\"modal\\\" (click)=\\\"onClickUpdateChangeOrder(changeOrder.changeID, i)\\\"\\r\\n                    href='#update-change-modal'>\\r\\n                    <td>{{changeOrder.changeAmount | currency: 'USD':true}}</td>\\r\\n                    <td>{{changeOrder.changeDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>{{totalChangeTable | currency: 'USD':true}}</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button (click)=\\\"onClearChangeOrder()\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#create-change-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span> Create Change Order</button>\\r\\n          </div>\\r\\n\\r\\n          <h4 class=\\\"page-header\\\">Revenue Collected\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#revenue-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"revenue-collapse\\\">\\r\\n            <div *ngIf=\\\"revenues.length > 0;\\\">\\r\\n              <label>Click To Update Or Delete</label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Amount</th>\\r\\n                    <th>Date</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let revenue of revenues; let i = index\\\" data-toggle=\\\"modal\\\" (click)=\\\"onClickUpdateRevenue(revenue.revenueID, i)\\\"\\r\\n                    href='#update-revenue-modal'>\\r\\n                    <td>{{revenue.revenueAmount | currency: 'USD':true}}</td>\\r\\n                    <td>{{revenue.revenueDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>{{totalRevenueTable | currency: 'USD':true}}</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button (click)=\\\"onClearJobRevenue()\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#create-revenue-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-usd\\\" aria-hidden=\\\"true\\\"></span> Add Revenue</button>\\r\\n          </div>\\r\\n\\r\\n          <h4 class=\\\"page-header\\\">Labor Cost\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#labor-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"labor-collapse\\\">\\r\\n            <div *ngIf=\\\"jobLabors.length > 0;\\\">\\r\\n              <label>Click To Update Or Delete</label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Role</th>\\r\\n                    <th>Date</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">Hours</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">Wage</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let jobLabor of jobLabors; let i = index\\\" data-toggle=\\\"modal\\\" (click)=\\\"onClickUpdateLabor(jobLabor.laborID, i)\\\"\\r\\n                    href='#update-labor-modal'>\\r\\n                    <td>{{jobLabor.roleName}}</td>\\r\\n                    <td>{{jobLabor.laborDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                    <td class=\\\"hidden-xs hidden-sm\\\">{{jobLabor.laborHours}}</td>\\r\\n                    <td class=\\\"hidden-xs hidden-sm\\\">{{jobLabor.roleWage | currency: 'USD':true}}</td>\\r\\n                    <td>{{jobLabor.roleWage*jobLabor.laborHours | currency: 'USD':true}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Grand Total</th>\\r\\n                    <th></th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">{{totalHoursTable}}</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\"></th>\\r\\n                    <th>{{totalLaborPriceTable | currency: 'USD':true}}</th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button (click)=\\\"onClearJobLabor()\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#create-labor-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Add Labor</button>\\r\\n          </div>\\r\\n\\r\\n          <h4 class=\\\"page-header\\\">Materials Cost\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#materials-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"materials-collapse\\\">\\r\\n            <div *ngIf=\\\"jobMaterials.length > 0;\\\">\\r\\n              <label>Click To Update Or Delete</label>\\r\\n              <table class=\\\"table table-bordered table-hover\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Material</th>\\r\\n                    <th>Linear Feet</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">Price Per Unit</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\">Coverage In Linear Feet</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let jobMaterial of jobMaterials; let i = index\\\" data-toggle=\\\"modal\\\" (click)=\\\"onClickUpdateJobMaterial(jobMaterial.materialID, i)\\\"\\r\\n                    href='#update-material-modal'>\\r\\n                    <td>{{jobMaterial.materialName}}</td>\\r\\n                    <td>{{jobMaterial.linearFeet}}</td>\\r\\n                    <td class=\\\"hidden-xs hidden-sm\\\">{{jobMaterial.pricePerUnit | currency: 'USD':true}}</td>\\r\\n                    <td class=\\\"hidden-xs hidden-sm\\\">{{jobMaterial.linearFeetCoverage}} ft</td>\\r\\n                    <td>{{jobMaterial.pricePerUnit / jobMaterial.linearFeetCoverage * jobMaterial.linearFeet | currency: 'USD':true}}</td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n                <tfoot>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Grand Total</th>\\r\\n                    <th>{{totalLinearFeetTable}}</th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\"></th>\\r\\n                    <th class=\\\"hidden-xs hidden-sm\\\"></th>\\r\\n                    <th>{{totalMaterialPriceTable | currency: 'USD':true}}</th>\\r\\n                  </tr>\\r\\n                </tfoot>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button (click)=\\\"onClearJobMaterials()\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#create-material-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Add Materials</button>\\r\\n          </div>\\r\\n\\r\\n          <h4 class=\\\"page-header\\\">Files (Only Works On Local Machine)\\r\\n            <button class=\\\"btn btn-default btn-sm collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#files-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\">Show</span>\\r\\n              <span class=\\\"if-not-collapsed\\\">Hide</span>\\r\\n            </button>\\r\\n          </h4>\\r\\n          <div class=\\\"collapse\\\" id=\\\"files-collapse\\\">\\r\\n            <div *ngIf=\\\"files.length > 0\\\">\\r\\n              <label>Click To Open</label>\\r\\n              <table class=\\\"table\\\" style=\\\"border: 1px solid #dddddd;\\\">\\r\\n                <thead>\\r\\n                  <tr class=\\\"active\\\">\\r\\n                    <th>Name</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <tr *ngFor=\\\"let file of files\\\">\\r\\n                    <td>\\r\\n                      <!-- <a target=\\\"_blank\\\" href=\\\"https://s3.us-east-2.amazonaws.com/allied-waterproofing/{{file.fileName}}\\\">{{file.fileName}}</a> -->\\r\\n                      <!-- <a target=\\\"_blank\\\" href=\\\"http://localhost:3000/api/uploads/{{file.fileName}}\\\">{{file.fileName}}</a> -->\\r\\n                      <a target=\\\"_blank\\\" href=\\\"/api/uploads/{{file.fileName}}\\\">{{file.fileName}}</a>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      <button (click)=\\\"onClickDeleteFile(file)\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\">\\r\\n                        &times; Delete\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#upload-modal'>\\r\\n              <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Upload File</button>\\r\\n          </div>\\r\\n          <div class=\\\"collapsed\\\" data-toggle=\\\"collapse\\\" data-target='#files-collapse'>\\r\\n              <span class=\\\"if-collapsed\\\"><br></span>\\r\\n              <span class=\\\"if-not-collapsed\\\"><hr></span>\\r\\n          </div>\\r\\n          <button *ngIf=\\\"status == 'IN-PROGRESS'\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#finish-job-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-check\\\" aria-hidden=\\\"true\\\"></span> Finish Job</button>\\r\\n          <button *ngIf=\\\"status == 'COMPLETED'\\\" class=\\\"btn btn-warning\\\" data-toggle=\\\"modal\\\" href='#reopen-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Re-open Job</button>\\r\\n          <button *ngIf=\\\"status == 'COMPLETED'\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-job-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete Job</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#bidAccordion\\\">\\r\\n          <h3>Bid Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"bidAccordion\\\" class=\\\"panel-body panel-collapse collapse\\\" style=\\\"word-break:break-all\\\">\\r\\n          <h4 class=\\\"page-header\\\" style=\\\"margin-top: 0\\\">General</h4>\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Initial Bid Price</th>\\r\\n                <th>Created Date</th>\\r\\n                <th>Accepted Date</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{job[0].bidPrice | currency: 'USD':true}}</td>\\r\\n                <td>{{job[0].bidCreatedDate | date: 'MM/dd/yyyy'}}</td>\\r\\n                <td>{{job[0].bidEndDate | date: 'MM/dd/yyyy'}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <h4 class=\\\"page-header\\\">Estimated Costs</h4>\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Labor</th>\\r\\n                <th>Materials</th>\\r\\n                <th>Total</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{job[0].bidLabor | currency: 'USD':true}}</td>\\r\\n                <td>{{job[0].bidMaterials | currency: 'USD':true}}</td>\\r\\n                <th>{{job[0].bidLabor + job[0].bidMaterials | currency: 'USD':true}}</th>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/bids/'+job[0].bidID]\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Open Bid</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\" style=\\\"cursor: pointer;\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" href=\\\"'#customerAccordion\\\">\\r\\n          <h3>Customer Details</h3>\\r\\n        </div>\\r\\n        <div id=\\\"customerAccordion\\\" class=\\\"panel-body panel-collapse collapse\\\" style=\\\"word-break:break-all\\\">\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Name</th>\\r\\n                <th>Address</th>\\r\\n                <th>City</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">State</th>\\r\\n                <th class=\\\"hidden-xs hidden-sm\\\">ZIP</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>{{job[0].customerName}}</td>\\r\\n                <td>{{job[0].customerAddress}}</td>\\r\\n                <td>{{job[0].customerCity}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{job[0].customerState}}</td>\\r\\n                <td class=\\\"hidden-xs hidden-sm\\\">{{job[0].customerZIP}}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <hr>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-lg\\\" [routerLink]=\\\"['/customers/'+job[0].customerID]\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Open Customer</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noJob>\\r\\n    <h2 class=\\\"page-header\\\">No Jobs</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n<!--                                     JOB POPUPS                                           -->\\r\\n<!--                Finish Job Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"finish-job-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to finalize this job?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onFinish()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Re-open Job Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"reopen-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to re-open this job?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onReopen()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Job Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-job-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this job?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteJob()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     REVENUE POPUPS                                           -->\\r\\n<!--                Update Revenue Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-revenue-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update Revenue</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f4=\\\"ngForm\\\" (submit)=\\\"onUpdateJobRevenue()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Amount</label>\\r\\n            <input required mask=\\\"0000000\\\" #revenue2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"revenueAmount\\\" name=\\\"revenueAmount\\\" placeholder=\\\"Amount\\\"\\r\\n              class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"revenue2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"revenue2.errors.required\\\">\\r\\n                *Revenue is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f4.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClearJobRevenue()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-revenue-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Revenue Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-revenue-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this revenue?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteRevenue()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Revenue Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-revenue-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Add Revenue</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f3=\\\"ngForm\\\" (submit)=\\\"onCreateJobRevenue()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Amount</label>\\r\\n            <input required mask=\\\"0000000\\\" #revenue=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"revenueAmount\\\" name=\\\"revenueAmount\\\" placeholder=\\\"Amount\\\"\\r\\n              class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"revenue.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"revenue.errors.required\\\">\\r\\n                *Revenue is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f3.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-usd\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClearJobRevenue()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     LABOR POPUPS                                           -->\\r\\n<!--                Update Labor Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-labor-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update {{roleName}} Labor From {{laborDate | date: 'MM/dd/yyyy'}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f5=\\\"ngForm\\\" (submit)=\\\"onUpdateJobLabor()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Hours</label>\\r\\n            <input required mask=\\\"00000\\\" #hours1=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"hours\\\" name=\\\"hours\\\" placeholder=\\\"Hours\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"hours1.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"hours1.errors.required\\\">\\r\\n                *Hours are required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Wage</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #wage1=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"wage\\\" name=\\\"wage\\\"\\r\\n              placeholder=\\\"Wage\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"wage1.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"wage1.errors.required\\\">\\r\\n                *Wage is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f5.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearLaborUpdate()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-labor-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Labor Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-labor-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this labor?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteLabor()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Labor Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-labor-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Add Labor</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f6=\\\"ngForm\\\" (submit)=\\\"onCreateJobLabor()\\\">\\r\\n          <table class=\\\"table\\\" *ngIf=\\\"labors[0] != null\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Select Role</th>\\r\\n                <th>Enter Hours</th>\\r\\n                <th>Add Role</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <select (change)=\\\"onChangeLabor($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                    <option></option>\\r\\n                    <option [value]=\\\"i\\\" *ngFor=\\\"let labor of labors; let i = index;\\\">{{labor.roleName}}</option>\\r\\n                  </select>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input required mask=\\\"00000\\\" #hours2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"hours\\\" name=\\\"hours\\\" placeholder=\\\"Hours\\\" class=\\\"form-control\\\"\\r\\n                    aria-describedby=\\\"hours-addon\\\">\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button [disabled]=\\\"hours2.invalid\\\" (click)=\\\"onAddLabor()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n              <tr *ngIf=\\\"hours2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n                <td *ngIf=\\\"hours2.errors.required\\\"></td>\\r\\n                <td *ngIf=\\\"hours2.errors.required\\\">*Hours are required</td>\\r\\n                <td *ngIf=\\\"hours2.errors.required\\\"></td>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n          <label style=\\\"color:#ff0000\\\" *ngIf=\\\"selectedLabors.length != 0;\\\">Click To Delete</label>\\r\\n          <table class=\\\"table table-bordered table-hover\\\" *ngIf=\\\"selectedLabors.length != 0;\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Role</th>\\r\\n                <th>Estimated Cost</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let selectedLabor of selectedLabors; let i = index\\\" (click)=\\\"onRemoveLabor(selectedLabor, i)\\\">\\r\\n                <td>{{selectedLabor.roleName}}</td>\\r\\n                <td>{{selectedLabor.laborHours*selectedLabor.roleWage | currency:'USD':true}}\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n              <tr class=\\\"active\\\">\\r\\n                <th>Total Labor Cost</th>\\r\\n                <th>{{totalLaborPrice | currency: 'USD':true}}</th>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n          <button [disabled]=\\\"f6.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Add</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearLaborCreate()\\\" class=\\\"btn btn-warning\\\" (click)=\\\"onClearJobLabor()\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     MATERIAL POPUPS                                           -->\\r\\n<!--                Create Material Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-material-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Add Materials</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f8=\\\"ngForm\\\" (submit)=\\\"onCreateJobMaterials()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <table class=\\\"table\\\" *ngIf=\\\"materials[0] != null\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Select Material</th>\\r\\n                  <th>Enter Linear Feet</th>\\r\\n                  <th>Add Material</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <select (change)=\\\"onChangeMaterial($event.target.value)\\\" class=\\\"form-control\\\">\\r\\n                      <option></option>\\r\\n                      <option [value]=\\\"i\\\" *ngFor=\\\"let material of materials; let i = index;\\\">{{material.materialName}}</option>\\r\\n                    </select>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <input required mask=\\\"0000000\\\" #feet2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeet\\\" name=\\\"linearFeet\\\" placeholder=\\\"Linear Feet\\\"\\r\\n                      class=\\\"form-control\\\">\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button [disabled]=\\\"feet2.invalid\\\" (click)=\\\"onAddMaterial()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">\\r\\n                      <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n              <tfoot>\\r\\n                <tr *ngIf=\\\"feet2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n                  <td *ngIf=\\\"feet2.errors.required\\\"></td>\\r\\n                  <td *ngIf=\\\"feet2.errors.required\\\">*Linear feet are required</td>\\r\\n                  <td *ngIf=\\\"feet2.errors.required\\\"></td>\\r\\n                </tr>\\r\\n              </tfoot>\\r\\n            </table>\\r\\n            <label style=\\\"color:#ff0000\\\" *ngIf=\\\"selectedMaterials1.length != 0;\\\">Click To Delete</label>\\r\\n            <table class=\\\"table table-bordered table-hover\\\" *ngIf=\\\"selectedMaterials1.length != 0;\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"active\\\">\\r\\n                  <th>Name</th>\\r\\n                  <th>Estimated Cost</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let selectedMaterial of selectedMaterials1; let i = index\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">\\r\\n                  <td>{{selectedMaterial.materialName}}</td>\\r\\n                  <td>{{selectedMaterial.linearFeet*selectedMaterial.pricePerUnit/selectedMaterial.linearFeetCoverage | currency:'USD':true}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n              <tfoot>\\r\\n                <tr class=\\\"active\\\">\\r\\n                  <th>Total Material Cost</th>\\r\\n                  <th>{{totalMaterialPrice | currency: 'USD':true}}</th>\\r\\n                </tr>\\r\\n              </tfoot>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f8.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClearJobMaterials()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Update Material Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-material-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update {{materialName}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f7=\\\"ngForm\\\" (submit)=\\\"onUpdateJobMaterial()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Linear Feet</label>\\r\\n            <input required mask=\\\"0000000\\\" #feet=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeet\\\" name=\\\"linearFeet\\\" placeholder=\\\"Linear Feet\\\"\\r\\n              class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"feet.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"feet.errors.required\\\">\\r\\n                *Linear feet are required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Price Per Unit</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #perUnit=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"pricePerUnit\\\"\\r\\n              name=\\\"pricePerUnit\\\" placeholder=\\\"Price Per Unit\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"perUnit.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"perUnit.errors.required\\\">\\r\\n                *Per unit cost is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Coverage In Linear Feet</label>\\r\\n            <input required mask=\\\"0000000\\\" #coverage=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeetCoverage\\\" name=\\\"linearFeetCoverage\\\"\\r\\n              placeholder=\\\"Coverage In Linear Feet\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"coverage.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"coverage.errors.required\\\">\\r\\n                *Coverage in linear feet is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f7.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"clearMaterialUpdate()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-material-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Material Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-material-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete\\r\\n          <b>{{materialName | lowercase}}</b>?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteMaterial()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     CHANGE ORDER POPUPS                                           -->\\r\\n<!--                Update Change Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-change-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update Change Order</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\" (submit)=\\\"onUpdateChangeOrder()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Amount</label>\\r\\n            <input required mask=\\\"0000000\\\" #amount=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"changeAmount\\\" name=\\\"changeAmount\\\" placeholder=\\\"Amount\\\"\\r\\n              class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"amount.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"amount.errors.required\\\">\\r\\n                *Change amount is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClearChangeOrder()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-change-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Change Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-change-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this change order?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteChangeOrder()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Change Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-change-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Create Change Order</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f2=\\\"ngForm\\\" (submit)=\\\"onCreateChangeOrder()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Amount</label>\\r\\n            <input required mask=\\\"0000000\\\" #amount2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"changeAmount\\\" name=\\\"changeAmount\\\" placeholder=\\\"Amount\\\"\\r\\n              class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"amount2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"amount2.errors.required\\\">\\r\\n                *Change amount is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f2.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClearChangeOrder()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                     FILE POPUPS                                           -->\\r\\n<!--                Delete File Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-file-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete\\r\\n          <b>{{file.fileName}}</b>?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteFile()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Upload File Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"upload-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Upload Files</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"uploader.queue.length == 0\\\" (click)=\\\"(uploader.queue.length == 0) && fileInput.click()\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-folder-open\\\" aria-hidden=\\\"true\\\"></span> Browse Files</button>\\r\\n        <input name=\\\"file\\\" type=\\\"file\\\" style=\\\"display: none;\\\" #fileInput ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n        <br>\\r\\n        <br>\\r\\n        <table *ngIf=\\\"uploader.queue.length\\\" class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Edit File Name\\r\\n                <div style=\\\"color:#ff0000\\\">*Keep File Extension</div>\\r\\n              </th>\\r\\n              <th></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n              <td>\\r\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"item.file.name\\\" (change)=\\\"item.file.name = $event.target.value\\\" />\\r\\n              </td>\\r\\n              <td>\\r\\n                <button (click)=\\\"item.remove()\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">\\r\\n                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Remove\\r\\n                </button>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"uploader.queue.length != 0\\\" (click)=\\\"(uploader.queue.length > 0) && uploader.uploadAll()\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Upload</button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--               FOR UPLOAD FILE POPUP                -->\\r\\n<!-- <div class=\\\"form-group\\\">\\r\\n            <h4>Upload Files</h4>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"fileInput.click()\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-upload\\\" aria-hidden=\\\"true\\\"></span> Browse Files</button>\\r\\n            <input name=\\\"file\\\" type=\\\"file\\\" style=\\\"display: none;\\\" #fileInput ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n            <table *ngIf=\\\"uploader.queue.length\\\" class=\\\"table table-striped table-hover\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>File</th>\\r\\n                  <th>Remove</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n                  <td>{{item._file.name}}</td>\\r\\n                  <td>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"item.remove()\\\">\\r\\n                      <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div> -->\\r\\n\\r\\n<!--                                        UNUSED MARKUP                                       -->\\r\\n<!-- <label>Add Materials</label>\\r\\n          <div class=\\\"dropdown\\\">\\r\\n            <button class=\\\"btn btn-primary dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-plus\\\" aria-hidden=\\\"true\\\"></span> Add Materials\\r\\n              <span class=\\\"caret\\\"></span>\\r\\n            </button>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <ng-container *ngIf=\\\"materials[0] != null; else noMaterials\\\">\\r\\n                <li *ngFor=\\\"let material of materials; let i = index;\\\">\\r\\n                  <a (click)=\\\"onAddMaterial(material, i)\\\">{{material.materialName}}</a>\\r\\n                </li>\\r\\n              </ng-container>\\r\\n              <ng-template #noMaterials>\\r\\n                <li>\\r\\n                  <a>No more materials</a>\\r\\n                </li>\\r\\n              </ng-template>\\r\\n            </ul>\\r\\n          </div> -->\\r\\n<!-- <table class=\\\"table table-striped table-hover\\\">\\r\\n            <thead *ngIf=\\\"selectedMaterials[0] != null;\\\">\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Quantity</th>\\r\\n                <th>Per Unit Cost</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let selectedMaterial of selectedMaterials; let i = index;\\\">\\r\\n                <td>{{selectedMaterial.materialName}}</td>\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.quantity\\\" name=\\\"quantity\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control\\\" required>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMaterial.perUnitCost\\\" name=\\\"perUnitCost\\\" placeholder=\\\"Per Unit Cost\\\" class=\\\"form-control\\\"\\r\\n                    required>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"onRemoveMaterial(selectedMaterial, i)\\\">&times;</button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table> -->\\r\\n\\r\\n<!-- <table class=\\\"table table-bordered\\\">\\r\\n              <thead *ngIf=\\\"bidMaterials[0] != null;\\\">\\r\\n                <tr class=\\\"active\\\">\\r\\n                  <th>Material</th>\\r\\n                  <th>Linear Feet</th>\\r\\n                  <th class=\\\"hidden-xs hidden-sm\\\">Price Per Unit</th>\\r\\n                  <th class=\\\"hidden-xs hidden-sm\\\">Coverage In Linear Feet</th>\\r\\n                  <th>Total</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let bidMaterial of bidMaterials\\\">\\r\\n                  <td>{{bidMaterial.materialName}}</td>\\r\\n                  <td>{{bidMaterial.linearFeet}}</td>\\r\\n                  <td class=\\\"hidden-xs hidden-sm\\\">{{bidMaterial.pricePerUnit | currency: 'USD':true}}</td>\\r\\n                  <td class=\\\"hidden-xs hidden-sm\\\">{{bidMaterial.linearFeetCoverage}} ft</td>\\r\\n                  <td>{{bidMaterial.pricePerUnit / bidMaterial.linearFeetCoverage * bidMaterial.linearFeet | currency: 'USD':true}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table> -->\\r\\n\\r\\n\\r\\n<!--                Update Job Popup                -->\\r\\n<!-- <div class=\\\"modal fade\\\" id=\\\"update-job-modal\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n          <h4 class=\\\"modal-title\\\">Update Job</h4>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          <form (submit)=\\\"onUpdate()\\\" style=\\\"padding-bottom: 20px;\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <h4>Add Labor</h4>\\r\\n              <label>Hours: </label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"laborHours\\\" name=\\\"laborHours\\\" placeholder=\\\"Hours\\\" class=\\\"form-control\\\" required>\\r\\n              <label>Price: </label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"laborPrice\\\" name=\\\"laborPrice\\\" placeholder=\\\"Price\\\" class=\\\"form-control\\\" required>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n            <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onClear(); uploader.clearQueue()\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          </form>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n            <button class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div> -->\\r\\n<!-- <button class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" href='#update-job-modal'>\\r\\n          <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\"></span> Update Job</button> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.html\n// module id = ../../../../../src/app/components/job/job.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { JobService } from '../../services/job.service';\r\nimport { MaterialService } from '../../services/material.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { BidService } from '../../services/bid.service';\r\nimport { LaborService } from '../../services/labor.service';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { AlertComponent } from '../alert/alert.component';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-job',\r\n  templateUrl: './job.component.html',\r\n  styleUrls: ['./job.component.css']\r\n})\r\nexport class JobComponent implements OnInit {\r\n\r\n  /** FILES **/\r\n  files: any;\r\n  filesUrls: any[] = [];\r\n  fileName: any;\r\n  file: any;\r\n  url: string;\r\n  uploader: FileUploader;\r\n  /** JOB **/\r\n  id: number = null;\r\n  job: any;\r\n  jobLabor: number = 0;\r\n  jobStatus: string = '';\r\n  createdDate: string = '';\r\n  endDate: string = '';\r\n  status: string = '';\r\n  /** JOB MATERIALS **/\r\n  jobMaterials: any;\r\n  materials: any;\r\n  selectedMaterials1: SelectedMaterial[] = [];\r\n  material: any;\r\n  materialName: string = '';\r\n  materialID: number = null;\r\n  materialIndex: number = null;\r\n  linearFeet: number = 0;\r\n  pricePerUnit: number = 0;\r\n  linearFeetCoverage: number = 0;\r\n  totalMaterialPrice: number = 0;\r\n  totalMaterialPriceTable: number = 0;\r\n  totalLinearFeetTable: number = 0;\r\n  /** JOB REVENUES **/\r\n  revenueID: number = null;\r\n  revenueIndex: number = null;\r\n  revenueAmount: number = 0;\r\n  revenues: any;\r\n  totalRevenueTable: number = 0;\r\n  /** CHANGE ORDERS **/\r\n  changeID: number = null;\r\n  changeIndex: number = null;\r\n  changeAmount: number = 0;\r\n  changeOrders: any;\r\n  totalChangeTable: number = 0;\r\n  /** JOB LABOR **/\r\n  laborHours: any = 0;\r\n  laborPrice: any = 0;\r\n  jobLabors: any;\r\n  labors: any;\r\n  laborID: number = null;\r\n  laborIndex: number = null;\r\n  selectedLabors: SelectedLabor[] = [];\r\n  totalLaborPrice: number = 0;\r\n  totalLaborPriceTable: number = 0;\r\n  totalHoursTable: number = 0;\r\n  hours: number = 0;\r\n  wage: number = 0;\r\n  roleName: string = '';\r\n  laborDate: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private jobService: JobService,\r\n    private materialService: MaterialService,\r\n    private bidService: BidService,\r\n    private authService: AuthService,\r\n    private laborService: LaborService,\r\n    private alert: AlertComponent\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.setupFileUploader();\r\n    this.getJob();\r\n    this.getChangeOrders();\r\n    this.getRevenue();\r\n    this.getLabor();\r\n    this.getMaterials();\r\n    this.getFiles();\r\n  }\r\n\r\n  /************************************************* JOB FUNCTIONS *********************************************************/\r\n  getJob() {\r\n    this.jobService.getJobById(this.id).subscribe((job) => {\r\n      this.job = job;\r\n      this.status = job[0].jobStatus;\r\n    });\r\n  }\r\n\r\n  onClear() {\r\n    //this.ngOnInit();\r\n  }\r\n\r\n  onUpdate() {\r\n    let updatedJob = {\r\n      jobID: this.id,\r\n      jobStatus: this.jobStatus,\r\n      createdDate: this.createdDate,\r\n      endDate: this.endDate\r\n    };\r\n\r\n    this.jobService.updateJob(updatedJob).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n    this.onClear();\r\n\r\n    this.ngOnInit();\r\n  }\r\n\r\n  onDeleteJob() {\r\n    this.jobService.deleteJob(this.id).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        let updatedBid = {\r\n          bidID: this.job[0].bidID,\r\n          bidStatus: \"PENDING\"\r\n        };\r\n        this.bidService.updateBidStatus(updatedBid).subscribe((data) => {\r\n          if (data.success) {\r\n            // console.log(data.msg);\r\n            this.alert.displayAlert('Job deleted', 'success');\r\n            this.router.navigate(['/jobs']);\r\n          } else {\r\n            console.log(data.msg);\r\n          }\r\n        });\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onReopen() {\r\n    let updatedJob = {\r\n      jobID: this.id,\r\n      jobStatus: \"IN-PROGRESS\"\r\n    };\r\n\r\n    this.jobService.updateJobStatus(updatedJob).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert('Job re-opened', 'success');\r\n        this.ngOnInit();\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onFinish() {\r\n    let updatedJob = {\r\n      jobID: this.id,\r\n      jobStatus: \"COMPLETED\"\r\n    };\r\n\r\n    this.jobService.updateJobStatus(updatedJob).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.alert.displayAlert('Job completed', 'success');\r\n        this.ngOnInit();\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************************* FILE FUNCTIONS *********************************************************/\r\n  getFiles() {\r\n    this.jobService.getJobFilesByID(this.id).subscribe((files) => {\r\n      this.files = files;\r\n      // console.log(this.files);\r\n    });\r\n  }\r\n\r\n  setupFileUploader() {\r\n    this.url = `/api/jobs/${this.id}/upload`;\r\n    // this.url = `http://localhost:3000/api/jobs/${this.id}/upload`;\r\n    this.authService.loadToken();\r\n    let headers: any = [{ name: 'Authorization', value: this.authService.authToken }, { name: 'Content-Type', value: 'application/json' }];\r\n    this.uploader = new FileUploader({ url: this.url });\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n      //this.readyItems.push(file);\r\n      //console.log(file);\r\n    }\r\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\r\n      this.ngOnInit();\r\n      $('#upload-modal').modal('hide');\r\n      if(JSON.parse(response).success == true) {\r\n        this.alert.displayAlert(JSON.parse(response).msg, 'success');\r\n      } else {\r\n        this.alert.displayAlert(JSON.parse(response).msg, 'warning');\r\n      }\r\n      this.uploader.clearQueue();\r\n    }\r\n  }\r\n\r\n  onClickDeleteFile(file) {\r\n    this.file = file;\r\n    $('#delete-file-modal').modal('show');\r\n  }\r\n\r\n  onDeleteFile() {\r\n    let fileToRemove = {\r\n      key: this.file.fileName\r\n    };\r\n    this.jobService.deleteJobFile(this.file.fileID, fileToRemove).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.getFiles();\r\n        $('#delete-file-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************************* MATERIAL FUNCTIONS *********************************************************/\r\n  getMaterials() {\r\n    this.jobService.getJobMaterialsById(this.id).subscribe((jobMaterials) => {\r\n      this.jobMaterials = jobMaterials;\r\n      this.totalMaterialPriceTable = 0;\r\n      this.totalLinearFeetTable = 0;\r\n      for (let k = 0; k < this.jobMaterials.length; k++) {\r\n        this.totalMaterialPriceTable += ((this.jobMaterials[k].pricePerUnit / this.jobMaterials[k].linearFeetCoverage) * this.jobMaterials[k].linearFeet);\r\n        this.totalLinearFeetTable += this.jobMaterials[k].linearFeet;\r\n      }\r\n\r\n      this.materialService.getAllMaterials().subscribe((materials) => {\r\n        this.materials = materials.materials;\r\n\r\n        this.jobMaterials.forEach(jobMaterial => {\r\n          this.materials.forEach((material, i) => {\r\n            if (material.materialID == jobMaterial.materialID) {\r\n              this.materials.splice(i, 1);\r\n              this.totalMaterialPriceTable += ((jobMaterial.pricePerUnit / jobMaterial.linearFeetCoverage) * jobMaterial.linearFeet);\r\n            }\r\n          });\r\n        });\r\n        // for (let i = 0; i < this.materials.length; i++) {\r\n        //   for (let k = 0; k < this.jobMaterials.length; k++) {\r\n        //     if (this.materials[i].materialID == this.jobMaterials[k].materialID) {\r\n        //       this.materials.splice(i, 1);\r\n        //       this.totalMaterialPriceTable += ((this.jobMaterials[k].pricePerUnit / this.jobMaterials[k].linearFeetCoverage) * this.jobMaterials[k].linearFeet);\r\n        //     }\r\n        //   }\r\n        // }\r\n      });\r\n    });\r\n  }\r\n\r\n  onClearJobMaterials() {\r\n    this.selectedMaterials1.forEach(selectedMaterial => {\r\n      this.materials.push(selectedMaterial);\r\n    });\r\n    this.selectedMaterials1 = [];\r\n    this.linearFeet = 0;\r\n    this.pricePerUnit = 0;\r\n    this.linearFeetCoverage = 0;\r\n    this.totalMaterialPrice = 0;\r\n  }\r\n\r\n  clearMaterialUpdate() {\r\n    this.linearFeet = 0;\r\n    this.pricePerUnit = 0;\r\n    this.linearFeetCoverage = 0;\r\n  }\r\n\r\n  onCreateJobMaterials() {\r\n    this.selectedMaterials1.forEach(selectedMaterial => {\r\n      this.jobService.createJobMaterial(this.id, selectedMaterial).subscribe((data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    });\r\n    this.getMaterials();\r\n    this.onClearJobMaterials();\r\n    $('#create-material-modal').modal('hide');\r\n    this.alert.displayAlert('Material added', 'success');\r\n  }\r\n\r\n  onSelectMaterial(material, id) {\r\n    // console.log(material);\r\n    this.material = material;\r\n    this.materialID = id;\r\n  }\r\n\r\n  onChangeMaterial(id) {\r\n    // console.log(id);\r\n    this.materialID = id;\r\n  }\r\n\r\n  onAddMaterial() {\r\n    let selectedMaterial = {\r\n      materialID: this.materials[this.materialID].materialID,\r\n      materialName: this.materials[this.materialID].materialName,\r\n      pricePerUnit: this.materials[this.materialID].pricePerUnit,\r\n      linearFeetCoverage: this.materials[this.materialID].linearFeetCoverage,\r\n      linearFeet: this.linearFeet\r\n    };\r\n    this.totalMaterialPrice += ((selectedMaterial.pricePerUnit / selectedMaterial.linearFeetCoverage) * this.linearFeet);\r\n    this.selectedMaterials1.push(selectedMaterial);\r\n    this.materials.splice(this.materialID, 1);\r\n    this.material = null;\r\n    this.linearFeet = 0;\r\n  }\r\n\r\n  onRemoveMaterial(material, id) {\r\n    this.totalMaterialPrice -= ((material.pricePerUnit / material.linearFeetCoverage) * material.linearFeet);\r\n    this.selectedMaterials1.splice(id, 1);\r\n    this.materials.push(material);\r\n  }\r\n\r\n  onClickUpdateJobMaterial(materialID, materialIndex) {\r\n    this.materialID = materialID;\r\n    this.materialIndex = materialIndex;\r\n    this.linearFeet = this.jobMaterials[materialIndex].linearFeet;\r\n    this.pricePerUnit = this.jobMaterials[materialIndex].pricePerUnit;\r\n    this.linearFeetCoverage = this.jobMaterials[materialIndex].linearFeetCoverage;\r\n    this.materialName = this.jobMaterials[materialIndex].materialName;\r\n  }\r\n\r\n  onUpdateJobMaterial() {\r\n    let updatedJobMaterial = {\r\n      jobID: this.id,\r\n      materialID: this.jobMaterials[this.materialIndex].materialID,\r\n      linearFeet: this.linearFeet,\r\n      pricePerUnit: this.pricePerUnit,\r\n      linearFeetCoverage: this.linearFeetCoverage\r\n    };\r\n\r\n    this.jobService.updateJobMaterial(updatedJobMaterial).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getMaterials();\r\n        $('#update-material-modal').modal('hide');\r\n        this.alert.displayAlert('Material updated', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteMaterial() {\r\n    let materialID = this.materialID;\r\n    let jobID = this.id;\r\n\r\n    this.jobService.deleteJobMaterial(materialID, jobID).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getMaterials();\r\n        $('#update-material-modal').modal('hide');\r\n        this.alert.displayAlert('Material deleted', 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************************* CHANGE ORDER FUNCTIONS *********************************************************/\r\n  getChangeOrders() {\r\n    this.jobService.getChangeOrdersById(this.id).subscribe((changeOrders) => {\r\n      this.changeOrders = changeOrders;\r\n      this.totalChangeTable = 0;\r\n      for (let k = 0; k < this.changeOrders.length; k++) {\r\n        this.totalChangeTable += (this.changeOrders[k].changeAmount);\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickUpdateChangeOrder(changeID, changeIndex) {\r\n    this.changeID = changeID;\r\n    this.changeIndex = changeIndex;\r\n    this.changeAmount = this.changeOrders[changeIndex].changeAmount;\r\n  }\r\n\r\n  onUpdateChangeOrder() {\r\n    let updatedChangeOrder = {\r\n      changeID: this.changeOrders[this.changeIndex].changeID,\r\n      changeAmount: this.changeAmount\r\n    }\r\n    this.jobService.updateChangeOrder(updatedChangeOrder).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getChangeOrders();\r\n        $('#update-change-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteChangeOrder() {\r\n    let changeID = this.changeID;\r\n\r\n    this.jobService.deleteChangeOrder(changeID).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getChangeOrders();\r\n        $('#update-change-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onCreateChangeOrder() {\r\n    let changeOrder = {\r\n      changeAmount: this.changeAmount\r\n    };\r\n\r\n    this.jobService.createChangeOrder(this.id, changeOrder).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getChangeOrders();\r\n        $('#create-change-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onClearChangeOrder() {\r\n    this.changeAmount = 0;\r\n  }\r\n\r\n  /************************************************* REVENUE FUNCTIONS *********************************************************/\r\n  getRevenue() {\r\n    this.jobService.getRevenuesById(this.id).subscribe((revenues) => {\r\n      this.revenues = revenues;\r\n      this.totalRevenueTable = 0;\r\n      for (let k = 0; k < this.revenues.length; k++) {\r\n        this.totalRevenueTable += (this.revenues[k].revenueAmount);\r\n      }\r\n    });\r\n  }\r\n\r\n  onClearJobRevenue() {\r\n    this.revenueAmount = 0;\r\n  }\r\n\r\n  onCreateJobRevenue() {\r\n    let newRevenue = {\r\n      jobID: this.id,\r\n      revenueAmount: this.revenueAmount\r\n    };\r\n\r\n    this.jobService.createRevenue(newRevenue).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getRevenue();\r\n        $('#create-revenue-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onClickUpdateRevenue(revenueID, revenueIndex) {\r\n    this.revenueID = revenueID;\r\n    this.revenueIndex = revenueIndex;\r\n    this.revenueAmount = this.revenues[revenueIndex].revenueAmount;\r\n  }\r\n\r\n  onUpdateJobRevenue() {\r\n    let updatedJobRevenue = {\r\n      revenueID: this.revenues[this.revenueIndex].revenueID,\r\n      revenueAmount: this.revenueAmount\r\n    };\r\n\r\n    this.jobService.updateJobRevenue(updatedJobRevenue).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getRevenue();\r\n        $('#update-revenue-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteRevenue() {\r\n    let revenueID = this.revenueID;\r\n\r\n    this.jobService.deleteRevenue(revenueID).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getRevenue();\r\n        $('#update-revenue-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /************************************************* LABOR FUNCTIONS *********************************************************/\r\n  getLabor() {\r\n    this.jobService.getLaborsById(this.id).subscribe((jobLabors) => {\r\n      this.jobLabors = jobLabors;\r\n      this.totalLaborPriceTable = 0;\r\n      this.totalHoursTable = 0;\r\n      for (let k = 0; k < this.jobLabors.length; k++) {\r\n        this.totalLaborPriceTable += (this.jobLabors[k].roleWage * this.jobLabors[k].laborHours);\r\n        this.totalHoursTable += this.jobLabors[k].laborHours;\r\n      }\r\n    });\r\n    this.laborService.getAllLabors().subscribe((labors) => {\r\n      this.labors = labors.labors;\r\n    });\r\n  }\r\n\r\n  onClickUpdateLabor(laborID, laborIndex) {\r\n    this.laborID = laborID;\r\n    this.laborIndex = laborIndex;\r\n    this.hours = this.jobLabors[laborIndex].laborHours;\r\n    this.wage = this.jobLabors[laborIndex].roleWage;\r\n    this.roleName = this.jobLabors[laborIndex].roleName;\r\n    this.laborDate = this.jobLabors[laborIndex].laborDate;\r\n  }\r\n\r\n  clearLaborUpdate() {\r\n    this.wage = 0;\r\n    this.hours = 0;\r\n  }\r\n\r\n  clearLaborCreate() {\r\n    this.selectedLabors.forEach(selectLabor => {\r\n      this.labors.push(selectLabor);\r\n    });\r\n    this.hours = 0;\r\n    this.totalLaborPrice = 0;\r\n    this.selectedLabors = [];\r\n  }\r\n\r\n  onUpdateJobLabor() {\r\n    let updatedJobLabor = {\r\n      laborID: this.jobLabors[this.laborIndex].laborID,\r\n      laborHours: this.hours,\r\n      roleWage: this.wage\r\n    };\r\n\r\n    this.jobService.updateJobLabor(updatedJobLabor).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.getLabor();\r\n        $('#update-labor-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    }\r\n    );\r\n  }\r\n\r\n  /********** CREATE START **********/\r\n  onCreateJobLabor() {\r\n    this.selectedLabors.forEach((selectedLabor) => {\r\n      this.jobService.createLabor(this.id, selectedLabor).subscribe((data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    });\r\n    this.getLabor();\r\n    $('#create-labor-modal').modal('hide');\r\n    this.alert.displayAlert('Labor added', 'success');\r\n  }\r\n\r\n  onAddLabor() {\r\n    let selectedLabor = {\r\n      roleID: this.labors[this.laborID].roleID,\r\n      roleName: this.labors[this.laborID].roleName,\r\n      roleWage: this.labors[this.laborID].roleWage,\r\n      laborHours: this.hours\r\n    };\r\n    this.totalLaborPrice += (selectedLabor.roleWage * this.hours);\r\n    this.selectedLabors.push(selectedLabor);\r\n    this.labors.splice(this.laborID, 1);\r\n    this.hours = 0;\r\n  }\r\n\r\n  onRemoveLabor(labor, id) {\r\n    this.totalLaborPrice -= (labor.laborHours * labor.roleWage);\r\n    this.selectedLabors.splice(id, 1);\r\n    this.labors.push(labor);\r\n  }\r\n\r\n  onChangeLabor(id) {\r\n    this.laborID = id;\r\n  }\r\n  /********** CREATE END **********/\r\n\r\n  onClearJobLabor() {\r\n    this.hours = 0;\r\n    this.wage = 0;\r\n    this.roleName = '';\r\n    this.laborDate = '';\r\n  }\r\n\r\n  onDeleteLabor() {\r\n    let laborID = this.laborID;\r\n\r\n    this.jobService.deleteLabor(laborID).subscribe((data) => {\r\n      if (data.success) {\r\n        // console.log(data.msg);\r\n        this.getLabor();\r\n        $('#update-labor-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ninterface SelectedMaterial {\r\n  materialID: number,\r\n  materialName: String,\r\n  linearFeet: number,\r\n  pricePerUnit: number,\r\n  linearFeetCoverage: number\r\n}\r\ninterface SelectedLabor {\r\n  roleID: number,\r\n  roleName: String,\r\n  roleWage: number,\r\n  laborHours: number\r\n}\r\n\r\n/************************************************* UNUSED CODE *********************************************************/\r\n// onAddMaterial(material, id) {\r\n//   this.selectedMaterials.push(material);\r\n//   this.materials.splice(id, 1);\r\n// }\r\n\r\n// onRemoveMaterial(material, id) {\r\n//   this.selectedMaterials.splice(id, 1);\r\n//   this.materials.push(material);\r\n//   //this.ngOnInit();\r\n// }\r\n\r\n// onClear() {\r\n//   this.selectedMaterials.forEach(selectedMaterial => {\r\n//     this.materials.push(selectedMaterial);\r\n//   });\r\n//   this.selectedMaterials = [];\r\n// }\r\n\r\n // fileTree = {\r\n  //   \"name\": \"test\",\r\n  //   \"children\": [\r\n  //     {\"name\": \"http://localhost:3000/uploads/jobs/33/file-1509295300688.txt\"}\r\n  //   ]\r\n  // }\r\n\r\n  // selectedMaterials: SelectedMaterial[] = [];\r\n\r\n   //readyItems: any[] = [];\r\n\r\n\r\n  //  onDeleteFile() {\r\n  //   let file = {\r\n  //     file: this.fileName\r\n  //   }\r\n  //   this.jobService.deleteJobFile(this.id, file).subscribe((data) => {\r\n  //     if (data.success) {\r\n  //       console.log(data.msg);\r\n  //       this.ngOnInit();\r\n  //     } else {\r\n  //       console.log(data.msg);\r\n  //     }\r\n  //   });\r\n  // }\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/job/job.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.css\n// module id = ../../../../../src/app/components/jobs/jobs.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pull-left\\\">\\r\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Go Home</button>\\r\\n</div>\\r\\n\\r\\n<ng-container *ngIf=\\\"jobsLength!=0; else noJobs\\\">\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">Jobs</h2>\\r\\n    <h4>Click To View Details</h4>\\r\\n    <table *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table table-bordered table-hover\\\">\\r\\n      <thead>\\r\\n        <tr class=\\\"active\\\">\\r\\n          <th class=\\\"hidden-xs hidden-sm\\\">ID</th>\\r\\n          <th>Customer</th>\\r\\n          <th>Status</th>\\r\\n          <th>Created Date</th>\\r\\n          <th class=\\\"hidden-xs hidden-sm\\\">Completion Date</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let job of jobs;\\\" id=\\\"{{job.jobID}}\\\" [routerLink]=\\\"['/jobs/'+job.jobID]\\\" [ngClass]=\\\"{'info': job.jobStatus=='IN-PROGRESS','success': job.jobStatus=='COMPLETED'}\\\">\\r\\n          <td class=\\\"hidden-xs hidden-sm\\\">{{job.jobID}}</td>\\r\\n          <td>{{job.customerName}}</td>\\r\\n          <td>{{job.jobStatus}}</td>\\r\\n          <td>{{job.createdDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          <td *ngIf=\\\"job.jobStatus != 'IN-PROGRESS'\\\" class=\\\"hidden-xs hidden-sm\\\">{{job.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          <td *ngIf=\\\"job.jobStatus == 'IN-PROGRESS'\\\" class=\\\"hidden-xs hidden-sm\\\">N/A</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<ng-template #noJobs>\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">No Jobs</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!--                                              UNUSED MARKUP                                                       -->\\r\\n<!-- <ng-container *ngIf=\\\"inProgressLength!=0 || completedLength!=0; else noJobs\\\">\\r\\n  <ng-container *ngIf=\\\"inProgressLength!=0; else noInProgressJobs\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n      <h2 class=\\\"page-header\\\">In Progress Jobs</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Revenue</th>\\r\\n            <th>Created Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let inProgressJob of inProgressJobs;\\\" [routerLink]=\\\"['/jobs/'+inProgressJob.jobID]\\\">\\r\\n            <td>{{inProgressJob.jobID}}</td>\\r\\n            <td>{{inProgressJob.jobRevenue}}</td>\\r\\n            <td>{{inProgressJob.createdDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>  \\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noInProgressJobs>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Jobs In Progress</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  \\r\\n  <ng-container *ngIf=\\\"completedLength!=0; else noCompletedJobs\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n      <h2 class=\\\"page-header\\\">Completed Jobs</h2>\\r\\n      <h4>Click To View Details</h4>\\r\\n      <table class=\\\"table table-striped table-hover\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Labor Cost</th>\\r\\n            <th>Material Cost</th>\\r\\n            <th>Income</th>\\r\\n            <th>Created Date</th>\\r\\n            <th>Completed Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let completedJob of completedJobs;\\\" [routerLink]=\\\"['/jobs/'+completedJob.jobID]\\\">\\r\\n            <td>{{completedJob.jobID}}</td>\\r\\n            <td>{{completedJob.jobLabor}}</td>\\r\\n            <td>Net Income</td>\\r\\n            <td>{{completedJob.endDate | date: 'MM/dd/yyyy'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>  \\r\\n    </div>\\r\\n  </ng-container>\\r\\n  <ng-template #noCompletedJobs>\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\r\\n      <h2 class=\\\"page-header\\\">No Completed Jobs</h2>\\r\\n      <p>If this is incorrect, try refreshing the page.</p>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n</ng-container>\\r\\n<ng-template #noJobs>\\r\\n  <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h2 class=\\\"page-header\\\">No Jobs</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </div>\\r\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.html\n// module id = ../../../../../src/app/components/jobs/jobs.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { JobService } from '../../services/job.service';\r\nimport { Subject } from 'rxjs/Rx';\r\n\r\n@Component({\r\n  selector: 'app-jobs',\r\n  templateUrl: './jobs.component.html',\r\n  styleUrls: ['./jobs.component.css']\r\n})\r\nexport class JobsComponent implements OnInit {\r\n\r\n  jobs: any;\r\n  jobsLength: any;\r\n  inProgressJobs: any;\r\n  inProgressLength: any;\r\n  completedJobs: any;\r\n  completedLength: any;\r\n\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  displayTable: Boolean = false;\r\n\r\n  constructor(\r\n    private jobService: JobService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.jobService.getAllJobs().subscribe((jobs) => {\r\n      this.jobs = jobs.jobs;\r\n      this.jobsLength = jobs.jobs.length;\r\n      // this.filterJobs(jobs);\r\n      this.setupDataTable();\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // this.applyTableColor();\r\n  }\r\n\r\n  applyTableColor() {\r\n    this.jobService.getAllJobs().subscribe(jobs => {\r\n      jobs.jobs.forEach(job => {\r\n        let id = job.jobID;\r\n        let status = job.jobStatus;\r\n        if (status == 'IN-PROGRESS') {\r\n          document.getElementById(id).classList.add('info');\r\n        } else if (status == 'COMPLETED') {\r\n          document.getElementById(id).classList.add('success');\r\n        } \r\n      });\r\n    });\r\n  }\r\n\r\n  setupDataTable() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers',\r\n      order: [0, 'desc']\r\n    };\r\n    this.dtTrigger.next();\r\n    this.displayTable = true;\r\n  }\r\n\r\n  filterJobs(jobs) {\r\n    this.inProgressJobs = jobs.inProgressJobs;\r\n    this.inProgressLength = jobs.inProgressJobs.length;\r\n    this.completedJobs = jobs.completedJobs;\r\n    this.completedLength = jobs.completedJobs.length;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/jobs/jobs.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/labor/labor.component.css\n// module id = ../../../../../src/app/components/labor/labor.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pull-left\\\">\\r\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Go Home</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <h2 class=\\\"page-header\\\">Labor</h2>\\r\\n  <h4>Click To Update Or Delete</h4>\\r\\n  <table class=\\\"table table-bordered table-hover\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"active\\\">\\r\\n        <th>Role</th>\\r\\n        <th>Per Hour Wage</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let labor of labors\\\" (click)=\\\"onClickUpdate(labor.roleID, labor.roleName, labor.roleWage)\\\" data-toggle=\\\"modal\\\"\\r\\n        href='#update-modal'>\\r\\n        <td>{{labor.roleName}}</td>\\r\\n        <td>{{labor.roleWage | currency: 'USD':true}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#create-modal'>\\r\\n    <span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Create New</button>\\r\\n</div>\\r\\n\\r\\n<!--                Create Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Create A New Role</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\" (submit)=\\\"onCreate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Role Name</label>\\r\\n            <input required maxlength=\\\"50\\\" #name=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"roleName\\\" name=\\\"roleName\\\" placeholder=\\\"Role Name\\\" class=\\\"form-control\\\" required>\\r\\n            <div *ngIf=\\\"name.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"name.errors.required\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Role Wage Per Hour</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #wage=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"roleWage\\\" name=\\\"roleWage\\\" placeholder=\\\"Role Wage Per Hour\\\" class=\\\"form-control\\\" required>\\r\\n            <div *ngIf=\\\"wage.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"wage.errors.required\\\">\\r\\n                *Wage is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClear()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onClear()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Update Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update Role</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f2=\\\"ngForm\\\" (submit)=\\\"onUpdate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Role Name</label>\\r\\n            <input required maxlength=\\\"50\\\" #name2=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"roleName\\\" name=\\\"roleName\\\" placeholder=\\\"Role Name\\\" class=\\\"form-control\\\" required>\\r\\n            <div *ngIf=\\\"name2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"name2.errors.required\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Role Wage Per Hour</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #wage2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"roleWage\\\" name=\\\"roleWage\\\" placeholder=\\\"Role Wage Per Hour\\\" class=\\\"form-control\\\" required>\\r\\n            <div *ngIf=\\\"wage2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"wage2.errors.required\\\">\\r\\n                *Wage is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f2.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClear()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" (click)=\\\"onClear()\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onClear()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this labor role?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDelete(); onClear()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/labor/labor.component.html\n// module id = ../../../../../src/app/components/labor/labor.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LaborService } from '../../services/labor.service';\r\nimport { Subject } from 'rxjs/Rx';\r\nimport { AlertComponent } from '../alert/alert.component';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-labor',\r\n  templateUrl: './labor.component.html',\r\n  styleUrls: ['./labor.component.css']\r\n})\r\nexport class LaborComponent implements OnInit {\r\n\r\n  labors: any;\r\n  roleName: string = '';\r\n  roleWage: number = null;\r\n  roleID: number = null;\r\n\r\n  constructor(\r\n    private laborService: LaborService,\r\n    private alert: AlertComponent\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getLabor();\r\n  }\r\n\r\n  getLabor() {\r\n    this.laborService.getAllLabors().subscribe((labors) => {\r\n      this.labors = labors.labors;\r\n    });\r\n  }\r\n\r\n  onClear() {\r\n    this.roleID = null;\r\n    this.roleName = '';\r\n    this.roleWage = null;\r\n  }\r\n\r\n  onCreate() {\r\n    let newLabor = {\r\n      roleName: this.roleName,\r\n      roleWage: this.roleWage\r\n    }\r\n\r\n    this.laborService.createLabor(newLabor).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.onClear();\r\n        this.getLabor();\r\n        $('#create-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onClickUpdate(roleID, roleName, roleWage) {\r\n    this.roleID = roleID;\r\n    this.roleName = roleName;\r\n    this.roleWage = roleWage;\r\n  }\r\n\r\n  onUpdate() {\r\n    let updatedLabor = {\r\n      roleID: this.roleID,\r\n      roleName: this.roleName,\r\n      roleWage: this.roleWage\r\n    }\r\n    this.laborService.updateLabor(updatedLabor).subscribe(\r\n      (data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n          this.onClear();\r\n          this.getLabor();\r\n          $('#update-modal').modal('hide');\r\n          this.alert.displayAlert(data.msg, 'success');\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n  }\r\n\r\n  onDelete() {\r\n    this.laborService.deleteLabor(this.roleID).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.onClear();\r\n        this.getLabor();\r\n        $('#update-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/labor/labor.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <h1>Allied Waterproofing</h1>\\r\\n    <p>Project Management</p>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                                Alerts                                                -->\\r\\n<div id=\\\"login-alert\\\" class=\\\"alert alert-dismissible alert-warning\\\" hidden></div>\\r\\n\\r\\n<h2 class=\\\"page-header\\\">Login</h2>\\r\\n<form #f=\\\"ngForm\\\" (submit)=\\\"onLogin()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Username</label>\\r\\n    <input required maxlength=\\\"50\\\" #username1=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\"\\r\\n      class=\\\"form-control\\\">\\r\\n    <div *ngIf=\\\"username1.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n      <div *ngIf=\\\"username1.errors.required\\\">\\r\\n        *Username is required\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Password</label>\\r\\n    <input required maxlength=\\\"50\\\" #password1=\\\"ngModel\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n      class=\\\"form-control\\\">\\r\\n    <div *ngIf=\\\"password1.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n      <div *ngIf=\\\"password1.errors.required\\\">\\r\\n        *Password is required\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-log-in\\\" aria-hidden=\\\"true\\\"></span> Login</button>\\r\\n  <button type=\\\"button\\\" (click)=\\\"clearFields()\\\" class=\\\"btn btn-warning\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-repeat\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { AlertComponent } from '../alert/alert.component';\r\nimport { Router } from '@angular/router';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string = '';\r\n  password: string = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private alert: AlertComponent,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onLogin() {\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n\r\n    this.authService.authenticateUser(user).subscribe((data) => {\r\n      if (data.success) {\r\n        this.authService.storeUserData(data.token, data.user);\r\n        this.alert.displayAlert('Welcome', 'success');\r\n        this.router.navigate(['home']);\r\n      } else {\r\n        this.alert.displayAlert(data.msg, 'warning');\r\n        // console.log(data.msg);\r\n        // $(\"#login-alert\").html(`<button type='button' class='close' data-dismiss='alert'>&times;</button><strong>Warning!</strong> ${data.msg}, please try again.`);\r\n        // $(\"#login-alert\").fadeTo(3000, 500).slideUp(500, function () {\r\n        //   $(\"#login-alert\").slideUp(500);\r\n        // });\r\n        // this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearFields() {\r\n    this.username = '';\r\n    this.password = '';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.css\n// module id = ../../../../../src/app/components/materials/materials.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pull-left\\\">\\r\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">\\r\\n    <span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Go Home</button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n  <ng-container *ngIf=\\\"length != 0; else noMaterials\\\">\\r\\n    <h2 class=\\\"page-header\\\">Materials</h2>\\r\\n    <h4>Click To Update Or Delete</h4>\\r\\n    <!-- *ngIf=\\\"displayTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" -->\\r\\n    <table class=\\\"table table-bordered table-hover\\\">\\r\\n      <thead>\\r\\n        <tr class=\\\"active\\\">\\r\\n          <th>Name</th>\\r\\n          <th>Price Per Unit</th>\\r\\n          <th>Coverage In Linear Feet</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let material of materials\\\" (click)=\\\"onClickUpdate(material.materialID, material.materialName, material.pricePerUnit, material.linearFeetCoverage)\\\"\\r\\n          data-toggle=\\\"modal\\\" href='#update-modal'>\\r\\n          <td>{{material.materialName}}</td>\\r\\n          <td>{{material.pricePerUnit | currency: 'USD':true}}</td>\\r\\n          <td>{{material.linearFeetCoverage}} ft</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </ng-container>\\r\\n  <ng-template #noMaterials>\\r\\n    <h2 class=\\\"page-header\\\">No Materials</h2>\\r\\n    <p>If this is incorrect, try refreshing the page.</p>\\r\\n  </ng-template>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" href='#create-modal'>\\r\\n    <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Create New</button>\\r\\n</div>\\r\\n\\r\\n<!--                Update Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"update-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Update Material</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f2=\\\"ngForm\\\" (submit)=\\\"onUpdate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input required maxlength=\\\"50\\\" #materialName2=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"materialName2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"materialName2.errors.required\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Price Per Unit</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #perUnit2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"pricePerUnit\\\"\\r\\n              name=\\\"pricePerUnit\\\" placeholder=\\\"Price Per Unit\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"perUnit2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"perUnit2.errors.required\\\">\\r\\n                *Per unit price is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Coverage In Linear Feet</label>\\r\\n            <input required mask=\\\"0000000\\\" #coverage2=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeetCoverage\\\"\\r\\n              name=\\\"linearFeetCoverage\\\" placeholder=\\\"Coverage In Linear Feet\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"coverage2.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"coverage2.errors.required\\\">\\r\\n                *Linear feet coverage is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f2.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-floppy-saved\\\" aria-hidden=\\\"true\\\"></span> Update</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClear()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-toggle=\\\"modal\\\" href='#delete-modal'>\\r\\n            <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span> Delete\\r\\n          </button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onClear()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Delete Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"delete-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>Are you sure you want to delete this material?</p>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDelete()\\\">Yes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--                Create Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"create-modal\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n        <h4 class=\\\"modal-title\\\">Create A New Material</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form #f=\\\"ngForm\\\" (submit)=\\\"onCreate()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Name</label>\\r\\n            <input required maxlength=\\\"50\\\" #materialName=\\\"ngModel\\\" type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"materialName.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"materialName.errors.required\\\">\\r\\n                *Name is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Price Per Unit</label>\\r\\n            <input required onKeyPress=\\\"if(this.value.length==5) return false;\\\" #perUnit=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"pricePerUnit\\\"\\r\\n              name=\\\"pricePerUnit\\\" placeholder=\\\"Price Per Unit\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"perUnit.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"perUnit.errors.required\\\">\\r\\n                *Per unit price is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Coverage In Linear Feet</label>\\r\\n            <input required mask=\\\"0000000\\\" #coverage=\\\"ngModel\\\" type=\\\"number\\\" [(ngModel)]=\\\"linearFeetCoverage\\\"\\r\\n              name=\\\"linearFeetCoverage\\\" placeholder=\\\"Coverage In Linear Feet\\\" class=\\\"form-control\\\">\\r\\n            <div *ngIf=\\\"coverage.invalid\\\" style=\\\"color:#ff0000\\\">\\r\\n              <div *ngIf=\\\"coverage.errors.required\\\">\\r\\n                *Linear feet coverage is required\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button [disabled]=\\\"f.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Create</button>\\r\\n          <button type=\\\"button\\\" (click)=\\\"onClear()\\\" class=\\\"btn btn-warning\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-refresh\\\" aria-hidden=\\\"true\\\"></span> Clear</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button (click)=\\\"onClear()\\\" type=\\\"button\\\" class=\\\"btn btn-info\\\" data-dismiss=\\\"modal\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-remove-circle\\\" aria-hidden=\\\"true\\\"></span> Close</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.html\n// module id = ../../../../../src/app/components/materials/materials.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MaterialService } from '../../services/material.service';\r\nimport { Subject } from 'rxjs/Rx';\r\nimport { AlertComponent } from '../alert/alert.component';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-materials',\r\n  templateUrl: './materials.component.html',\r\n  styleUrls: ['./materials.component.css']\r\n})\r\nexport class MaterialsComponent implements OnInit {\r\n\r\n  materials: any;\r\n  name: string = '';\r\n  pricePerUnit: number = null;\r\n  linearFeetCoverage: number = null;\r\n  tempID: number = null;\r\n  length: number = null;\r\n\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject();\r\n  displayTable: Boolean = false;\r\n\r\n  constructor(\r\n    private materialService: MaterialService,\r\n    private alert: AlertComponent\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getMaterials();\r\n    // this.setupDataTable();\r\n  }\r\n\r\n  getMaterials() {\r\n    this.materialService.getAllMaterials().subscribe((materials) => {\r\n      this.materials = materials.materials;\r\n      this.length = this.materials.length;\r\n    });\r\n  }\r\n\r\n  setupDataTable() {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers'\r\n    };\r\n    this.dtTrigger.next();\r\n    this.displayTable = true;\r\n  }\r\n\r\n  onClear() {\r\n    this.tempID = null;\r\n    this.name = '';\r\n    this.pricePerUnit = null;\r\n    this.linearFeetCoverage = null;\r\n  }\r\n\r\n  onClickUpdate(materialID, name, pricePerUnit, linearFeetCoverage) {\r\n    this.tempID = materialID;\r\n    this.name = name;\r\n    this.pricePerUnit = pricePerUnit;\r\n    this.linearFeetCoverage = linearFeetCoverage;\r\n  }\r\n\r\n  onUpdate() {\r\n    let updateMaterial = {\r\n      materialID: this.tempID,\r\n      materialName: this.name,\r\n      pricePerUnit: this.pricePerUnit,\r\n      linearFeetCoverage: this.linearFeetCoverage\r\n    }\r\n    this.materialService.updateMaterial(updateMaterial).subscribe(\r\n      (data) => {\r\n        if (data.success) {\r\n          console.log(data.msg);\r\n          this.onClear();\r\n          this.getMaterials();\r\n          $('#update-modal').modal('hide');\r\n          this.alert.displayAlert(data.msg, 'success');\r\n        } else {\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n  }\r\n\r\n  onCreate() {\r\n    let newMaterial = {\r\n      materialName: this.name,\r\n      pricePerUnit: this.pricePerUnit,\r\n      linearFeetCoverage: this.linearFeetCoverage\r\n    }\r\n\r\n    this.materialService.createMaterial(newMaterial).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.onClear();\r\n        this.getMaterials();\r\n        $('#create-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  onDeleteClick(materialID) {\r\n    this.tempID = materialID;\r\n  }\r\n\r\n  onDelete() {\r\n    this.materialService.deleteMaterial(this.tempID).subscribe((data) => {\r\n      if (data.success) {\r\n        console.log(data.msg);\r\n        this.onClear();\r\n        this.getMaterials();\r\n        $('#update-modal').modal('hide');\r\n        this.alert.displayAlert(data.msg, 'success');\r\n      } else {\r\n        console.log(data.msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/materials/materials.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fill-remaining-space {\\r\\n    /*This fills the remaining space, by using flexbox.  \\r\\n   Every toolbar row uses a flexbox row layout. */\\r\\n   -webkit-box-flex: 1;\\r\\n       -ms-flex: 1 1 auto;\\r\\n           flex: 1 1 auto;\\r\\n};\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!-- https://stackoverflow.com/questions/38209713/how-to-make-a-responsive-nav-bar-using-angular-material-2 -->\\r\\n<!--<md-sidenav-containe fullscreen>-->\\r\\n<!--<md-sidenav-container>\\r\\n    <md-toolbar color=\\\"primary\\\">\\r\\n        <button md-button [routerLink]=\\\"['/']\\\"><md-icon>home</md-icon>Allied Waterproofing</button>\\r\\n        <span class=\\\"fill-remaining-space\\\"></span>\\r\\n        <div fxLayout=\\\"row\\\" fxShow=\\\"false\\\" fxShow.gt-sm>\\r\\n            <button md-button [routerLink]=\\\"['/customers']\\\">Customers</button>\\r\\n            <button md-button [routerLink]=\\\"['/']\\\">Something</button>\\r\\n        </div>\\r\\n        <button md-button [md-menu-trigger-for]=\\\"menu\\\" fxHide=\\\"false\\\" fxHide.gt-sm><md-icon>menu</md-icon></button>\\r\\n    </md-toolbar>\\r\\n    <md-menu x-position=\\\"before\\\" #menu=\\\"mdMenu\\\">\\r\\n        <button md-menu-item [routerLink]=\\\"['/customers']\\\">Customers</button>\\r\\n        <button md-menu-item [routerLink]=\\\"['/']\\\">Something</button>\\r\\n    </md-menu>\\r\\n</md-sidenav-container>-->\\r\\n\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\" role=\\\"navigation\\\">\\r\\n    <!-- Brand and toggle get grouped for better mobile display -->\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-ex1-collapse\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n        </button>\\r\\n        <a class=\\\"navbar-brand\\\">Allied Waterproofing</a>\\r\\n    </div>\\r\\n\\r\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n    <div class=\\\"collapse navbar-collapse navbar-ex1-collapse\\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/home']\\\"><span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Home</a></li>\\r\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/customers']\\\"><span class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span> Customers</a></li>\\r\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/inquiries']\\\"><span class=\\\"glyphicon glyphicon-inbox\\\" aria-hidden=\\\"true\\\"></span> Inquiries</a></li>\\r\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/bids']\\\"><span class=\\\"glyphicon glyphicon-file\\\" aria-hidden=\\\"true\\\"></span> Bids</a></li>\\r\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/jobs']\\\"><span class=\\\"glyphicon glyphicon-briefcase\\\" aria-hidden=\\\"true\\\"></span> Jobs</a></li>\\r\\n        </ul>\\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n            <li class=\\\"dropdown\\\">\\r\\n                <a *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-collapse-down\\\"></span> Manage\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/materials']\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Materials</a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/labor']\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Labor</a>\\r\\n                    </li>\\r\\n                    <!-- <li class=\\\"divider\\\"></li>\\r\\n                    <li>\\r\\n                        <a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/profile']\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-info-sign\\\" aria-hidden=\\\"true\\\"></span> Profile</a>\\r\\n                    </li> -->\\r\\n                </ul>\\r\\n            </li>\\r\\n            <!-- <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/materials']\\\"><span class=\\\"glyphicon glyphicon-tint\\\" aria-hidden=\\\"true\\\"></span> Materials</a></li>\\r\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/labor']\\\"><span class=\\\"glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\"></span> Labor</a></li> -->\\r\\n            <!-- <li><a *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/register']\\\">Register User</a></li> -->\\r\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\" data-toggle=\\\"modal\\\" href='#logout-modal'><span class=\\\"glyphicon glyphicon-log-out\\\" aria-hidden=\\\"true\\\"></span> Logout</a></li>\\r\\n        </ul>\\r\\n    </div><!-- /.navbar-collapse -->\\r\\n</nav>\\r\\n\\r\\n\\r\\n<!--                Logout Popup                -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"logout-modal\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\r\\n                <h4 class=\\\"modal-title\\\">Warning</h4>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <p>Are you sure you want to logout?</p>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">No</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onLogout()\\\">Yes</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { AlertComponent } from '../alert/alert.component';\r\ndeclare var $;\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  loggedIn:any;\r\n\r\n  constructor(\r\n    private router:Router,\r\n    private authService:AuthService,\r\n    private alert: AlertComponent\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.loggedIn = this.authService.loggedIn();\r\n    console.log(this.loggedIn);\r\n  }\r\n\r\n  onLogout(){\r\n    this.authService.logout();\r\n    // console.log('Logged out');\r\n    $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n    this.alert.displayAlert('Logged out', 'success');\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"pull-left\\\">\\n  <button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">\\n    <span class=\\\"glyphicon glyphicon-home\\\" aria-hidden=\\\"true\\\"></span> Go Home</button>\\n</div>\\n\\n<div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n  <h2 class=\\\"page-header\\\">Profile</h2>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-default\\\" [routerLink]=\\\"['/home']\\\">Go Home</button>\\r\\n<h2 class=\\\"page-header\\\">Register A New User</h2>\\r\\n<form (submit)=\\\"onRegister()\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Name</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" required>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Username</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\" required>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label>Password</label>\\r\\n    <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" required>\\r\\n  </div>\\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Register</button>\\r\\n  <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\">Clear</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  name:String;\r\n  username:String;\r\n  password:String;\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRegister(){\r\n    if(this.name == undefined || this.username == undefined || this.password == undefined){\r\n      console.log(\"Fields must be filled in\");\r\n    } else{\r\n      const user = {\r\n        name: this.name,\r\n        username: this.username,\r\n        password: this.password\r\n      }\r\n      this.authService.registerUser(user).subscribe((data) => {\r\n        if(data.success){\r\n          console.log(data.msg);\r\n          this.router.navigate(['/home']);\r\n        } else{\r\n          console.log(data.msg);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/components/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n\r\n    constructor(\r\n        private authService:AuthService,\r\n        private router:Router\r\n    ){}\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n        } else{\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { CookieStorage } from 'cookie-storage';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  authToken:any;\r\n  user:any;\r\n  cookieStorage = new CookieStorage();\r\n  // localHttp:String = 'http://localhost:3000/api';\r\n  localHttp:String = 'api';\r\n\r\n  constructor(\r\n    private http:Http,\r\n    private cookieService: CookieService\r\n  ) { }\r\n\r\n  registerUser(user){\r\n    this.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization',this.authToken);\r\n    return this.http.post(`${this.localHttp}/users/register`, JSON.stringify(user),{headers: headers}).map(res => res.json());\r\n  }\r\n\r\n  authenticateUser(user){\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    return this.http.post(`${this.localHttp}/users/authenticate`, JSON.stringify(user),{headers: headers}).map(res => res.json());\r\n  }\r\n\r\n  storeUserData(token, user){\r\n    localStorage.setItem('id_token', token); //jwt looks for id_token by default\r\n    localStorage.setItem('user', JSON.stringify(user)); // local storage can only store strings\r\n    // this.cookieStorage.setItem('id_token', token);\r\n    // this.cookieStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  loggedIn(){\r\n    return tokenNotExpired('id_token');\r\n  }\r\n\r\n  logout(){\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n    // this.cookieStorage.clear();\r\n  }\r\n\r\n  loadToken(){\r\n    const token = localStorage.getItem('id_token');\r\n    // const token = this.cookieStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class BidService {\r\n\r\n  // localHttp: String = 'http://localhost:3000/api';\r\n  localHttp:String = 'api';\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  /************************************************************** Bid ***************************************************************************************/\r\n\r\n  getAllBids() {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/bids/all`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getBidById(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/bids/${id}`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createBid(newBid) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/new`, JSON.stringify(newBid), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteBid(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/delete/${id}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateBid(updatedBid) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/update`, JSON.stringify(updatedBid), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateBidStatus(updatedBid) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/update-status`, JSON.stringify(updatedBid), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /************************************************************** Bid Materials ***************************************************************************************/\r\n\r\n  getBidMaterialsById(bidId) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/bids/${bidId}/bid-materials`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createBidMaterial(newBidMaterial) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/new/bid-material`, JSON.stringify(newBidMaterial), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getCurrentBidMaterialsCost(bidID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/bids/${bidID}/bid-materials/cost`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createBidMaterialById(id, bidMaterial) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/${id}/new/bid-material`, JSON.stringify(bidMaterial), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteBidMaterial(bidMaterial) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/remove/material`, JSON.stringify(bidMaterial), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateBidMaterial(updatedBidMaterial) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/change/material`, JSON.stringify(updatedBidMaterial), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /************************************************************** Bid Labors ***************************************************************************************/\r\n\r\n  getBidLaborsById(bidId) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/bids/${bidId}/bid-labors`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createBidLabor(newBidLabor) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/new/bid-labor`, JSON.stringify(newBidLabor), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getCurrentBidLaborsCost(bidID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/bids/${bidID}/bid-labors/cost`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createBidLaborById(id, bidLabor) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/${id}/new/bid-labor`, JSON.stringify(bidLabor), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteBidLabor(laborID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/delete/bid-labor/${laborID}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateBidLabor(updatedBidLabor) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/update/bid-labor`, JSON.stringify(updatedBidLabor), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /********************************************************************* FILE FUNCTIONS ***********************************************************************/\r\n  getBidFilesByID(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/bids/${id}/files`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteBidFile(id, file) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/bids/${id}/files/delete`, JSON.stringify(file), { headers: headers }).map(response => response.json());\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/bid.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class CustomerService {\r\n\r\n  // localHttp:String = 'http://localhost:3000/api';\r\n  localHttp:String = 'api';\r\n  \r\n  constructor(\r\n    private http:Http,\r\n    private authService:AuthService\r\n  ) { }\r\n\r\n  getAllCustomers(){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type','application/json');\r\n    return this.http.get(`${this.localHttp}/customers/all`, {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  getAllContacts(customerID){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type','application/json');\r\n    return this.http.get(`${this.localHttp}/customers/${customerID}/contacts`, {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  getCustomerById(id){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.get(`${this.localHttp}/customers/${id}`, {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  deleteCustomer(id){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/customers/delete/${id}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  deleteContact(contactID){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/customers/delete/contact/${contactID}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  createCustomer(newCustomer){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization',this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/customers/new`, JSON.stringify(newCustomer), {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  createContact(newContact){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization',this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/customers/${newContact.customerID}/new/contact`, JSON.stringify(newContact), {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  updateCustomer(updatedCustomer){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization',this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/customers/update`, JSON.stringify(updatedCustomer), {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  updateContact(updatedContact){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization',this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/customers/update/contact`, JSON.stringify(updatedContact), {headers: headers}).map(response => response.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/customer.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class InquiryService {\r\n\r\n  // localHttp: String = 'http://localhost:3000/api';\r\n  localHttp:String = 'api';\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  getAllInquiries() {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/inquiries/all`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getInquiriesByCustomer(customerID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/inquiries/all/customer/${customerID}`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getAllInquiriesTest() {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/inquiries/all`, { headers: headers });\r\n  }\r\n\r\n  getInquiryById(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/inquiries/${id}`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createInquiry(newInquiry) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/inquiries/new`, JSON.stringify(newInquiry), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteInquiry(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/inquiries/delete/${id}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateInquiry(updatedInquiry) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/inquiries/update`, JSON.stringify(updatedInquiry), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateInquiryStatus(updatedInquiry) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/inquiries/update-status`, JSON.stringify(updatedInquiry), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /********************************************************************* FILE FUNCTIONS ***********************************************************************/\r\n  getInquiryFilesByID(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/inquiries/${id}/files`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteInquiryFile(id, file) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/inquiries/${id}/files/delete`, JSON.stringify(file), { headers: headers }).map(response => response.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/inquiry.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class JobService {\r\n\r\n  // localHttp: String = 'http://localhost:3000/api';\r\n  localHttp:String = 'api';\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  /********************************************************************* JOB FUNCTIONS ***********************************************************************/\r\n  getAllJobs() {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/all`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getJobById(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/${id}`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getCurrentJobs() {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/all/current`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getCurrentJobsCosts() {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/all/current/costs`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createJob(newJob) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/new`, JSON.stringify(newJob), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteJob(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/delete/${id}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateJob(updatedJob) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/update`, JSON.stringify(updatedJob), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateJobStatus(updatedJob) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/update-status`, JSON.stringify(updatedJob), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /********************************************************************* MATERIAL FUNCTIONS ***********************************************************************/\r\n  getJobMaterialsById(jobId) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/${jobId}/job-materials`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getCurrentJobMaterialsCost(jobId) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/${jobId}/job-materials/cost`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createJobMaterial(id, newJobMaterial) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/${id}/new/job-material`, JSON.stringify(newJobMaterial), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteJobMaterial(materialID, jobID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/${jobID}/delete/job-material/${materialID}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateJobMaterial(updatedJobMaterial) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/modify/job-material`, JSON.stringify(updatedJobMaterial), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /********************************************************************* CHANGE ORDER FUNCTIONS ***********************************************************************/\r\n  createChangeOrder(id, newChangeOrder) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/new/change-order/${id}`, JSON.stringify(newChangeOrder), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getChangeOrdersById(jobId) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/${jobId}/change-orders`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteChangeOrder(changeID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/delete/change-order/${changeID}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateChangeOrder(updateChangeOrder) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/update/change-order`, JSON.stringify(updateChangeOrder), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /********************************************************************* REVENUE FUNCTIONS ***********************************************************************/\r\n  createRevenue(newRevenue) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/create/job-revenue`, JSON.stringify(newRevenue), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getRevenuesById(jobId) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/${jobId}/job-revenues`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteRevenue(revenueID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/remove/revenue/id/${revenueID}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateJobRevenue(updatedJobRevenue) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/change/job-revenue`, JSON.stringify(updatedJobRevenue), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /********************************************************************* LABOR FUNCTIONS ***********************************************************************/\r\n  createLabor(jobID, newLabor) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/${jobID}/create/job-labor`, JSON.stringify(newLabor), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  getLaborsById(jobId) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/${jobId}/job-labors`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteLabor(laborID) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/delete/job-labor/${laborID}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateJobLabor(updatedJobLabor) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/update/job-labor`, JSON.stringify(updatedJobLabor), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  /********************************************************************* FILE FUNCTIONS ***********************************************************************/\r\n  getJobFilesByID(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/jobs/${id}/files`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteJobFile(id, file) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/jobs/${id}/files/delete`, JSON.stringify(file), { headers: headers }).map(response => response.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/job.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class LaborService {\r\n\r\n  // localHttp: String = 'http://localhost:3000/api';\r\n  localHttp:String = 'api';\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  getAllLabors() {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.get(`${this.localHttp}/labors/all`, { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  createLabor(newLabor) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/labors/new`, JSON.stringify(newLabor), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  deleteLabor(id) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/labors/delete/${id}`, JSON.stringify({}), { headers: headers }).map(response => response.json());\r\n  }\r\n\r\n  updateLabor(updatedLabor) {\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/labors/update`, JSON.stringify(updatedLabor), { headers: headers }).map(response => response.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/labor.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class MaterialService {\r\n\r\n  // localHttp:String = 'http://localhost:3000/api';\r\n  localHttp:String = 'api';\r\n\r\n  constructor(\r\n    private http:Http,\r\n    private authService:AuthService\r\n  ) { }\r\n\r\n  getAllMaterials(){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authService.authToken);\r\n    headers.append('Content-Type','application/json');\r\n    return this.http.get(`${this.localHttp}/materials/all`, {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  createMaterial(newMaterial){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization',this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/materials/new`, JSON.stringify(newMaterial), {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  deleteMaterial(id){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/materials/delete/${id}`, JSON.stringify({}), {headers: headers}).map(response => response.json());\r\n  }\r\n\r\n  updateMaterial(updatedMaterial){\r\n    this.authService.loadToken();\r\n    let headers = new Headers();\r\n    headers.append('Content-Type','application/json');\r\n    headers.append('Authorization', this.authService.authToken);\r\n    return this.http.post(`${this.localHttp}/materials/update`, JSON.stringify(updatedMaterial), {headers: headers}).map(response => response.json());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/app/services/material.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/P2742129/Documents/GitHub/Design/angular-src/src/main.ts"],"sourceRoot":"webpack:///"}